{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/Exchange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/Exchange.vue","mtime":1630845244000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService';\nimport getData from '@/pages/trade/navbar/components/data.json';\nimport moment from 'moment';\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      currentxEx: 0,\n      totalExH: 0,\n      isLoading: false,\n      minAmountTrans: 11,\n      amountEnterOne: 1,\n      amountEnterTwo: 0,\n      balanceOne: 0,\n      balanceTwo: 0,\n      isCoinOne: 'PAYPAL',\n      isCoinTwo: 'USDT',\n      disButtonTrans: false,\n      ssDownSend: 'Đổi',\n      backgroundLoading: 'primary',\n      colorLoading: '#fff',\n      totalRCT: 0,\n      currentxCT: 0,\n      dataHisEx: {}\n    };\n  },\n  methods: {\n    replaceAll: function replaceAll(str, find, replace) {\n      return Number(str.replace(new RegExp(find, 'g'), replace));\n    },\n    convertMoney: function convertMoney() {\n      var mE = this.amountEnterOne == '' ? 0 : Number(this.amountEnterOne);\n      this.amountEnterTwo = this.formatPrice(mE * 1, 2); // 1 là giá trị quy đổi ( mặc định USDT là 1)\n    },\n    ttClickAmount: function ttClickAmount(v) {\n      if (v == 1) {\n        // thêm vào 1 nữa số tiền\n        this.amountEnterOne = Number(this.balanceOne) / 2;\n      } else {\n        // thêm vào tất cả\n        this.amountEnterOne = Number(this.balanceOne);\n      }\n\n      this.convertMoney();\n    },\n    transCoin: function transCoin() {\n      if (this.isCoinOne == 'PAYPAL') {\n        this.isCoinOne = 'USDT';\n        this.isCoinTwo = 'PAYPAL';\n        var o = this.balanceOne;\n        var t = this.balanceTwo;\n        this.balanceOne = t;\n        this.balanceTwo = o;\n      } else {\n        this.isCoinOne = 'PAYPAL';\n        this.isCoinTwo = 'USDT';\n        var _o = this.balanceOne;\n        var _t = this.balanceTwo;\n        this.balanceOne = _t;\n        this.balanceTwo = _o;\n      }\n\n      this.balanceOne = this.replaceAll(this.balanceOne.toString(), ',', '');\n    },\n    sendCodeSecure: function sendCodeSecure() {\n      var _this = this;\n\n      this.disButtonTrans = true;\n      this.$vs.loading({\n        //background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n      var giay = 10;\n      var countD = setInterval(function () {\n        _this.ssDownSend = giay + 's';\n\n        if (giay == 0) {\n          _this.disButtonTrans = false;\n\n          _this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n\n          _this.ssDownSend = 'Đổi';\n          clearInterval(countD);\n        }\n\n        giay--;\n      }, 1000);\n    },\n    exChangeSubmit: function exChangeSubmit() {\n      var _this2 = this;\n\n      var am = this.amountEnterOne == '' ? 0 : Number(this.amountEnterOne);\n      var adf = this.minAmountTrans; // kiểm tra nếu số tiền đổi nhỏ hơn 11 USD và có nhỏ hơn số tiền hiện có hay không\n\n      if (am < adf) {\n        return this.$vs.notify({\n          text: \"Gi\\xE1 tr\\u1ECB chuy\\u1EC3n \\u0111\\u1ED5i nh\\u1ECF nh\\u1EA5t l\\xE0 \".concat(adf, \" \").concat(this.isCoinOne),\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      var dfBalance = Number(this.balanceOne);\n\n      if (am > dfBalance) {\n        return this.$vs.notify({\n          text: 'Số dư không đủ để chuyển đổi',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      } // thực hiện quy trình chuyển đổi\n\n\n      this.sendCodeSecure();\n      var obj = {\n        t_s: this.isCoinOne,\n        t_r: this.isCoinTwo,\n        a: am\n      };\n      AuthenticationService.transWallet(obj).then(function (res) {\n        var d = res.data;\n\n        if (d.success == 3 || d.success == 4) {\n          localStorage.removeItem('token');\n\n          _this2.$router.push('/login').catch(function () {});\n\n          return;\n        }\n\n        if (d.success == 1) {\n          _this2.balanceOne = _this2.formatPrice(dfBalance - am, 2);\n          _this2.balanceTwo = _this2.formatPrice(Number(_this2.balanceTwo) + am, 2);\n          return _this2.$vs.notify({\n            text: 'Chuyển đổi thành công',\n            color: 'success',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n      });\n    },\n    getBalanceWallet: function getBalanceWallet() {\n      var _this3 = this;\n\n      AuthenticationService.getBalanceWallet().then(function (res) {\n        var d = res.data;\n\n        if (d.success == 3 || d.success == 4) {\n          localStorage.removeItem('token');\n\n          _this3.$router.push('/login').catch(function () {});\n\n          return;\n        }\n\n        if (d.success) {\n          //let mU = d.data.usdt\n          //let mE = d.data.eth\n          // let mB = d.data.btc\n          var mP = d.data.paypal; //this.balanceUSDT = this.formatPrice(mU, 2)\n          //this.balanceETH = this.formatPrice(mE, 4)\n          //this.balanceBTC = this.formatPrice(mB, 6)\n\n          _this3.balanceOne = _this3.formatPrice(mP, 2);\n          _this3.balanceTwo = _this3.formatPrice(getData.balance, 2);\n        }\n      });\n    },\n    getExChange: function getExChange() {\n      var _this4 = this;\n\n      AuthenticationService.getExChangeUser().then(function (res) {\n        var d = res.data;\n\n        if (d.success == 3 || d.success == 4) {\n          localStorage.removeItem('token');\n\n          _this4.$router.push('/login').catch(function () {});\n\n          return;\n        }\n\n        if (d.success) {\n          var c = (d.count / 10).toString();\n          _this4.totalExH = Number(c.split(\".\")[0]);\n          _this4.dataHisEx = d.data;\n        }\n      });\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    formatDateEx: function formatDateEx(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY HH:mm:ss');\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getExChange();\n    this.getBalanceWallet();\n  }\n};",null]}