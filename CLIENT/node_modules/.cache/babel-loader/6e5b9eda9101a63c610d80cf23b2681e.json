{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/Profile.vue","mtime":1650074336063},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { isMobile } from 'mobile-device-detect';\nimport HoSoUserInfo from '@/pages/trade/slidebar/HoSoUser';\nimport HisOrderBet from '@/pages/trade/slidebar/HisOrderBet.vue';\nimport getData from \"./data.json\";\nimport AuthenticationService from '@/services/AuthenticationService';\nimport I18n from \"./i18n\";\nimport NotificationDropDown from \"@/pages/user/NotifiDropDown.vue\"; //import { gsap } from \"gsap\"\n\nexport default {\n  components: {\n    I18n: I18n,\n    HoSoUserInfo: HoSoUserInfo,\n    NotificationDropDown: NotificationDropDown,\n    HisOrderBet: HisOrderBet\n  },\n  data: function data() {\n    return {\n      popupTransferActive: false,\n      textWalletHtml: '<span class=\"mr-1 color-blue uppercase green\">USDT</span> <span>Wallet</span>',\n      textAccLive: 'Tài khoản Thực',\n      amountAcc: 0,\n      amountAccLive: 0,\n      enterAmount: '',\n      isMenuMobie: false,\n      switchAmThanh: true,\n      popupActiveCaiDat: false,\n      popupActiveNapNhanh: false,\n      numberTween: 1000,\n      counter: false,\n      isAcc: 0,\n      blObj: getData,\n      colorNT: '#0094ff',\n      colorRT: '#fff',\n      // Data Sidebar\n      addNewDataSidebar: false,\n      sidebarData: {},\n      interval: false,\n      showPopWalSL: false,\n      walletIsSelect: 'usdt',\n      balanceUSDT: 0,\n      enterMoneyDeposit: '',\n      ttNhan: 0.00,\n      isMobile: isMobile,\n      countEnterOrder: 0\n    };\n  },\n  props: {\n    number: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    activeUserInfo: function activeUserInfo() {\n      return getData.displayName;\n    }\n  },\n  watch: {\n    number: function number() {\n      clearInterval(this.counter);\n\n      if (this.number === this.numberTween) {\n        return;\n      }\n\n      this.counter = setInterval(function () {\n        if (Math.floor(this.numberTween) !== Math.floor(this.number)) {\n          var change = (this.number - this.numberTween) / 5;\n          change = change >= 0 ? Math.ceil(change) : Math.floor(change);\n          this.numberTween = this.numberTween + change;\n        } else {\n          this.numberTween = this.number;\n          clearInterval(this.counter);\n        }\n      }.bind(this), 20);\n    }\n  },\n  methods: {\n    clickShowPopTrans: function clickShowPopTrans() {\n      this.popupTransferActive = true;\n      this.amountAcc = getData.balance;\n      this.amountAccLive = getData.blLive;\n    },\n    clickTransMoney: function clickTransMoney() {\n      var _this = this;\n\n      var amount = this.enterAmount.toString();\n      amount = this.replaceAll(amount, ',', '');\n      amount = this.replaceAll(amount.toString(), '-', '');\n\n      if (!this.isNumber(amount) || amount <= 0) {\n        return this.$vs.notify({\n          text: 'Giá trị không hợp lệ',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      if (this.typeChange) {\n        // nếu true thì live to wallet\n        // gửi tiền từ live tới tài khoản chính\n        var obj = {\n          email: getData.email,\n          m: amount\n        };\n        AuthenticationService.sendMoneyLiveToUsdt(obj).then(function (res) {\n          if (res.data.success) {\n            getData.blLive -= amount;\n            getData.balance += amount;\n            _this.amountAcc = getData.blLive;\n            _this.amountAccLive = getData.balance; // reload lại lịch sử\n\n            _this.getListHisTradeWGD();\n\n            return _this.$vs.notify({\n              text: 'Chuyển tiền thành công',\n              color: 'success',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-check'\n            });\n          } else {\n            return _this.$vs.notify({\n              text: 'Số dư của bạn không đủ',\n              color: 'danger',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-x-circle'\n            });\n          }\n        });\n      } else {\n        // wallet to live\n        // gửi tiền từ tài khoản chính tới live\n        var _obj = {\n          email: getData.email,\n          m: amount\n        };\n        AuthenticationService.sendMoneyUsdtToLive(_obj).then(function (res) {\n          if (res.data.success) {\n            getData.blLive = getData.blLive + amount;\n            getData.balance = getData.balance - amount;\n            _this.amountAcc = getData.balance;\n            _this.amountAccLive = getData.blLive; // reload lại lịch sử\n\n            _this.getListHisTradeWGD();\n\n            return _this.$vs.notify({\n              text: 'Chuyển tiền thành công',\n              color: 'success',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-check'\n            });\n          } else {\n            return _this.$vs.notify({\n              text: 'Số dư của bạn không đủ',\n              color: 'danger',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-x-circle'\n            });\n          }\n        });\n      }\n    },\n    changeTransMoney: function changeTransMoney() {\n      if (this.typeChange) {\n        // Live to Wallet  \n        this.typeChange = false;\n        var b = this.textWalletHtml;\n        var a = this.textAccLive;\n        var d = getData.balance;\n        var c = getData.blLive;\n        this.textAccLive = b;\n        this.textWalletHtml = a;\n        this.amountAcc = d;\n        this.amountAccLive = c;\n      } else {\n        // Live to Wallet\n        this.typeChange = true;\n        var _a = this.textWalletHtml;\n        var _b = this.textAccLive;\n        var _c = getData.balance;\n        var _d = getData.blLive;\n        this.textAccLive = _a;\n        this.textWalletHtml = _b;\n        this.amountAcc = _d;\n        this.amountAccLive = _c;\n      }\n    },\n    enterAllMoney: function enterAllMoney() {\n      if (this.typeChange) {\n        // nếu true thì live to wallet\n        this.enterAmount = getData.blLive;\n      } else {\n        // wallet to live\n        this.enterAmount = getData.balance;\n      }\n    },\n    // numberTo(start, end, duration, currency = false){\n    //   console.log()\n    //   this.blanceStart = end\n    //   clearInterval(mm);\n    //   var range = end - start;\n    //   var minTimer = 50;\n    //   var stepTime = Math.abs(Math.floor(duration / range));\n    //   stepTime = Math.max(stepTime, minTimer);\n    //   var startTime = new Date().getTime();\n    //   var endTime = startTime + duration;\n    //   var mm = setInterval(() => {\n    //       var now = new Date().getTime();\n    //       var remaining = Math.max((endTime - now) / duration, 0);\n    //       var value = (end - (remaining * range))>>0;\n    //       var blance = currency ? this.formatPrice(value, 2) : value;\n    //       this.isAcc ? getData.blLive = blance : getData.blDemo = blance\n    //       if (value == end) {\n    //         clearInterval(mm);\n    //       }\n    //   }, stepTime);\n    // },\n    OnOffSound: function OnOffSound() {\n      if (this.switchAmThanh) {\n        localStorage.setItem('SOUND', true);\n      } else {\n        localStorage.setItem('SOUND', false);\n      }\n    },\n    ttThucNhan: function ttThucNhan(e) {\n      var amount = e.currentTarget.value;\n      amount = this.replaceAll(amount, ',', '');\n      amount = this.replaceAll(amount.toString(), '-', '');\n\n      if (!this.isNumber(amount) || amount <= 0) {\n        return this.$vs.notify({\n          text: 'Giá trị không hợp lệ',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      this.ttNhan = this.formatPrice(amount, 2);\n    },\n    submitDeposit: function submitDeposit() {\n      var _this2 = this;\n\n      var amount = this.ttNhan;\n      amount = this.replaceAll(amount.toString(), ',', '');\n      amount = this.replaceAll(amount.toString(), '-', '');\n\n      if (amount <= 0) {\n        return this.$vs.notify({\n          text: 'Giá trị không hợp lệ',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      if (amount < 11) {\n        return this.$vs.notify({\n          text: 'Số tiền tối thiểu không đủ',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      var obj = {\n        money: amount,\n        id: getData.uidLive\n      };\n      AuthenticationService.depositWallet(obj).then(function (res) {\n        if (res.data.success == 1) {\n          getData.balance -= amount;\n          getData.blLive += amount;\n\n          _this2.$vs.notify({\n            text: 'Nạp tiền thành công.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'success'\n          });\n        } else if (res.data.success == 3) {\n          _this2.$vs.notify({\n            text: 'Số dư bạn không đủ.',\n            color: 'danger',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-x-circle'\n          });\n        } else {\n          _this2.$vs.notify({\n            text: 'Giá trị không hợp lệ',\n            color: 'danger',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-x-circle'\n          });\n        }\n      });\n    },\n    allEnterWallet: function allEnterWallet() {\n      this.ttNhan = this.formatPrice(getData.balance, 2);\n      this.enterMoneyDeposit = this.formatPrice(getData.balance, 2);\n    },\n    selectWallet: function selectWallet(val) {\n      this.walletIsSelect = val;\n      this.showPopWalSL = false;\n    },\n    reloadBalanceDemo: function reloadBalanceDemo() {\n      var _this3 = this;\n\n      $('.dropdown-account').hide();\n      AuthenticationService.reloadMoneyDemo().then(function (res) {\n        if (res.data.success) {\n          getData.blDemo = 1000;\n\n          _this3.$vs.notify({\n            text: 'Tài khoản Demo đã nạp.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'success'\n          });\n        }\n      });\n    },\n    getBalanceWalletClick: function getBalanceWalletClick() {\n      var _this4 = this;\n\n      AuthenticationService.getBalanceWallet().then(function (res) {\n        if (res.data.success) {\n          var mU = res.data.data.usdt;\n          _this4.balanceUSDT = _this4.formatPrice(mU, 2);\n        }\n      });\n    },\n    changeAccount: function changeAccount(val) {\n      if (val) {\n        localStorage.setItem('BO_BALANCE_TYPE', 'LIVE');\n        this.isAcc = getData.isAccount = 1;\n      } else {\n        localStorage.setItem('BO_BALANCE_TYPE', 'DEMO');\n        this.isAcc = getData.isAccount = 0;\n      }\n    },\n    replaceAll: function replaceAll(str, find, replace) {\n      return Number(str.replace(new RegExp(find, 'g'), replace));\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    isNumber: function isNumber(value) {\n      return typeof value === 'number' && isFinite(value);\n    },\n    viewHoSo: function viewHoSo() {\n      this.toggleDataSidebar(true);\n    },\n    viewHelp: function viewHelp() {\n      this.$router.push('/ho-tro').catch(function () {});\n    },\n    toggleDataSidebarHisOrder: function toggleDataSidebarHisOrder() {\n      this.$store.commit('TOGGLE_IS_OPEN_SIDEBAR');\n    },\n    toggleDataSidebar: function toggleDataSidebar() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.addNewDataSidebar = val;\n    },\n    logout: function logout() {\n      // // if user is logged in via auth0\n      // if (this.$auth.profile) this.$auth.logOut();\n      // // if user is logged in via firebase\n      // const firebaseCurrentUser = firebase.auth().currentUser\n      // if (firebaseCurrentUser) {\n      //     firebase.auth().signOut().then(() => {\n      //         this.$router.push('/pages/login').catch(() => {})\n      //     })\n      // }\n      // // If JWT login\n      // if(localStorage.getItem(\"accessToken\")) {\n      //   localStorage.removeItem(\"accessToken\")\n      //   this.$router.push('/pages/login').catch(() => {})\n      // }\n      // // Change role on logout. Same value as initialRole of acj.js\n      // this.$acl.change('admin')\n      // localStorage.removeItem('userInfo')\n      localStorage.removeItem('tokenUser'); // This is just for demo Purpose. If user clicks on logout -> redirect\n\n      this.$router.push('/login').catch(function () {});\n    }\n  },\n  created: function created() {\n    var checkSound = localStorage.hasOwnProperty('SOUND');\n\n    if (!checkSound) {\n      localStorage.setItem('SOUND', true);\n    } else {\n      var getS = localStorage.getItem('SOUND');\n\n      if (getS === 'false') {\n        this.switchAmThanh = false;\n      }\n    }\n\n    this.blanceStart = this.isAcc ? getData.blLive : getData.blDemo;\n    var acc = localStorage.getItem('BO_BALANCE_TYPE');\n\n    if (acc == 'LIVE') {\n      this.isAcc = getData.isAccount = 1;\n    } else {\n      this.isAcc = getData.isAccount = 0;\n    }\n  },\n  mounted: function mounted() {\n    var _this5 = this;\n\n    var stateOpen = localStorage.getItem('stateOpen');\n\n    if (stateOpen) {\n      var list = JSON.parse(stateOpen);\n\n      if (list) {\n        this.countEnterOrder = list.l.bet[0].items.length;\n      } else {\n        this.countEnterOrder = 0;\n      }\n    }\n\n    window.addEventListener('stateOpen-localstorage-changed', function (event) {\n      if (!event.detail.storage) {\n        _this5.countEnterOrder = 0;\n        return;\n      }\n\n      var list = JSON.parse(event.detail.storage);\n\n      if (list) {\n        _this5.countEnterOrder = list.l.bet[0].items.length;\n      } else {\n        _this5.countEnterOrder = 0;\n      }\n    });\n  }\n};",null]}