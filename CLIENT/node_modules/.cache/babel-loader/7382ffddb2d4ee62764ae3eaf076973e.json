{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/calendar/moduleCalendarActions.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/calendar/moduleCalendarActions.js","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleCalendarActions.js\n  Description: Calendar Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nexport default {\n  addEvent: function addEvent(_ref, event) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/calendar/events/\", {\n        event: event\n      }).then(function (response) {\n        commit('ADD_EVENT', Object.assign(event, {\n          id: response.data.id\n        }));\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  fetchEvents: function fetchEvents(_ref2) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/calendar/events\").then(function (response) {\n        commit('SET_EVENTS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  fetchEventLabels: function fetchEventLabels(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/calendar/labels\").then(function (response) {\n        commit('SET_LABELS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  editEvent: function editEvent(_ref4, event) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/calendar/event/\".concat(event.id), {\n        event: event\n      }).then(function (response) {\n        // Convert Date String to Date Object\n        var event = response.data;\n        event.startDate = new Date(event.startDate);\n        event.endDate = new Date(event.endDate);\n        commit('UPDATE_EVENT', event);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  removeEvent: function removeEvent(_ref5, eventId) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.delete(\"/api/apps/calendar/event/\".concat(eventId)).then(function (response) {\n        commit('REMOVE_EVENT', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  eventDragged: function eventDragged(_ref6, payload) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/calendar/event/dragged/\".concat(payload.event.id), {\n        payload: payload\n      }).then(function (response) {\n        // Convert Date String to Date Object\n        var event = response.data;\n        event.startDate = new Date(event.startDate);\n        event.endDate = new Date(event.endDate);\n        commit('UPDATE_EVENT', event);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",null]}