{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/ui-elements/ag-grid-table/AgGridTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/ui-elements/ag-grid-table/AgGridTable.vue","mtime":1572931790000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AgGridVue } from \"ag-grid-vue\";\nimport contacts from \"./data.json\";\nimport '@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss';\nexport default {\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      searchQuery: '',\n      gridOptions: {},\n      maxPageNumbers: 7,\n      gridApi: null,\n      defaultColDef: {\n        sortable: true,\n        editable: true,\n        resizable: true,\n        suppressMenu: true\n      },\n      columnDefs: [{\n        headerName: 'First Name',\n        field: 'firstname',\n        width: 175,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      }, {\n        headerName: 'Last Name',\n        field: 'lastname',\n        filter: true,\n        width: 175\n      }, {\n        headerName: 'Email',\n        field: 'email',\n        filter: true,\n        width: 250,\n        pinned: 'left'\n      }, {\n        headerName: 'Company',\n        field: 'company',\n        filter: true,\n        width: 250\n      }, {\n        headerName: 'City',\n        field: 'city',\n        filter: true,\n        width: 150\n      }, {\n        headerName: 'Country',\n        field: 'country',\n        filter: true,\n        width: 150\n      }, {\n        headerName: 'State',\n        field: 'state',\n        filter: true,\n        width: 125\n      }, {\n        headerName: 'Zip',\n        field: 'zip',\n        filter: true,\n        width: 125\n      }, {\n        headerName: 'Followers',\n        field: 'followers',\n        filter: \"agNumberColumnFilter\",\n        width: 125\n      }],\n      contacts: contacts\n    };\n  },\n  watch: {\n    '$store.state.windowWidth': function $storeStateWindowWidth(val) {\n      if (val <= 576) {\n        this.maxPageNumbers = 4;\n        this.gridOptions.columnApi.setColumnPinned('email', null);\n      } else this.gridOptions.columnApi.setColumnPinned('email', 'left');\n    }\n  },\n  computed: {\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 50;\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    }\n  },\n  methods: {\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    }\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    /* =================================================================\n      NOTE:\n      Header is not aligned properly in RTL version of agGrid table.\n      However, we given fix to this issue. If you want more robust solution please contact them at gitHub\n    ================================================================= */\n\n    if (this.$vs.rtl) {\n      var header = this.$refs.agGridTable.$el.querySelector(\".ag-header-container\");\n      header.style.left = \"-\" + String(Number(header.style.transform.slice(11, -3)) + 9) + \"px\";\n    }\n  }\n};",null]}