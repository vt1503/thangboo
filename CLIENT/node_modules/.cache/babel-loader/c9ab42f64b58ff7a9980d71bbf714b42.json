{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/user/UserView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/user/UserView.vue","mtime":1573727644000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moduleUserManagement from '@/store/user-management/moduleUserManagement.js';\nexport default {\n  data: function data() {\n    return {\n      user_data: null,\n      user_not_found: false\n    };\n  },\n  computed: {\n    userAddress: function userAddress() {\n      var str = \"\";\n\n      for (var field in this.user_data.location) {\n        str += field + \" \";\n      }\n\n      return str;\n    }\n  },\n  methods: {\n    confirmDeleteRecord: function confirmDeleteRecord() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirm Delete\",\n        text: \"You are about to delete \\\"\".concat(this.user_data.username, \"\\\"\"),\n        accept: this.deleteRecord,\n        acceptText: \"Delete\"\n      });\n    },\n    deleteRecord: function deleteRecord() {\n      /* Below two lines are just for demo purpose */\n      this.$router.push({\n        name: 'app-user-list'\n      });\n      this.showDeleteSuccess();\n      /* UnComment below lines for enabling true flow if deleting user */\n      // this.$store.dispatch(\"userManagement/removeRecord\", this.user_data.id)\n      //   .then(()   => { this.$router.push({name:'app-user-list'}); this.showDeleteSuccess() })\n      //   .catch(err => { console.error(err)       })\n    },\n    showDeleteSuccess: function showDeleteSuccess() {\n      this.$vs.notify({\n        color: 'success',\n        title: 'User Deleted',\n        text: 'The selected user was successfully deleted'\n      });\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    // Register Module UserManagement Module\n    if (!moduleUserManagement.isRegistered) {\n      this.$store.registerModule('userManagement', moduleUserManagement);\n      moduleUserManagement.isRegistered = true;\n    }\n\n    var userId = this.$route.params.userId;\n    this.$store.dispatch(\"userManagement/fetchUser\", userId).then(function (res) {\n      _this.user_data = res.data;\n    }).catch(function (err) {\n      if (err.response.status === 404) {\n        _this.user_not_found = true;\n        return;\n      }\n\n      console.error(err);\n    });\n  }\n};",null]}