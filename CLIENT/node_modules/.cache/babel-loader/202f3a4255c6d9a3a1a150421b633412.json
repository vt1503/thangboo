{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/fake-db/data/apps/chat/index.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/fake-db/data/apps/chat/index.js","mtime":1573138056000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport mock from \"@/fake-db/mock.js\"; // Contact\n\nvar data = {\n  contacts: [{\n    uid: 1,\n    displayName: 'Felecia Rower',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-1.jpg\"),\n    status: 'offline'\n  }, {\n    uid: 2,\n    displayName: 'Adalberto Granzin',\n    about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-2.jpg\"),\n    status: 'do not disturb'\n  }, {\n    uid: 3,\n    displayName: 'Joaquina Weisenborn',\n    about: 'Souffl√© souffl√© caramels sweet roll. Jelly lollipop sesame snaps bear claw jelly beans sugar plum sugar plum.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-3.jpg\"),\n    status: 'do not disturb'\n  }, {\n    uid: 4,\n    displayName: 'Verla Morgano',\n    about: 'Chupa chups candy canes chocolate bar marshmallow liquorice muffin. Lemon drops oat cake tart liquorice tart cookie. Jelly-o cookie tootsie roll halvah.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-4.jpg\"),\n    status: 'online'\n  }, {\n    uid: 5,\n    displayName: 'Margot Henschke',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-5.jpg\"),\n    status: 'do not disturb'\n  }, {\n    uid: 6,\n    displayName: 'Sal Piggee',\n    about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-6.jpg\"),\n    status: 'online'\n  }, {\n    uid: 7,\n    displayName: 'Miguel Guelff',\n    about: 'Biscuit powder oat cake donut brownie ice cream I love souffl√©. I love tootsie roll I love powder tootsie roll.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-7.jpg\"),\n    status: 'online'\n  }, {\n    uid: 8,\n    displayName: 'Mauro Elenbaas',\n    about: 'Bear claw ice cream lollipop gingerbread carrot cake. Brownie gummi bears chocolate muffin croissant jelly I love marzipan wafer.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-8.jpg\"),\n    status: 'away'\n  }, {\n    uid: 9,\n    displayName: 'Bridgett Omohundro',\n    about: 'Gummies gummi bears I love candy icing apple pie I love marzipan bear claw. I love tart biscuit I love candy canes pudding chupa chups liquorice croissant.',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-9.jpg\"),\n    status: 'offline'\n  }, {\n    uid: 10,\n    displayName: 'Zenia Jacobs',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require(\"@/assets/images/portrait/small/avatar-s-10.jpg\"),\n    status: 'away'\n  }],\n  chats: {\n    1: {\n      isPinned: true,\n      msg: [{\n        textContent: 'How can we help? We\\'re here for you!',\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n        time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'It should be Bootstrap 4 compatible.',\n        time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Absolutely!',\n        time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Modern admin is the responsive bootstrap 4 admin template.!',\n        time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Looks clean and fresh UI.',\n        time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'It\\'s perfect for my next project.',\n        time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'How can I purchase it?',\n        time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Thanks, from ThemeForest.',\n        time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'I will purchase it for sure. üëç',\n        time: 'Mon Dec 10 2018 07:47:00 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: false\n      }]\n    },\n    2: {\n      isPinned: false,\n      msg: [{\n        textContent: 'Hi',\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Hello. How can I help You?',\n        time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Can I get details of my last transaction I made last month?',\n        time: 'Mon Dec 11 2018 07:46:10 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'We need to check if we can provide you such information.',\n        time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'I will inform you as I get update on this.',\n        time: 'Mon Dec 11 2018 07:46:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'If it takes long you can mail me at my mail address.',\n        time: 'Mon Dec 11 2018 07:46:20 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: false\n      }]\n    }\n  }\n}; // Functions\n\nvar chatDataOfUser = function chatDataOfUser(id) {\n  return data.chats[Object.keys(data.chats).find(function (key) {\n    return key == id;\n  })];\n}; // GET : Contacts List\n\n\nmock.onGet(\"/api/apps/chat/contacts\").reply(function (request) {\n  // Filter contact based on search query\n  var filteredContacts = data.contacts.filter(function (contact) {\n    return contact.displayName.toLowerCase().includes(request.params.q.toLowerCase());\n  });\n  return [200, filteredContacts];\n}); // GET : Get All Contacts\n\nmock.onGet(\"/api/apps/chat/contacts\").reply(function () {\n  return [200, data.contacts];\n}); // GET : Get All Chats\n\nmock.onGet(\"/api/apps/chat/chats\").reply(function () {\n  return [200, data.chats];\n}); // GET : Chats List\n\nmock.onGet(\"/api/apps/chat/chat-contacts\").reply(function (request) {\n  var chatContactsArray = data.contacts.filter(function (contact) {\n    if (data.chats[contact.uid]) return data.chats[contact.uid] && contact.displayName.toLowerCase().includes(request.params.q.toLowerCase());\n  });\n  return [200, chatContactsArray];\n}); // POST : Mark all msgs as seen\n\nmock.onPost(\"/api/apps/chat/mark-all-seen/\").reply(function (request) {\n  var contactId = JSON.parse(request.data).contactId; // Get chat data\n\n  var chatLog = chatDataOfUser(contactId); // console.log(chatLog);\n\n  chatDataOfUser(1) == chatLog; // Loop over all msg & mark them as seen\n\n  chatLog.msg.forEach(function (msg) {\n    msg.isSeen = true;\n  }); // Set unsen Msg flag to 0\n\n  chatLog.unseenMsg = 0; // console.log(data.chats[0] == chatDataOfUser(contactId));\n\n  return [200];\n});\nmock.onPost(\"/api/apps/chat/set-pinned/\").reply(function (request) {\n  var _JSON$parse = JSON.parse(request.data),\n      contactId = _JSON$parse.contactId,\n      value = _JSON$parse.value;\n\n  var index = Object.keys(data.chats).find(function (key) {\n    return key == contactId;\n  });\n  data.chats[index].isPinned = value;\n  return [200, data.chats[index]];\n});\nmock.onPost(\"/api/apps/chat/msg\").reply(function (request) {\n  var payload = JSON.parse(request.data).payload; // Get chat data\n\n  payload.chatData = chatDataOfUser(payload.id);\n\n  if (payload.chatData) {\n    // If there's already chat. Push msg to existing chat\n    data.chats[Object.keys(data.chats).find(function (key) {\n      return key == payload.id;\n    })].msg.push(payload.msg);\n  } else {\n    // Create New chat and add msg\n    data.chats[payload.id] = {\n      isPinned: payload.isPinned,\n      msg: [payload.msg]\n    };\n  }\n\n  return [200];\n});\nmock.onPost(\"/api/apps/chat/mark-all-seen\").reply(function (request) {\n  var uid = JSON.parse(request.data).id; // Get chat data\n\n  var chatLog = chatDataOfUser(uid);\n  chatLog.msg.forEach(function (msg) {\n    msg.isSeen = true;\n  });\n  return [200];\n});",null]}