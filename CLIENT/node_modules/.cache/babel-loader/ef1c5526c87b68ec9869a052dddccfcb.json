{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/chat/moduleChatActions.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/chat/moduleChatActions.js","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleChatActions.js\n  Description: Chat Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nexport default {\n  setChatSearchQuery: function setChatSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit('SET_CHAT_SEARCH_QUERY', query);\n  },\n  updateAboutChat: function updateAboutChat(_ref2, value) {\n    var commit = _ref2.commit,\n        rootState = _ref2.rootState;\n    commit('UPDATE_ABOUT_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  updateStatusChat: function updateStatusChat(_ref3, value) {\n    var commit = _ref3.commit,\n        rootState = _ref3.rootState;\n    commit('UPDATE_STATUS_CHAT', {\n      rootState: rootState,\n      value: value\n    });\n  },\n  // API CALLS\n  sendChatMessage: function sendChatMessage(_ref4, payload) {\n    var getters = _ref4.getters,\n        commit = _ref4.commit,\n        dispatch = _ref4.dispatch;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/msg\", {\n        payload: payload\n      }).then(function (response) {\n        payload.chatData = getters.chatDataOfUser(payload.id);\n\n        if (!payload.chatData) {\n          dispatch(\"fetchChatContacts\");\n        }\n\n        commit('SEND_CHAT_MESSAGE', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get contacts from server. Also change in store\n  fetchContacts: function fetchContacts(_ref5) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/contacts\", {\n        params: {\n          q: \"\"\n        }\n      }).then(function (response) {\n        commit('UPDATE_CONTACTS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get chat-contacts from server. Also change in store\n  fetchChatContacts: function fetchChatContacts(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/chat-contacts\", {\n        params: {\n          q: \"\"\n        }\n      }).then(function (response) {\n        commit('UPDATE_CHAT_CONTACTS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Get chats from server. Also change in store\n  fetchChats: function fetchChats(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/chat/chats\").then(function (response) {\n        commit('UPDATE_CHATS', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  markSeenAllMessages: function markSeenAllMessages(_ref8, id) {\n    var getters = _ref8.getters,\n        commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/mark-all-seen\", {\n        id: id\n      }).then(function (response) {\n        commit('MARK_SEEN_ALL_MESSAGES', {\n          id: id,\n          chatData: getters.chatDataOfUser(id)\n        });\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  toggleIsPinned: function toggleIsPinned(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/chat/set-pinned/\", {\n        contactId: payload.id,\n        value: payload.value\n      }).then(function (response) {\n        commit('TOGGLE_IS_PINNED', payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",null]}