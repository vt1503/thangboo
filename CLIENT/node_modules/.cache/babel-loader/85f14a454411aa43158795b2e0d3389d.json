{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/email/moduleEmailMutations.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/email/moduleEmailMutations.js","mtime":1570195624000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/*=========================================================================================\n  File Name: moduleEmailMutations.js\n  Description: Email Module Mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nexport default {\n  SET_EMAIL_SEARCH_QUERY: function SET_EMAIL_SEARCH_QUERY(state, query) {\n    state.mailSearchQuery = query;\n  },\n  SET_MAILS: function SET_MAILS(state, mails) {\n    state.mails = mails;\n  },\n  SET_TAGS: function SET_TAGS(state, tags) {\n    state.mailTags = tags;\n  },\n  SET_META: function SET_META(state, meta) {\n    state.meta = meta;\n  },\n  UPDATE_MAIL_FILTER: function UPDATE_MAIL_FILTER(state, filterName) {\n    state.mail_filter = filterName;\n  },\n  UPDATE_LABELS: function UPDATE_LABELS(state, payload) {\n    payload.mails.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      });\n      var index = state.mails[mailIndex].labels.indexOf(payload.label);\n      if (index == -1) state.mails[mailIndex].labels.push(payload.label);else state.mails[mailIndex].labels.splice(index, 1);\n    });\n  },\n  SET_LABELS: function SET_LABELS(state, payload) {\n    state.mails.find(function (mail) {\n      return mail.id === payload.mailId;\n    }).labels = payload.labels;\n  },\n  SET_UNREAD: function SET_UNREAD(state, payload) {\n    payload.emailIds.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      });\n      if (mailIndex !== -1) state.mails[mailIndex].unread = payload.unreadFlag;\n    });\n  },\n  MOVE_MAILS_TO: function MOVE_MAILS_TO(state, payload) {\n    payload.emailIds.forEach(function (mailId) {\n      var mailIndex = state.mails.findIndex(function (mail) {\n        return mail.id == mailId;\n      }); // Update draft meta\n      // If moving from draft mailFolder decrease draft meta by removing mailId\n\n      state.mails[mailIndex].mailFolder === \"draft\" ? state.meta.draftMails.splice(state.meta.draftMails.findIndex(function (i) {\n        return i === mailId;\n      }), 1) : null; // Else increase by pushing mailId\n\n      payload.to === \"draft\" ? state.meta.draftMails.push(mailId) : null;\n      state.mails[mailIndex].mailFolder = payload.to;\n    });\n  },\n  TOGGLE_IS_MAIL_STARRED: function TOGGLE_IS_MAIL_STARRED(state, payload) {\n    state.mails.find(function (mail) {\n      return mail.id === payload.mailId;\n    }).isStarred = payload.value;\n  },\n  // If your process of fetching is different than ours. Please update action and mutation\n  // Maybe this mutation is redundant for you. Feel free to remove it.\n  UPDATE_UNREAD_META: function UPDATE_UNREAD_META(state, payload) {\n    var _loop = function _loop(folder) {\n      // If folder is same as current filter\n      if (folder == state.mail_filter) {\n        // If unread flag is true - increase count\n        if (payload.unreadFlag) {\n          payload.emailIds.forEach(function (mailId) {\n            if (state.meta.unreadMails.folder[folder].indexOf(mailId) === -1) state.meta.unreadMails.folder[folder].push(mailId);\n          });\n        } // else reduce unread mails count\n        else {\n            payload.emailIds.forEach(function (mailId) {\n              var mailIdIndex = state.meta.unreadMails.folder[folder].indexOf(mailId);\n              if (mailIdIndex !== -1) state.meta.unreadMails.folder[folder].splice(mailIdIndex, 1);\n            });\n          }\n      }\n    };\n\n    // Loop over email meta\n    for (var folder in state.meta.unreadMails.folder) {\n      _loop(folder);\n    }\n  },\n  UPDATE_UNREAD_META_ON_MOVE: function UPDATE_UNREAD_META_ON_MOVE(state, payload) {\n    // Updating Draft meta is handled by \"MOVE_MAILS_TO\" mutation\n    payload.emailIds.forEach(function (mailId) {\n      var mail = state.mails.find(function (mail) {\n        return mail.id == mailId;\n      });\n\n      if (mail.unread) {\n        var cf_unread_mails = state.meta.unreadMails.folder[state.mail_filter];\n\n        if (cf_unread_mails) {\n          cf_unread_mails.splice(cf_unread_mails.indexOf(mailId), 1);\n        }\n\n        if (state.meta.unreadMails.folder[payload.to]) state.meta.unreadMails.folder[payload.to].push(mailId);\n      }\n    });\n  }\n};",null]}