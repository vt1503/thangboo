{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/account/slidebar/DataViewSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/account/slidebar/DataViewSidebar.vue","mtime":1640931778000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport AuthenticationService from '@/services/AuthenticationService';\nimport SETTINGS from \"../../../../settings.json\";\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(val) {\n      if (!val) return;\n\n      if (Object.entries(this.data).length === 0) {\n        this.initValues();\n        this.$validator.reset();\n      } else {\n        var _JSON$parse = JSON.parse(JSON.stringify(this.data)),\n            email = _JSON$parse.email,\n            id = _JSON$parse.id,\n            nick_name = _JSON$parse.nick_name,\n            first_name = _JSON$parse.first_name,\n            last_name = _JSON$parse.last_name,\n            money_vn = _JSON$parse.money_vn,\n            money_btc = _JSON$parse.money_btc,\n            money_eth = _JSON$parse.money_eth,\n            money_usdt = _JSON$parse.money_usdt,\n            profile_image = _JSON$parse.profile_image,\n            type = _JSON$parse.type,\n            vip_user = _JSON$parse.vip_user,\n            super_user = _JSON$parse.super_user,\n            level_vip = _JSON$parse.level_vip;\n\n        this.dataId = id;\n        this.dataEmail = email;\n        this.dataNick = nick_name;\n        this.dataFirstName = first_name;\n        this.dataLastName = last_name;\n        this.dataMoneyVN = money_vn;\n        this.dataMoneyBTC = this.formatPrice(money_btc, 6);\n        this.dataMoneyETH = this.formatPrice(money_eth, 4);\n        this.dataMoneyUSDT = this.formatPrice(money_usdt, 2);\n        this.dataImg = profile_image;\n        this.dataPassword = '';\n        this.dataPermission = vip_user;\n        this.superUser = super_user;\n        this.dataType = type;\n        this.addDataMoneyVN = 0;\n        this.addDataMoneyBTC = this.formatPrice(0, 6);\n        this.addDataMoneyETH = this.formatPrice(0, 4);\n        this.addDataMoneyUSDT = this.formatPrice(0, 2);\n        this.isLevelVIP = level_vip;\n        this.initValues();\n      } // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n\n    }\n  },\n  data: function data() {\n    return {\n      //   dataId: null,\n      //   dataName: \"\",\n      //   dataCategory: null,\n      //   dataImg: null,\n      //   dataOrder_status: \"pending\",\n      //   dataPrice: 0,\n      dm: SETTINGS.BASE_URL,\n      superUser: 0,\n      dataId: null,\n      dataEmail: '',\n      dataNick: '',\n      dataFirstName: '',\n      dataLastName: '',\n      dataMoneyVN: 0,\n      dataMoneyBTC: 0,\n      dataMoneyETH: 0,\n      dataMoneyUSDT: 0,\n      dataImg: null,\n      dataPassword: '',\n      dataPermission: 0,\n      dataType: null,\n      addDataMoneyVN: 0,\n      addDataMoneyBTC: 0,\n      addDataMoneyETH: 0,\n      addDataMoneyUSDT: 0,\n      category_choices: [//{text:'Quản trị viên',value: 1},\n      {\n        text: 'Đại lý ( VIP )',\n        value: 1\n      }, {\n        text: 'Thành viên',\n        value: 0\n      }],\n      category_level: [{\n        text: 'Cấp 0',\n        value: 0\n      }, {\n        text: 'Cấp 1',\n        value: 1\n      }, {\n        text: 'Cấp 2',\n        value: 2\n      }, {\n        text: 'Cấp 3',\n        value: 3\n      }, {\n        text: 'Cấp 4',\n        value: 4\n      }, {\n        text: 'Cấp 5',\n        value: 5\n      }, {\n        text: 'Cấp 6',\n        value: 6\n      }, {\n        text: 'Cấp 7',\n        value: 7\n      }],\n      isLevelVIP: 0,\n      //   order_status_choices: [\n      //     {text:'Pending',value:'pending'},\n      //     {text:'Canceled',value:'canceled'},\n      //     {text:'Delivered',value:'delivered'},\n      //     {text:'On Hold',value:'on_hold'}\n      //   ],\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  //   filters: {\n  //     currencydecimal (val) {\n  //       if(val == 'BTC') return val.toFixed(6)\n  //       if(val == 'ETH') return val.toFixed(4)\n  //       return val.toFixed(2)\n  //     }\n  //   },\n  computed: {\n    isSidebarActiveLocal: {\n      get: function get() {\n        return this.isSidebarActive;\n      },\n      set: function set(val) {\n        if (!val) {\n          this.$emit('closeSidebar'); // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    },\n    isFormValid: function isFormValid() {\n      if (this.dataType != 'addMoney') {\n        return !this.errors.any() && this.dataEmail && this.dataNick && this.dataFirstName && this.dataLastName;\n      } else {\n        return this.addDataMoneyVN >= 0 && this.addDataMoneyBTC >= 0 && this.addDataMoneyETH >= 0 && this.addDataMoneyUSDT >= 0;\n      } //return !this.errors.any() && this.dataName && this.dataCategory && (this.dataPrice > 0)\n\n    }\n  },\n  methods: {\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    initValues: function initValues() {\n      if (this.data.id) return;\n      this.dataId = null;\n      this.dataEmail = '';\n      this.dataNick = '';\n      this.dataFirstName = '';\n      this.dataLastName = '';\n      this.dataMoneyVN = 0;\n      this.dataMoneyBTC = 0;\n      this.dataMoneyETH = 0;\n      this.dataMoneyUSDT = 0;\n      this.superUser = 0;\n      this.dataImg = null;\n      this.dataPassword = '';\n      this.dataPermission = 0;\n      this.dataType = null;\n      this.addDataMoneyVN = 0;\n      this.addDataMoneyBTC = 0;\n      this.addDataMoneyETH = 0;\n      this.addDataMoneyUSDT = 0;\n    },\n    submitDataUpdateMoney: function submitDataUpdateMoney() {\n      var _this = this;\n\n      var obj = {\n        id: this.dataId,\n        nick_name: this.dataNick,\n        email: this.dataEmail,\n        type: 1,\n        // 1: marketing, 0: member\n        money_paypal: 0,\n        money_btc: this.addDataMoneyBTC,\n        money_eth: this.addDataMoneyETH,\n        money_usdt: this.addDataMoneyUSDT,\n        money_vn: this.addDataMoneyVN\n      };\n      AuthenticationService.updatePriceMember(obj).then(function (resp) {\n        if (resp.data.success) {\n          return _this.$vs.notify({\n            text: 'Đã cộng tiền thành công cho ' + _this.dataNick,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        } else {\n          if (!resp.data.l) {\n            return _this.$vs.notify({\n              text: 'Thời gian đăng nhập đã hết, vui lòng đăng nhập lại để sử dụng',\n              color: 'danger',\n              iconPack: 'feather',\n              icon: 'icon-alert-circle'\n            });\n          }\n\n          return _this.$vs.notify({\n            text: resp.data.message,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-circle'\n          });\n        }\n      });\n    },\n    submitDataUpdateUser: function submitDataUpdateUser() {\n      var _this2 = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          var obj = {\n            id: _this2.dataId,\n            nick_name: _this2.dataNick,\n            first_name: _this2.dataFirstName,\n            last_name: _this2.dataLastName,\n            email: _this2.dataEmail,\n            vip_user: _this2.dataPermission,\n            level_vip: _this2.isLevelVIP,\n            active: 1\n          };\n\n          if (_this2.dataPassword != '') {\n            obj.password = _this2.dataPassword;\n          } // thêm mới tài khoản\n\n\n          if (Object.entries(_this2.data).length == 0) {\n            AuthenticationService.checkEmail(_this2.dataEmail).then(function (resp) {\n              if (resp.data.success) {\n                return _this2.$vs.notify({\n                  text: 'Email này đã tồn tại',\n                  color: 'danger',\n                  iconPack: 'feather',\n                  icon: 'icon-alert-circle'\n                });\n              } else {\n                AuthenticationService.createUser(obj).then(function (resp) {\n                  if (resp.data.success) {\n                    return _this2.$vs.notify({\n                      title: _this2.dataEmail,\n                      text: 'Bạn đã tạo thành công',\n                      color: 'success',\n                      iconPack: 'feather',\n                      icon: 'icon-check'\n                    });\n                  } else {\n                    return _this2.$vs.notify({\n                      text: resp.data.message,\n                      color: 'danger',\n                      iconPack: 'feather',\n                      icon: 'icon-alert-circle'\n                    });\n                  }\n                });\n              }\n            });\n          } else {\n            // cập nhật tài khoản\n            AuthenticationService.updateMember(obj).then(function (resp) {\n              if (resp.data.success) {\n                return _this2.$vs.notify({\n                  text: 'Đã cập nhập thông tin thành công cho ' + _this2.dataNick,\n                  color: 'success',\n                  iconPack: 'feather',\n                  icon: 'icon-check'\n                });\n              } else {\n                return _this2.$vs.notify({\n                  text: resp.data.message,\n                  color: 'danger',\n                  iconPack: 'feather',\n                  icon: 'icon-alert-circle'\n                });\n              }\n            });\n          }\n        }\n      }); //   this.$validator.validateAll().then(result => {\n      //       if (result) {\n      //         const obj = {\n      //           id: this.dataId,\n      //           name: this.dataName,\n      //           img: this.dataImg,\n      //           category: this.dataCategory,\n      //           order_status: this.dataOrder_status,\n      //           price: this.dataPrice\n      //         }\n      //         if(this.dataId !== null && this.dataId >= 0) {\n      //           this.$store.dispatch(\"dataList/updateItem\", obj).catch(err => { console.error(err) })\n      //         }else{\n      //           delete obj.id\n      //           obj.popularity = 0\n      //           this.$store.dispatch(\"dataList/addItem\", obj).catch(err => { console.error(err) })\n      //         }\n      //         this.$emit('closeSidebar')\n      //         this.initValues()\n      //       }\n      //   })\n    },\n    updateCurrImg: function updateCurrImg(input) {\n      var _this3 = this;\n\n      if (input.target.files && input.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          _this3.dataImg = e.target.result;\n        };\n\n        reader.readAsDataURL(input.target.files[0]);\n      }\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  }\n};",null]}