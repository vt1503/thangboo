{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/calendar/SimpleCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/calendar/SimpleCalendar.vue","mtime":1572081598000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { CalendarView, CalendarViewHeader } from \"vue-simple-calendar\";\nimport moduleCalendar from '@/store/calendar/moduleCalendar.js';\n\nrequire(\"vue-simple-calendar/static/css/default.css\");\n\nimport Datepicker from 'vuejs-datepicker';\nimport { en, he } from \"vuejs-datepicker/src/locale\";\nexport default {\n  components: {\n    CalendarView: CalendarView,\n    CalendarViewHeader: CalendarViewHeader,\n    Datepicker: Datepicker\n  },\n  data: function data() {\n    return {\n      showDate: new Date(),\n      disabledFrom: false,\n      id: 0,\n      title: '',\n      startDate: '',\n      endDate: '',\n      labelLocal: 'none',\n      langHe: he,\n      langEn: en,\n      url: '',\n      calendarView: 'month',\n      activePromptAddEvent: false,\n      activePromptEditEvent: false,\n      calendarViewTypes: [{\n        label: \"Month\",\n        val: \"month\"\n      }, {\n        label: \"Week\",\n        val: \"week\"\n      }, {\n        label: \"Year\",\n        val: \"year\"\n      }]\n    };\n  },\n  computed: {\n    simpleCalendarEvents: function simpleCalendarEvents() {\n      return this.$store.state.calendar.events;\n    },\n    validForm: function validForm() {\n      return this.title != '' && this.startDate != '' && this.endDate != '' && Date.parse(this.endDate) - Date.parse(this.startDate) >= 0 && !this.errors.has('event-url');\n    },\n    disabledDatesTo: function disabledDatesTo() {\n      return {\n        to: new Date(this.startDate)\n      };\n    },\n    disabledDatesFrom: function disabledDatesFrom() {\n      return {\n        from: new Date(this.endDate)\n      };\n    },\n    calendarLabels: function calendarLabels() {\n      return this.$store.state.calendar.eventLabels;\n    },\n    labelColor: function labelColor() {\n      return function (label) {\n        if (label == \"business\") return \"success\";else if (label == \"work\") return \"warning\";\n        if (label == \"personal\") return \"danger\";\n        if (label == \"none\") return \"primary\";\n      };\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    addEvent: function addEvent() {\n      var obj = {\n        title: this.title,\n        startDate: this.startDate,\n        endDate: this.endDate,\n        label: this.labelLocal,\n        url: this.url\n      };\n      obj.classes = \"event-\" + this.labelColor(this.labelLocal);\n      this.$store.dispatch('calendar/addEvent', obj);\n    },\n    updateMonth: function updateMonth(val) {\n      this.showDate = this.$refs.calendar.getIncrementedPeriod(val);\n    },\n    clearFields: function clearFields() {\n      this.title = this.endDate = this.url = \"\";\n      this.id = 0;\n      this.labelLocal = \"none\";\n    },\n    promptAddNewEvent: function promptAddNewEvent(date) {\n      this.disabledFrom = false;\n      this.addNewEventDialog(date);\n    },\n    addNewEventDialog: function addNewEventDialog(date) {\n      this.clearFields();\n      this.startDate = date;\n      this.endDate = date;\n      this.activePromptAddEvent = true;\n    },\n    openAddNewEvent: function openAddNewEvent(date) {\n      this.disabledFrom = true;\n      this.addNewEventDialog(date);\n    },\n    openEditEvent: function openEditEvent(event) {\n      var e = this.$store.getters['calendar/getEvent'](event.id);\n      this.id = e.id;\n      this.title = e.title;\n      this.startDate = e.startDate;\n      this.endDate = e.endDate;\n      this.url = e.url;\n      this.labelLocal = e.label;\n      this.activePromptEditEvent = true;\n    },\n    editEvent: function editEvent() {\n      var obj = {\n        id: this.id,\n        title: this.title,\n        startDate: this.startDate,\n        endDate: this.endDate,\n        label: this.labelLocal,\n        url: this.url\n      };\n      obj.classes = \"event-\" + this.labelColor(this.labelLocal);\n      this.$store.dispatch('calendar/editEvent', obj);\n    },\n    removeEvent: function removeEvent() {\n      this.$store.dispatch('calendar/removeEvent', this.id);\n    },\n    eventDragged: function eventDragged(event, date) {\n      this.$store.dispatch('calendar/eventDragged', {\n        event: event,\n        date: date\n      });\n    }\n  },\n  created: function created() {\n    this.$store.registerModule('calendar', moduleCalendar);\n    this.$store.dispatch(\"calendar/fetchEvents\");\n    this.$store.dispatch(\"calendar/fetchEventLabels\");\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.unregisterModule('calendar');\n  }\n};",null]}