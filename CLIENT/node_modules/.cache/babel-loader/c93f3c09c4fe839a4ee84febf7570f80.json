{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/mutations.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/mutations.js","mtime":1618347078000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\n\n/*=========================================================================================\n  File Name: mutations.js\n  Description: Vuex Store - mutations\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nvar mutations = {\n  // /////////////////////////////////////////////\n  // COMPONENTS\n  // /////////////////////////////////////////////\n  // Vertical NavMenu\n  TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE: function TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n    state.isVerticalNavMenuActive = value;\n  },\n  TOGGLE_REDUCE_BUTTON: function TOGGLE_REDUCE_BUTTON(state, val) {\n    state.reduceButton = val;\n  },\n  UPDATE_MAIN_LAYOUT_TYPE: function UPDATE_MAIN_LAYOUT_TYPE(state, val) {\n    state.mainLayoutType = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN: function UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n    state.verticalNavMenuItemsMin = val;\n  },\n  UPDATE_VERTICAL_NAV_MENU_WIDTH: function UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n    state.verticalNavMenuWidth = width;\n  },\n  // VxAutoSuggest\n  UPDATE_STARRED_PAGE: function UPDATE_STARRED_PAGE(state, payload) {\n    // find item index in search list state\n    var index = state.navbarSearchAndPinList[\"pages\"].data.findIndex(function (item) {\n      return item.url == payload.url;\n    }); // update the main list\n\n    state.navbarSearchAndPinList[\"pages\"].data[index].is_bookmarked = payload.val; // if val is true add it to starred else remove\n\n    if (payload.val) {\n      state.starredPages.push(state.navbarSearchAndPinList[\"pages\"].data[index]);\n    } else {\n      // find item index from starred pages\n      var _index = state.starredPages.findIndex(function (item) {\n        return item.url == payload.url;\n      }); // remove item using index\n\n\n      state.starredPages.splice(_index, 1);\n    }\n  },\n  // Navbar-Vertical\n  ARRANGE_STARRED_PAGES_LIMITED: function ARRANGE_STARRED_PAGES_LIMITED(state, list) {\n    var starredPagesMore = state.starredPages.slice(10);\n    state.starredPages = list.concat(starredPagesMore);\n  },\n  ARRANGE_STARRED_PAGES_MORE: function ARRANGE_STARRED_PAGES_MORE(state, list) {\n    var downToUp = false;\n    var lastItemInStarredLimited = state.starredPages[10];\n    var starredPagesLimited = state.starredPages.slice(0, 10);\n    state.starredPages = starredPagesLimited.concat(list);\n    state.starredPages.slice(0, 10).map(function (i) {\n      if (list.indexOf(i) > -1) downToUp = true;\n    });\n\n    if (!downToUp) {\n      state.starredPages.splice(10, 0, lastItemInStarredLimited);\n    }\n  },\n  // ////////////////////////////////////////////\n  // UI\n  // ////////////////////////////////////////////\n  TOGGLE_CONTENT_OVERLAY: function TOGGLE_CONTENT_OVERLAY(state, val) {\n    state.bodyOverlay = val;\n  },\n  UPDATE_PRIMARY_COLOR: function UPDATE_PRIMARY_COLOR(state, val) {\n    state.themePrimaryColor = val;\n  },\n  UPDATE_THEME: function UPDATE_THEME(state, val) {\n    state.theme = val;\n  },\n  UPDATE_WINDOW_WIDTH: function UPDATE_WINDOW_WIDTH(state, width) {\n    state.windowWidth = width;\n  },\n  UPDATE_WINDOW_SCROLL_Y: function UPDATE_WINDOW_SCROLL_Y(state, val) {\n    state.scrollY = val;\n  },\n  // /////////////////////////////////////////////\n  // User/Account\n  // /////////////////////////////////////////////\n  // Updates user info in state and localstorage\n  UPDATE_USER_INFO: function UPDATE_USER_INFO(state, payload) {\n    // Get Data localStorage\n    var userInfo = JSON.parse(localStorage.getItem(\"userInfo\")) || state.AppActiveUser;\n\n    for (var _i = 0, _Object$keys = Object.keys(payload); _i < _Object$keys.length; _i++) {\n      var property = _Object$keys[_i];\n\n      if (payload[property] != null) {\n        // If some of user property is null - user default property defined in state.AppActiveUser\n        state.AppActiveUser[property] = payload[property]; // Update key in localStorage\n\n        userInfo[property] = payload[property];\n      }\n    } // Store data in localStorage\n\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n    state.isUserLoggedIn = !!token;\n  }\n};\nexport default mutations;",null]}