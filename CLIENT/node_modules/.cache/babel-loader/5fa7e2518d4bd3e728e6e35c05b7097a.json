{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/storeMain.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/storeMain.js","mtime":1649888637205},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport getters from \"./getters\";\nimport themeConfig from \"@/../themeConfigClient.js\";\nimport navbarSearchAndPinList from \"@/layouts/components/navbar/navbarSearchAndPinList\";\nVue.use(Vuex); // *From Auth - Data will be received from auth provider\n\nvar userDefaults = {\n  uid: -1,\n  // From Auth\n  displayName: \"KhÃ¡ch\",\n  // From Auth\n  about: \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\n  photoURL: require(\"@/assets/images/portrait/small/avatar-s-11.jpg\"),\n  // From Auth\n  status: \"online\",\n  userRole: \"guest\"\n};\nvar userInfoLocalStorage = JSON.parse(localStorage.getItem(\"INFO\")) || {}; // Set default values for active-user\n// More data can be added by auth provider or other plugins/packages\n\nvar getUserInfo = function getUserInfo() {\n  // let userInfo = {\n  //   //displayName:'',\n  // }\n  var userInfo = {}; //userInfo  = JSON.parse(localStorage.getItem('INFO')) \n  // Object.keys(userDefaults).forEach((key) => {\n  //   // If property is defined in localStorage => Use that\n  //   userInfo[key] = userDefaults[key]\n  // })\n  // //return userInfo\n  // // Update property in user\n  // Object.keys(userDefaults).forEach((key) => {\n  //   // If property is defined in localStorage => Use that\n  //   userInfo[key] = userInfoLocalStorage[key] ?  userInfoLocalStorage[key] : userDefaults[key]\n  // })\n  // // Include properties from localStorage\n  // Object.keys(userInfoLocalStorage).forEach((key) => {\n  //   if(userInfo[key] == undefined && userInfoLocalStorage[key] != null) userInfo[key] = userInfoLocalStorage[key]\n  // })\n\n  return userInfo;\n};\n\nexport default new Vuex.Store({\n  strict: true,\n  plugins: [],\n  getters: getters,\n  connected: null,\n  session: 0,\n  state: {\n    token: null,\n    user: null,\n    isUserLoggedIn: false,\n    mainLayoutType: themeConfig.mainLayoutType || \"vertical\",\n    windowWidth: null,\n    isVerticalNavMenuActive: false,\n    verticalNavMenuItemsMin: false,\n    theme: themeConfig.theme || \"light\",\n    //AddInfoUser: {},\n    AppActiveUser: getUserInfo(),\n    bodyOverlay: false,\n    navbarSearchAndPinList: navbarSearchAndPinList,\n    reduceButton: themeConfig.sidebarCollapsed,\n    verticalNavMenuWidth: \"default\",\n    scrollY: 0,\n    starredPages: navbarSearchAndPinList[\"pages\"].data.filter(function (page) {\n      return page.is_bookmarked;\n    }),\n    themePrimaryColor: themeConfig.primary,\n    // color\n    isOpenSideBar: false,\n    isRenderdTradeIndex: false\n  },\n  mutations: {\n    // ////////////////////////////////////////////\n    // UI\n    // ////////////////////////////////////////////\n    TOGGLE_CONTENT_OVERLAY: function TOGGLE_CONTENT_OVERLAY(state, val) {\n      state.bodyOverlay = val;\n    },\n    UPDATE_PRIMARY_COLOR: function UPDATE_PRIMARY_COLOR(state, val) {\n      state.themePrimaryColor = val;\n    },\n    UPDATE_THEME: function UPDATE_THEME(state, val) {\n      state.theme = val;\n    },\n    UPDATE_WINDOW_WIDTH: function UPDATE_WINDOW_WIDTH(state, width) {\n      state.windowWidth = width;\n    },\n    UPDATE_WINDOW_SCROLL_Y: function UPDATE_WINDOW_SCROLL_Y(state, val) {\n      state.scrollY = val;\n    },\n    TOGGLE_REDUCE_BUTTON: function TOGGLE_REDUCE_BUTTON(state, val) {\n      state.reduceButton = val;\n    },\n    TOGGLE_IS_OPEN_SIDEBAR: function TOGGLE_IS_OPEN_SIDEBAR(state, val) {\n      if (typeof val !== 'undefined') {\n        state.isOpenSideBar = val;\n      } else {\n        state.isOpenSideBar = !state.isOpenSideBar;\n      }\n    },\n    SET_IS_RENDER_TRADE_INDEX: function SET_IS_RENDER_TRADE_INDEX(state, val) {\n      state.isRenderdTradeIndex = val;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token; //state.isUserLoggedIn = !!(token)\n    },\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE: function TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE(state, value) {\n      state.isVerticalNavMenuActive = value;\n    },\n    UPDATE_VERTICAL_NAV_MENU_WIDTH: function UPDATE_VERTICAL_NAV_MENU_WIDTH(state, width) {\n      state.verticalNavMenuWidth = width;\n    },\n    UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN: function UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN(state, val) {\n      state.verticalNavMenuItemsMin = val;\n    },\n    SET_INFO_USDER: function SET_INFO_USDER(state, val) {\n      state.AppActiveUser = val;\n    }\n  },\n  actions: {\n    setToken: function setToken(_ref, token) {\n      var commit = _ref.commit;\n      commit('setToken', token);\n    },\n    setUser: function setUser(_ref2, user) {\n      var commit = _ref2.commit;\n      commit('setUser', user);\n    },\n    updateVerticalNavMenuWidth: function updateVerticalNavMenuWidth(_ref3, width) {\n      var commit = _ref3.commit;\n      commit('UPDATE_VERTICAL_NAV_MENU_WIDTH', width);\n    },\n    setInfoUser: function setInfoUser(_ref4, list) {\n      var commit = _ref4.commit;\n      commit('SET_INFO_USDER', list);\n    }\n  }\n});",null]}