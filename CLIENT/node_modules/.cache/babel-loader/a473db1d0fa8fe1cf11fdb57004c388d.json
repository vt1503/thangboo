{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/user/LogRegForGet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/user/LogRegForGet.vue","mtime":1650023660028},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService';\nimport getData from '@/pages/trade/navbar/components/data.json';\nexport default {\n  data: function data() {\n    return {\n      activeSlide: false,\n      ssDownSend: '30s',\n      disSendMail: false,\n      isSubmitReg: false,\n      isG2FA: 0,\n      hideTbResend: true,\n      hideTbForgot: true,\n      ldFrom: false,\n      activeL1: true,\n      activeL2: false,\n      activeE1: true,\n      activeE2: false,\n      activeRs1: true,\n      activeRs2: false,\n      activeRss1: true,\n      activeRss2: false,\n      activeLogin: false,\n      activeRegister: false,\n      activeResendVerifyEmail: false,\n      activeFogotPass: false,\n      activeResetPass: false,\n      passTypeReg: 'password',\n      passTypeLog: 'password',\n      passTypeReset: 'password',\n      passTypeReReset: 'password',\n      emailResend: '',\n      emailForgot: '',\n      emailReg: '',\n      emailReset: '',\n      email: '',\n      password: '',\n      passwordReg: '',\n      passwordReset: '',\n      passwordReReset: '',\n      codeReset: '',\n      codeRef: '',\n      nickName: '',\n      error: null,\n      domain: '',\n      msgEmReg: '',\n      msgPassReg: '',\n      msgNickName: '',\n      msgEmailForgot: '',\n      msgEmailResend: '',\n      msgEmReset: '',\n      msgPassReset: '',\n      msgPassReReset: '',\n      msgCoSeReset: '',\n      saveToken: '',\n      G2FACodeEnter: '',\n      colorLoading: '#fff'\n    };\n  },\n  computed: {\n    disabledLogin: function disabledLogin() {\n      if (this.email !== '' && this.checkReg(this.email) && this.password !== '') {\n        return true;\n      }\n    },\n    countPassReg: function countPassReg() {\n      return this.passwordReg.length;\n    },\n    countNickNameReg: function countNickNameReg() {\n      return this.nickName.length;\n    },\n    countPassReset: function countPassReset() {\n      return this.passwordReset.length;\n    },\n    countPassReReset: function countPassReReset() {\n      return this.passwordReReset.length;\n    }\n  },\n  watch: {\n    \"$route\": function $route() {\n      var path = this.$router.currentRoute.path;\n      this.activeSlide = false; // console.log(path)\n\n      if (path == '/login') {\n        this.activeLogin = true;\n        this.activeRegister = false;\n        this.activeFogotPass = false;\n        this.activeResendVerifyEmail = false;\n        this.slepShowSlide();\n      }\n\n      if (path == '/register') {\n        this.activeRegister = true;\n        this.activeLogin = false;\n        this.activeFogotPass = false;\n        this.activeResendVerifyEmail = false;\n        this.slepShowSlide();\n      }\n\n      if (path == '/forgot-password') {\n        this.activeFogotPass = true;\n        this.activeLogin = false;\n        this.activeRegister = false;\n        this.activeResendVerifyEmail = false;\n        this.slepShowSlide();\n      }\n\n      if (path == '/register-resend-verify-email') {\n        this.activeResendVerifyEmail = true;\n        this.activeLogin = false;\n        this.activeRegister = false;\n        this.activeFogotPass = false;\n        this.slepShowSlide();\n      }\n    }\n  },\n  methods: {\n    replaceAll: function replaceAll(str, find, replace) {\n      return str.replace(new RegExp(find, 'g'), replace);\n    },\n    openSite: function openSite() {\n      var e = this.replaceAll(this.emailReg, '@', 'ACONG');\n      var a = this.replaceAll(e, /\\./g, 'DOT');\n      window.open('https://t.me/ares_idefibo_bot?start=BOREG_' + a);\n    },\n    slepShowSlide: function slepShowSlide() {\n      var _this = this;\n\n      setTimeout(function () {\n        _this.activeSlide = true;\n      }, 100);\n    },\n    countDownResendMail: function countDownResendMail() {\n      var _this2 = this;\n\n      this.$vs.loading({\n        //background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n      var giay = 30;\n      var countD = setInterval(function () {\n        _this2.ssDownSend = giay + 's';\n        _this2.disSendMail = true;\n\n        if (giay == 0) {\n          _this2.disSendMail = false;\n\n          _this2.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n\n          _this2.ssDownSend = 'Yêu cầu một email mới';\n          clearInterval(countD);\n        }\n\n        giay--;\n      }, 1000);\n    },\n    reSendMail: function reSendMail() {\n      this.emailResend = this.emailReg;\n      this.submitFormResendActive();\n      this.countDownResendMail();\n    },\n    checkReg: function checkReg(vl) {\n      var reg = /\\S+@\\S+\\.\\S+/;\n      return reg.test(vl);\n    },\n    showPassLogin: function showPassLogin() {\n      this.passTypeLog = this.passTypeLog === 'password' ? 'text' : 'password';\n    },\n    showPassReg: function showPassReg() {\n      this.passTypeReg = this.passTypeReg === 'password' ? 'text' : 'password';\n    },\n    showPassReset: function showPassReset() {\n      this.passTypeReset = this.passTypeReset === 'password' ? 'text' : 'password';\n    },\n    showPassReReset: function showPassReReset() {\n      this.passTypeReReset = this.passTypeReReset === 'password' ? 'text' : 'password';\n    },\n    submitFormResetPass: function submitFormResetPass() {\n      var _this3 = this;\n\n      var isActive = true;\n\n      if (this.emailReset === '' || !this.checkReg(this.emailReset)) {\n        this.msgEmReset = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.';\n        return;\n      } else {\n        isActive = true;\n        this.msgEmReset = '';\n      }\n\n      if (this.passwordReset.length < 6 || this.passwordReset.length > 20) {\n        this.msgPassReset = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.';\n        return;\n      } else {\n        isActive = true;\n        this.msgPassReset = '';\n      }\n\n      if (this.passwordReReset.length < 6 || this.passwordReReset.length > 20) {\n        this.msgPassReReset = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.';\n        return;\n      } else {\n        isActive = true;\n        this.msgPassReReset = '';\n      }\n\n      if (this.passwordReset != this.passwordReReset) {\n        this.msgPassReReset = 'Mật khẩu của bạn không trùng khớp.';\n        return;\n      } else {\n        isActive = true;\n        this.msgPassReReset = '';\n      } // if(this.codeReset == ''){\n      //     this.msgCoSeReset = 'Mã bảo vệ không được rỗng.'\n      //     isActive = false\n      // }else{\n      //     isActive = true\n      //     this.msgCoSeReset = ''\n      // }\n\n\n      if (isActive) {\n        this.ldFrom = true;\n        var obj = {\n          email: this.emailReset,\n          password: this.passwordReset //code_secure: this.codeReset\n\n        };\n        AuthenticationService.changePassword(obj).then(function (res) {\n          if (res.data.success == 1) {\n            _this3.$vs.notify({\n              text: 'Mật khẩu đã được đổi thành công.',\n              iconPack: 'feather',\n              icon: 'icon-check',\n              color: 'success'\n            });\n\n            window.location.href = window.location.origin + '/login';\n          } else if (res.data.success == 2) {\n            _this3.$vs.notify({\n              text: 'Mã 2FA không đúng',\n              iconPack: 'feather',\n              icon: 'icon-alert-circle',\n              color: 'danger'\n            });\n          }\n        });\n      }\n    },\n    submitFormReg: function submitFormReg() {\n      var _this4 = this;\n\n      if (this.emailReg === '' || !this.checkReg(this.emailReg)) {\n        this.msgEmReg = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.';\n        return;\n      } else {\n        this.msgEmReg = '';\n      }\n\n      if (this.passwordReg === '' || this.passwordReg.length < 6 || this.passwordReg.length > 20) {\n        this.msgPassReg = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.';\n        return;\n      } else {\n        this.msgPassReg = '';\n      }\n\n      var regex = /^[a-zA-Z0-9-_]+$/;\n\n      if (this.nickName === '' || this.nickName.length < 6 || this.nickName.length > 20 || !regex.test(this.nickName)) {\n        this.msgNickName = 'Biệt danh phải từ 6 đến 20 ký tự, bắt đầu bằng chữ và không chứa ký tự đặc biệt.';\n        return;\n      } else {\n        this.msgNickName = '';\n      }\n\n      var isActive = true;\n\n      if (isActive) {\n        this.ldFrom = true;\n        var obj = {\n          email: this.emailReg,\n          password: this.passwordReg,\n          nick_name: this.nickName,\n          upline_id: this.codeRef\n        }; //\n\n        AuthenticationService.registerUser(obj).then(function (res) {\n          _this4.ldFrom = false;\n\n          if (res.data.success == 1) {\n            _this4.isSubmitReg = true;\n            setTimeout(function () {\n              _this4.countDownResendMail();\n            }, 500);\n\n            _this4.$vs.notify({\n              title: 'Đăng ký thành công',\n              text: 'Chúng tôi đã gửi 1 một liên kết kích hoạt đến tài khoản của bạn.',\n              iconPack: 'feather',\n              icon: 'icon-check',\n              color: 'success'\n            });\n          } else if (res.data.success == 2) {\n            _this4.$vs.notify({\n              text: 'Email này đã tồn tại',\n              iconPack: 'feather',\n              icon: 'icon-alert-circle',\n              color: 'warning'\n            });\n          } else if (res.data.success == 3) {\n            _this4.$vs.notify({\n              text: 'Biệt danh này đã tồn tại',\n              iconPack: 'feather',\n              icon: 'icon-alert-circle',\n              color: 'warning'\n            });\n          }\n        });\n      }\n    },\n    submitFormForgot: function submitFormForgot() {\n      var _this5 = this;\n\n      var isActive = true;\n\n      if (this.emailForgot === '' || !this.checkReg(this.emailForgot)) {\n        this.msgEmailForgot = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.';\n        isActive = false;\n      } else {\n        isActive = true;\n        this.msgEmailForgot = '';\n      }\n\n      if (isActive) {\n        this.ldFrom = true;\n        var obj = {\n          email: this.emailForgot\n        };\n        AuthenticationService.forgotPassUser(obj).then(function (res) {\n          _this5.ldFrom = false;\n\n          if (res.data.success) {\n            _this5.hideTbForgot = false;\n          }\n        });\n      }\n    },\n    submitFormResendActive: function submitFormResendActive() {\n      var _this6 = this;\n\n      var isActive = true;\n\n      if (this.emailResend === '' || !this.checkReg(this.emailResend)) {\n        this.msgEmailResend = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.';\n        isActive = false;\n      } else {\n        this.msgEmailResend = '';\n        isActive = true;\n      }\n\n      if (isActive) {\n        this.ldFrom = true;\n        var obj = {\n          email: this.emailResend\n        };\n        AuthenticationService.resendConfirUser(obj).then(function (res) {\n          _this6.ldFrom = false;\n\n          if (res.data.success) {\n            _this6.hideTbResend = false;\n          }\n        });\n      }\n    },\n    getInfoLogin: function getInfoLogin() {\n      var _this7 = this;\n\n      AuthenticationService.getInfoUser().then(function (res) {\n        if (res.data.success == 1) {\n          var dt = res.data.data;\n          getData.uid = dt.id;\n          getData.email = dt.email;\n          getData.profile_image = dt.profile_image;\n          getData.displayName = dt.nick_name;\n          getData.uidLive = dt.order[1].u_id;\n          getData.uidDemo = (dt.order[0] || {}).u_id || 0;\n          getData.am_usdt = dt.b;\n          getData.vip = dt.vip;\n          getData.vip_lv = dt.level_vip;\n          getData.pen_commiss = dt.pending_commission;\n          getData.ref = dt.ref;\n          getData.upid = dt.upid;\n          getData.c2fa = dt.fa2;\n          getData.id_front = dt.id_front;\n          getData.id_back = dt.id_back, getData.first_name = dt.first_name;\n          getData.last_name = dt.last_name;\n          getData.verify = dt.verify;\n          getData.num_secu = dt.num_secury;\n          getData.country = dt.c;\n          getData.so_cmnd = dt.so_cmnd;\n          getData.blLive = dt.order[1].balance;\n          getData.blDemo = (dt.order[0] || {}).balance || 0;\n          getData.balance = dt.balance;\n          localStorage.setItem('INFO', JSON.stringify(dt)); //localStorage.removeItem('isLog')\n\n          _this7.$router.push('/trading').catch(function () {});\n        }\n      });\n    },\n    loginForm: function loginForm() {\n      var _this8 = this;\n\n      this.ldFrom = true;\n      AuthenticationService.loginUser({\n        email: this.email,\n        password: this.password\n      }).then(function (res) {\n        _this8.ldFrom = false;\n        var g = res.data;\n\n        if (g.success == 1) {\n          // this.$vs.notify({\n          //     text: 'Đăng nhập thành công.',\n          //     iconPack: 'feather',\n          //     icon: 'icon-check',\n          //     color: 'success'\n          // });\n          // let gData = d.data;\n          // getData.uid= gData.id,\n          // getData.email= gData.email,\n          // getData.profile_image= gData.profile_image,\n          // getData.displayName= gData.nick_name,\n          // getData.uidLive= gData.order[1].u_id,\n          // getData.uidDemo= gData.order[0].u_id,\n          // getData.vip= gData.vip,\n          // getData.vip_lv= gData.level_vip,\n          // getData.pen_commiss= gData.pending_commission,\n          // getData.ref= gData.ref,\n          // getData.c2fa= gData.fa2,\n          // getData.id_front= gData.id_front,\n          // getData.id_back= gData.id_back,\n          // getData.first_name= gData.first_name,\n          // getData.last_name= gData.last_name,\n          // getData.verify= gData.verify,\n          // getData.num_secu= gData.num_secury,\n          // getData.country= gData.c,\n          // getData.blLive = gData.order[1].balance\n          // getData.blDemo = gData.order[0].balance\n          // getData.balance = gData.balance,\n          // getData.mkt = gData.mkt\n          if (g.g_2fa) {\n            _this8.isG2FA = g.g_2fa;\n            _this8.saveToken = g.token;\n            return;\n          }\n\n          localStorage.setItem('tokenUser', g.token);\n          _this8.activeLogin = false;\n\n          _this8.getInfoLogin(); //this.$router.push('/user/affiliate/general').catch(() => {})\n          //window.location.href = window.location.origin + '/user/affiliate/general';\n\n        } else if (res.data.success == 0) {\n          _this8.$vs.notify({\n            text: 'Email hoặc mật khẩu không đúng. Vui lòng nhập lại',\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          });\n        } else if (res.data.success == 3) {\n          _this8.$vs.notify({\n            text: 'Tài khoản chưa được kích hoạt!',\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          });\n        }\n      });\n    },\n    loginFormAuthG2FA: function loginFormAuthG2FA() {\n      var _this9 = this;\n\n      var obj = {\n        code: this.G2FACodeEnter,\n        token: this.saveToken\n      };\n      AuthenticationService.loginGG2FA(obj).then(function (res) {\n        if (res.data.success == 1) {\n          localStorage.setItem('tokenUser', _this9.saveToken);\n          _this9.activeLogin = false;\n\n          _this9.getInfoLogin(); //this.$router.push('/trading').catch(() => {})\n          //this.$router.push('/user/affiliate/general').catch(() => {})\n          //window.location.href = window.location.origin + '/user/affiliate/general';\n\n        } else if (res.data.success == 6) {\n          return _this9.$vs.notify({\n            text: 'Mã đăng nhập không hợp lệ hoặc đã hết hạn.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'warning'\n          });\n        }\n      });\n    },\n    redirectHome: function redirectHome() {\n      this.activeSlide = false;\n      this.$router.push('/');\n    }\n  },\n  created: function created() {\n    var _this10 = this;\n\n    var path = this.$router.currentRoute.path;\n\n    if (path == '/login') {\n      this.activeLogin = true;\n      this.slepShowSlide();\n      var at = this.$route.query.a;\n\n      if (at != undefined) {\n        var obj = {\n          token: at\n        };\n        AuthenticationService.getTokenActive(obj).then(function (res) {\n          if (res.data.success) {\n            _this10.$vs.notify({\n              text: 'Tài khoản của bạn đã được kích hoạt.',\n              iconPack: 'feather',\n              icon: 'icon-check',\n              color: 'success'\n            });\n          }\n        });\n      }\n    }\n\n    if (path == '/register') {\n      this.activeRegister = true;\n      this.slepShowSlide();\n      var gr = this.$route.query.r;\n\n      if (gr != undefined) {\n        this.codeRef = gr;\n      }\n    }\n\n    if (path == '/reset-password') {\n      this.activeResetPass = true;\n      this.slepShowSlide();\n      var _gr = this.$route.query.e;\n\n      if (_gr != undefined) {\n        this.emailReset = _gr;\n      }\n    }\n  }\n};",null]}