{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/tool/Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/tool/Setting.vue","mtime":1649894014954},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SETTINGS from \"../../../settings.json\";\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      cnSv: 0,\n      checkOnOffAutoQuote: true,\n      radioBC: 'payeer',\n      settingJson: {\n        min_d_paypal: 5,\n        min_d_btc: 0.001,\n        min_d_eth: 0.02,\n        min_d_usdt: 5,\n        min_w_paypal: 5,\n        min_w_btc: 0.001,\n        min_w_eth: 0.02,\n        min_w_usdt: 5,\n        fee_w_paypal_nb: 0,\n        // phí rút về tài khoản trong hệ thống\n        fee_w_paypal_acc: 2,\n        // phí rút về tài khoản trong paypal\n        fee_w_btc_nb: 0,\n        // phí rút về tài khoản BTC trong hệ thống\n        fee_w_btc_acc: 0.0003,\n        // phí rút về tài khoản BTC sàn\n        fee_w_eth_nb: 0,\n        // phí rút về tài khoản ETH sàn\n        fee_w_eth_ERC20: 0.001,\n        // phí rút về tài khoản ETH sàn\n        fee_w_usdt_nb: 0,\n        // phí rút về tài khoản USDT trong hệ thống\n        fee_w_usdt_BEP20: 1,\n        // phí rút về tài khoản USDT trong hệ thống\n        fee_w_usdt_ERC20: 2,\n        // phí rút về tài khoản USDT sàn\n        default_wallet_sys: 'usdt',\n        default_netw_pay: 'tn',\n        show_wallet_paypal: true,\n        show_wallet_btc: false,\n        show_wallet_eth: false,\n        show_wallet_usdt: false,\n        show_wallet_vnd: false,\n        timeLoopUpdateQuote: 30,\n        // thời gian mỗi giây cập nhập giá USD sấp sĩ coin\n        quote_USD_USDT: 1,\n        quote_USD_BTC: 1,\n        quote_USD_ETH: 1,\n        quote_USD_PAYPAL: 1,\n        quote_USD_VND: 1,\n        TELEGRAM_TOKEN: '',\n        TELEGRAM_BET_ID: '',\n        TELEGRAM_RUT_ID: '',\n        TELEGRAM_NAP_ID: '',\n        TELEGRAM_BET_AMOUNT: '',\n        TELEGRAM_BET_THONG_BAO: '',\n        TELEGRAM_BET_PHIM_LENH: '',\n        ADDRESS_ETH_USDT: '',\n        PRIVATE_KEY_ADDRESS_ETH_USDT: '',\n        ADDRESS_ETH_TRANSACTION: '',\n        PRIVATE_KEY_ETH_TRANSACTION: '',\n        maintenance: false // bảo trì\n\n      }\n    };\n  },\n  computed: {\n    activeNTB: function activeNTB() {\n      if (this.settingJson.teleChatIDBet == '') {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    activeNTF: function activeNTF() {\n      if (this.settingJson.teleChatID == '' || this.settingJson.teleToken == '') {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    changeActiveBaoTri: function changeActiveBaoTri(event) {\n      var o = event.target.checked;\n      this.settingJson.maintenance = o;\n    },\n    changeWallet: function changeWallet(val, event) {\n      var o = event.target.checked;\n\n      switch (val) {\n        case 'usdt':\n          this.settingJson.show_wallet_usdt = o;\n          break;\n\n        case 'btc':\n          this.settingJson.show_wallet_btc = o;\n          break;\n\n        case 'eth':\n          this.settingJson.show_wallet_eth = o;\n          break;\n\n        case 'paypal':\n          this.settingJson.show_wallet_paypal = o;\n          break;\n\n        case 'vnd':\n          this.settingJson.show_wallet_vnd = o;\n          break;\n      }\n    },\n    clickSubmitSetting: function clickSubmitSetting() {\n      var obj = {\n        qUSDT: this.settingJson.quote_USD_USDT,\n        qETH: this.settingJson.quote_USD_ETH,\n        qBTC: this.settingJson.quote_USD_BTC,\n        qPaypal: this.settingJson.quote_USD_PAYPAL,\n        qVND: this.settingJson.quote_USD_VND,\n        tCUseSys: this.settingJson.default_wallet_sys.toLowerCase(),\n        mDBTC: this.settingJson.min_d_btc,\n        mDETH: this.settingJson.min_d_eth,\n        mDUSDT: this.settingJson.min_d_usdt,\n        mDPaypal: this.settingJson.min_d_paypal,\n        mWBTC: this.settingJson.min_w_btc,\n        mWETH: this.settingJson.min_w_eth,\n        mWUSDT: this.settingJson.min_w_usdt,\n        mWPaypal: this.settingJson.min_w_paypal,\n        iAWPaypal: this.settingJson.show_wallet_paypal,\n        iAWETH: this.settingJson.show_wallet_eth,\n        iAWUSDT: this.settingJson.show_wallet_usdt,\n        iAWBTC: this.settingJson.show_wallet_btc,\n        iAWVND: this.settingJson.show_wallet_vnd,\n        fDPaypalNB: this.settingJson.fee_w_paypal_nb,\n        fDPaypalAcc: this.settingJson.fee_w_paypal_acc,\n        fDBTCNB: this.settingJson.fee_w_btc_nb,\n        fDBTCAcc: this.settingJson.fee_w_btc_acc,\n        fDETHNB: this.settingJson.fee_w_eth_nb,\n        fDETHERC20: this.settingJson.fee_w_eth_ERC20,\n        fDUSDTNB: this.settingJson.fee_w_usdt_nb,\n        fDUSDTBEP20: this.settingJson.fee_w_usdt_BEP20,\n        fDUSDTERC20: this.settingJson.fee_w_eth_ERC20,\n        TELEGRAM_TOKEN: this.settingJson.TELEGRAM_TOKEN,\n        TELEGRAM_BET_ID: this.settingJson.TELEGRAM_BET_ID,\n        TELEGRAM_RUT_ID: this.settingJson.TELEGRAM_RUT_ID,\n        TELEGRAM_NAP_ID: this.settingJson.TELEGRAM_NAP_ID,\n        TELEGRAM_BET_AMOUNT: this.settingJson.TELEGRAM_BET_AMOUNT,\n        TELEGRAM_BET_THONG_BAO: this.settingJson.TELEGRAM_BET_THONG_BAO,\n        TELEGRAM_BET_PHIM_LENH: this.settingJson.TELEGRAM_BET_PHIM_LENH,\n        ADDRESS_ETH_USDT: this.settingJson.ADDRESS_ETH_USDT,\n        PRIVATE_KEY_ADDRESS_ETH_USDT: this.settingJson.PRIVATE_KEY_ADDRESS_ETH_USDT,\n        ADDRESS_ETH_TRANSACTION: this.settingJson.ADDRESS_ETH_TRANSACTION,\n        PRIVATE_KEY_ETH_TRANSACTION: this.settingJson.PRIVATE_KEY_ETH_TRANSACTION,\n        IS_TEST_SMART_CHAIN: this.settingJson.default_netw_pay == 'tn' ? true : false,\n        timeLoopQuote: this.settingJson.timeLoopUpdateQuote,\n        autoQuote: this.settingJson.checkOnOffAutoQuote,\n        maintenance: this.settingJson.maintenance\n      };\n      this.sendMessage({\n        type: 'setDataSys',\n        data: obj\n      });\n    },\n    sendMessage: function sendMessage(message) {\n      this.connection.send(JSON.stringify(message));\n      return this.$vs.notify({\n        text: 'Đã cập nhật hệ thống',\n        color: 'success',\n        position: 'top-right',\n        iconPack: 'feather',\n        icon: 'icon-message-square'\n      });\n    },\n    connectSever: function connectSever() {\n      var _this = this;\n\n      this.connection = new WebSocket(SETTINGS.BASE_URL_SOCKET_SYS);\n\n      this.connection.onopen = function () {\n        console.log(\"Successfully connected to the echo websocket server systems...\");\n      };\n\n      this.connection.onclose = function () {\n        if (_this.cnSv == 0) {\n          _this.$vs.notify({\n            text: 'Không kết nối được tới máy chủ. Sẽ kết nối lại sau 5 giây',\n            color: 'danger',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-message-square'\n          });\n        } else {\n          _this.$vs.notify({\n            text: 'Đang kết nối lại lần ' + _this.cnSv,\n            color: 'danger',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-message-square'\n          });\n        }\n\n        if (_this.cnSv == 6) {\n          _this.$vs.notify({\n            text: 'Kết nối thất bại. Vui lòng kiểm tra và bật lại máy chủ',\n            color: 'danger',\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-message-square'\n          });\n        } //console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n\n\n        if (_this.cnSv <= 5) {\n          setTimeout(function () {\n            _this.connectSever();\n\n            _this.cnSv++;\n          }, 5000);\n        }\n      }; // _this.connection.onerror = function(err) {\n      //   //console.error('Socket encountered error: ', err.message, 'Closing socket');\n      //    _this.$vs.notify({\n      //         text:'Kết nối máy chủ thất bại.',\n      //         color:'danger',\n      //         position:'top-right',\n      //         iconPack: 'feather',\n      //         icon:'icon-message-square'\n      //       });\n      //   _this.connection.close();\n      // };\n\n\n      this.connection.onmessage = function (event) {\n        var data = JSON.parse(event.data);\n        var dl = data.data;\n\n        if (data.type === 'getDataSys') {\n          _this.settingJson.min_d_paypal = dl.minDepositPaypal;\n          _this.settingJson.min_d_btc = dl.minDepositBTC;\n          _this.settingJson.min_d_eth = dl.minDepositETH;\n          _this.settingJson.min_d_usdt = dl.minDepositUSDT;\n          _this.settingJson.min_w_paypal = dl.minWithdrawalPaypal;\n          _this.settingJson.min_w_btc = dl.minWithdrawalBTC;\n          _this.settingJson.min_w_eth = dl.minWithdrawalETH;\n          _this.settingJson.min_w_usdt = dl.minWithdrawalUSDT;\n          _this.settingJson.fee_w_paypal_nb = dl.feeRutPaypalNoiBo; // phí rút về tài khoản trong hệ thống\n\n          _this.settingJson.fee_w_paypal_acc = dl.feeRutPaypalAcc; // phí rút về tài khoản trong paypal\n\n          _this.settingJson.fee_w_btc_nb = dl.feeRutBTCNoiBo; // phí rút về tài khoản BTC trong hệ thống\n\n          _this.settingJson.fee_w_btc_acc = dl.feeRutBTCAcc; // phí rút về tài khoản BTC sàn\n\n          _this.settingJson.fee_w_eth_nb = dl.feeRutETHNoiBo; // phí rút về tài khoản ETH sàn\n\n          _this.settingJson.fee_w_eth_ERC20 = dl.feeRutETHERC20; // phí rút về tài khoản ETH sàn\n\n          _this.settingJson.fee_w_usdt_nb = dl.feeRutUSDTNoiBo; // phí rút về tài khoản USDT trong hệ thống\n\n          _this.settingJson.fee_w_usdt_BEP20 = dl.feeRutUSDTBEP20; // phí rút về tài khoản USDT trong hệ thống\n\n          _this.settingJson.fee_w_eth_ERC20 = dl.feeRutUSDTERC20; // phí rút về tài khoản USDT sàn\n\n          _this.settingJson.default_wallet_sys = dl.typeCurrUseSys.toLowerCase();\n          _this.settingJson.show_wallet_paypal = dl.isActiveWalletPaypal;\n          _this.settingJson.show_wallet_vnd = dl.isActiveWalletVND;\n          _this.settingJson.show_wallet_btc = dl.isActiveWalletBTC;\n          _this.settingJson.show_wallet_eth = dl.isActiveWalletETH;\n          _this.settingJson.show_wallet_usdt = dl.isActiveWalletUSDT;\n          _this.settingJson.timeLoopUpdateQuote = dl.timeLoop;\n          _this.checkOnOffAutoQuote = dl.autoQuoteSet;\n          _this.settingJson.quote_USD_BTC = dl.quotePriceBTC;\n          _this.settingJson.quote_USD_ETH = dl.quotePriceETH;\n          _this.settingJson.quote_USD_USDT = dl.quotePriceUSDT;\n          _this.settingJson.quote_USD_PAYPAL = dl.quotePricePAYPAL;\n          _this.settingJson.quote_USD_VND = dl.quotePriceVND;\n          _this.settingJson.TELEGRAM_TOKEN = dl.TELEGRAM_TOKEN;\n          _this.settingJson.TELEGRAM_BET_ID = dl.TELEGRAM_BET_ID;\n          _this.settingJson.TELEGRAM_RUT_ID = dl.TELEGRAM_RUT_ID;\n          _this.settingJson.TELEGRAM_NAP_ID = dl.TELEGRAM_NAP_ID;\n          _this.settingJson.TELEGRAM_BET_AMOUNT = dl.TELEGRAM_BET_AMOUNT;\n          _this.settingJson.TELEGRAM_BET_THONG_BAO = dl.TELEGRAM_BET_THONG_BAO;\n          _this.settingJson.TELEGRAM_BET_PHIM_LENH = dl.TELEGRAM_BET_PHIM_LENH;\n          _this.settingJson.ADDRESS_ETH_USDT = dl.ADDRESS_ETH_USDT;\n          _this.settingJson.PRIVATE_KEY_ADDRESS_ETH_USDT = dl.PRIVATE_KEY_ADDRESS_ETH_USDT;\n          _this.settingJson.ADDRESS_ETH_TRANSACTION = dl.ADDRESS_ETH_TRANSACTION;\n          _this.settingJson.PRIVATE_KEY_ETH_TRANSACTION = dl.PRIVATE_KEY_ETH_TRANSACTION;\n          _this.settingJson.default_netw_pay = dl.IS_TEST_SMART_CHAIN == true ? 'tn' : 'ct';\n          _this.settingJson.maintenance = dl.maintenance;\n        }\n      };\n    }\n  },\n  created: function created() {// if(!moduleDataList.isRegistered) {\n    //   this.$store.registerModule('dataList', moduleDataList)\n    //   moduleDataList.isRegistered = true\n    // }\n    //this.$store.registerModule('dataList', this.productsFake);\n    //this.$store.dispatch(\"dataList/fetchDataListItems\")\n    //console.log(this.productsFake);\n    //console.log(this.$store.state.dataList);\n  },\n  mounted: function mounted() {\n    this.isMounted = true;\n    this.connectSever();\n  }\n};",null]}