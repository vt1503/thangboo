{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/chat/moduleChatGetters.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/chat/moduleChatGetters.js","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\n\n/*=========================================================================================\n  File Name: moduleChatGetters.js\n  Description: Chat Module Getters\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n// import contacts from '@/views/apps/chat/contacts'\nexport default {\n  chatDataOfUser: function chatDataOfUser(state) {\n    return function (id) {\n      return state.chats[Object.keys(state.chats).find(function (key) {\n        return key == id;\n      })];\n    };\n  },\n  chatContacts: function chatContacts(state, getters) {\n    var chatContacts = state.chatContacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n    chatContacts.sort(function (x, y) {\n      var timeX = getters.chatLastMessaged(x.uid).time;\n      var timeY = getters.chatLastMessaged(y.uid).time;\n      return new Date(timeY) - new Date(timeX);\n    });\n    return chatContacts.sort(function (x, y) {\n      var chatDataX = getters.chatDataOfUser(x.uid);\n      var chatDataY = getters.chatDataOfUser(y.uid);\n      if (chatDataX && chatDataY) return chatDataY.isPinned - chatDataX.isPinned;else return 0;\n    });\n  },\n  contacts: function contacts(state) {\n    return state.contacts.filter(function (contact) {\n      return contact.displayName.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n  },\n  contact: function contact(state) {\n    return function (contactId) {\n      return state.contacts.find(function (contact) {\n        return contact.uid == contactId;\n      });\n    };\n  },\n  chats: function chats(state) {\n    return state.chats;\n  },\n  chatUser: function chatUser(state, getters, rootState) {\n    return function (id) {\n      return state.contacts.find(function (contact) {\n        return contact.uid == id;\n      }) || rootState.AppActiveUser;\n    };\n  },\n  chatLastMessaged: function chatLastMessaged(state, getters) {\n    return function (id) {\n      if (getters.chatDataOfUser(id)) return getters.chatDataOfUser(id).msg.slice(-1)[0];else return false;\n    };\n  },\n  chatUnseenMessages: function chatUnseenMessages(state, getters) {\n    return function (id) {\n      var unseenMsg = 0;\n      var chatData = getters.chatDataOfUser(id);\n\n      if (chatData) {\n        chatData.msg.map(function (msg) {\n          if (!msg.isSeen && !msg.isSent) unseenMsg++;\n        });\n      }\n\n      return unseenMsg;\n    };\n  }\n};",null]}