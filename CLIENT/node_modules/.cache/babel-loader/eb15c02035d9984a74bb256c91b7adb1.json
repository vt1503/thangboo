{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/charts-and-maps/charts/echarts/EchartsBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/charts-and-maps/charts/echarts/EchartsBarChart.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/tule/Code/winbo.trade/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ECharts from 'vue-echarts/components/ECharts';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/chart/bar';\nimport theme from \"./theme.json\";\nECharts.registerTheme('ovilia-green', theme);\nexport default {\n  data: function data() {\n    return {\n      bar: {\n        legend: {},\n        tooltip: {},\n        dataset: {\n          // Provide data.\n          source: [['Product', '2015', '2016', '2017'], ['Matcha Latte'].concat(_toConsumableArray(this.randomize())), ['Milk Tea'].concat(_toConsumableArray(this.randomize())), ['Cheese Cocoa'].concat(_toConsumableArray(this.randomize())), ['Walnut Brownie'].concat(_toConsumableArray(this.randomize()))]\n        },\n        // Declare X axis, which is a category axis, mapping\n        // to the first column by default.\n        xAxis: {\n          type: 'category'\n        },\n        // Declare Y axis, which is a value axis.\n        yAxis: {},\n        // Declare several series, each of them mapped to a\n        // column of the dataset by default.\n        series: [{\n          type: 'bar'\n        }, {\n          type: 'bar'\n        }, {\n          type: 'bar'\n        }]\n      }\n    };\n  },\n  methods: {\n    randomize: function randomize() {\n      return [Math.round(300 + Math.random() * 700) / 10, Math.round(300 + Math.random() * 700) / 10, Math.round(300 + Math.random() * 700) / 10];\n    }\n  },\n  components: {\n    ECharts: ECharts\n  }\n};",null]}