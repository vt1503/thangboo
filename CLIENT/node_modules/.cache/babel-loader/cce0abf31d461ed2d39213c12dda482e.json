{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/components/vx-card/VxCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/components/vx-card/VxCard.vue","mtime":1573138056000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Prism from 'vue-prism-component';\nimport _color from '@/assets/utils/color.js';\nexport default {\n  name: 'vx-card',\n  props: {\n    title: String,\n    subtitle: String,\n    actionButtons: {\n      type: Boolean,\n      default: false\n    },\n    actionButtonsColor: {\n      type: String,\n      default: \"success\"\n    },\n    codeToggler: {\n      type: Boolean,\n      default: false\n    },\n    noShadow: {\n      default: false,\n      type: Boolean\n    },\n    noRadius: {\n      default: false,\n      type: Boolean\n    },\n    cardBorder: {\n      default: false,\n      type: Boolean\n    },\n    codeLanguage: {\n      default: \"markup\",\n      type: String\n    },\n    collapseAction: {\n      default: false,\n      type: Boolean\n    },\n    refreshContentAction: {\n      default: false,\n      type: Boolean\n    },\n    removeCardAction: {\n      default: false,\n      type: Boolean\n    },\n    headerBackground: {\n      default: '',\n      type: String\n    },\n    // bodyBackground: {\n    //   default: '',\n    //   type: String\n    // },\n    // headerbackground: {\n    //   default: '',\n    //   type: String\n    // },\n    cardBackground: {\n      default: '',\n      type: String\n    },\n    contentColor: {\n      default: '',\n      type: String\n    },\n    titleColor: {\n      default: '',\n      type: String\n    },\n    subtitleColor: {\n      default: '#b8c2cc',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      isContentCollapsed: false,\n      showCode: false,\n      maxHeight: null,\n      cardMaxHeight: null,\n      codeContainerMaxHeight: '0px',\n      tempHidden: false\n    };\n  },\n  computed: {\n    hasAction: function hasAction() {\n      return this.$slots.actions || this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler;\n    },\n    hasHeader: function hasHeader() {\n      return this.hasAction || this.title || this.subtitle;\n    },\n    StyleItems: function StyleItems() {\n      return {\n        maxHeight: this.maxHeight\n      };\n    },\n    cardStyles: function cardStyles() {\n      var obj = {\n        maxHeight: this.cardMaxHeight\n      };\n      if (!_color.isColor(this.cardBackground)) obj.background = _color.getColor(this.cardBackground);\n      if (!_color.isColor(this.contentColor)) obj.color = _color.getColor(this.contentColor);\n      return obj;\n    },\n    codeContainerStyles: function codeContainerStyles() {\n      return {\n        maxHeight: this.codeContainerMaxHeight\n      };\n    },\n    cardClasses: function cardClasses() {\n      var str = ''; // Add bg class\n\n      if (_color.isColor(this.cardBackground)) {\n        str += \" bg-\".concat(this.cardBackground);\n      } // add content color\n\n\n      if (_color.isColor(this.contentColor)) {\n        str += \" text-\".concat(this.contentColor);\n      }\n\n      return str.trim();\n    },\n    titleStyles: function titleStyles() {\n      return {\n        color: _color.getColor(this.titleColor)\n      };\n    },\n    titleClasses: function titleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.titleColor)) {\n        str += \" text-\".concat(this.titleColor);\n      }\n\n      return str.trim();\n    },\n    subtitleStyles: function subtitleStyles() {\n      var obj = {};\n      if (!_color.isColor(this.subtitleColor)) obj.color = _color.getColor(this.subtitleColor);\n      return obj;\n    },\n    subtitleClasses: function subtitleClasses() {\n      var str = ''; // add content color\n\n      if (_color.isColor(this.subtitleColor)) {\n        str += \" text-\".concat(this.subtitleColor);\n      }\n\n      return str.trim();\n    }\n  },\n  methods: {\n    toggleContent: function toggleContent() {\n      var _this = this;\n\n      this.$refs.content.style.overflow = \"hidden\";\n      var scrollHeight = this.$refs.content.scrollHeight;\n\n      if (this.maxHeight == '1.5rem') {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = 'none';\n          _this.$refs.content.style.overflow = null;\n        }, 300);\n      } else {\n        this.maxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this.maxHeight = \"1.5rem\";\n          _this.$refs.content.style.overflow = null;\n        }, 50);\n      }\n\n      this.isContentCollapsed = !this.isContentCollapsed;\n      this.$emit(\"toggleCollapse\", this.isContentCollapsed);\n    },\n    refreshcard: function refreshcard() {\n      this.$vs.loading({\n        container: this.$refs.content,\n        scale: 0.5\n      });\n      this.tempHidden = true;\n      this.$emit(\"refresh\", this);\n    },\n    removeRefreshAnimation: function removeRefreshAnimation() {\n      var _this2 = this;\n\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      setTimeout(function () {\n        _this2.$vs.loading.close(_this2.$refs.content);\n\n        _this2.tempHidden = false;\n      }, time);\n    },\n    removeCard: function removeCard() {\n      var _this3 = this;\n\n      var scrollHeight = this.$refs.card.scrollHeight;\n      this.cardMaxHeight = \"\".concat(scrollHeight, \"px\");\n      this.$el.style.overflow = \"hidden\";\n      setTimeout(function () {\n        _this3.cardMaxHeight = \"0px\";\n      }, 50);\n      this.$emit(\"remove\");\n    },\n    toggleCode: function toggleCode() {\n      var _this4 = this;\n\n      this.tempHidden = true;\n      this.showCode = !this.showCode;\n      var scrollHeight = this.$refs.codeContainer.scrollHeight;\n\n      if (this.codeContainerMaxHeight == '0px') {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = 'none';\n          _this4.tempHidden = false;\n        }, 300);\n      } else {\n        this.codeContainerMaxHeight = \"\".concat(scrollHeight, \"px\");\n        setTimeout(function () {\n          _this4.codeContainerMaxHeight = \"0px\";\n          _this4.tempHidden = false;\n        }, 150);\n      }\n    }\n  },\n  components: {\n    Prism: Prism\n  }\n};",null]}