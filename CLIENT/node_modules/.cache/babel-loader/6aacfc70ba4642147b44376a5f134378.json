{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/fake-db/data/apps/calendar/index.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/fake-db/data/apps/calendar/index.js","mtime":1570195276000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport mock from \"@/fake-db/mock.js\"; // Contact\n\nvar data = {\n  events: [{\n    id: 1,\n    title: 'My Event',\n    startDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 3),\n    endDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 2),\n    url: '',\n    classes: 'event-success',\n    label: 'business'\n  }],\n  labels: [{\n    text: 'Business',\n    value: 'business',\n    color: 'success'\n  }, {\n    text: 'Work',\n    value: 'work',\n    color: 'warning'\n  }, {\n    text: 'Personal',\n    value: 'personal',\n    color: 'danger'\n  }]\n}; // GET : Calendar Events\n\nmock.onGet(\"/api/apps/calendar/events\").reply(function () {\n  return [200, data.events];\n}); // POST : Add new events\n\nmock.onPost(\"/api/apps/calendar/events/\").reply(function (request) {\n  // Get event from post data\n  var event = JSON.parse(request.data).event;\n  var length = data.events.length;\n  var lastIndex = 0;\n\n  if (length) {\n    lastIndex = data.events[length - 1].id;\n  }\n\n  event.id = lastIndex + 1;\n  data.events.push(event);\n  return [201, {\n    id: event.id\n  }];\n}); // GET: Fetch Calendar Labels\n\nmock.onGet(\"api/apps/calendar/labels\").reply(function () {\n  return [200, data.labels];\n}); // POST: Update Event\n\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply(function (request) {\n  var e = JSON.parse(request.data).event;\n  e.startDate = new Date(e.startDate);\n  e.endDate = new Date(e.endDate);\n  var eventId = request.url.substring(request.url.lastIndexOf(\"/\") + 1);\n  var event = data.events.find(function (event) {\n    return event.id == eventId;\n  });\n  Object.assign(event, e);\n  return [200, event];\n}); // DELETE: Remove Event\n\nmock.onDelete(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply(function (request) {\n  var eventId = request.url.substring(request.url.lastIndexOf(\"/\") + 1);\n  var eventIndex = data.events.findIndex(function (event) {\n    return event.id == eventId;\n  });\n  data.events.splice(eventIndex, 1);\n  return [200];\n}); // POST: Update Dragged Event\n\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/dragged\\/\\d+/).reply(function (request) {\n  var eventId = request.url.substring(request.url.lastIndexOf(\"/\") + 1);\n  var event = data.events.find(function (event) {\n    return event.id == eventId;\n  });\n  var payload = JSON.parse(request.data).payload;\n  var draggedDateStart = new Date(payload.date);\n  var eventStartDate = new Date(event.startDate).getTime();\n  var eventEndDate = new Date(event.endDate).getTime();\n  var diff = draggedDateStart - eventStartDate;\n  var newEndDate = new Date(eventEndDate + diff);\n  event.startDate = draggedDateStart;\n  event.endDate = newEndDate;\n  return [200, event];\n});",null]}