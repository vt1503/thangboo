{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/user/user-edit/UserEditTabAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/user/user-edit/UserEditTabAccount.vue","mtime":1573712498000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport vSelect from 'vue-select';\nexport default {\n  components: {\n    vSelect: vSelect\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      data_local: JSON.parse(JSON.stringify(this.data)),\n      statusOptions: [{\n        label: \"Active\",\n        value: \"active\"\n      }, {\n        label: \"Blocked\",\n        value: \"blocked\"\n      }, {\n        label: \"Deactivated\",\n        value: \"deactivated\"\n      }],\n      roleOptions: [{\n        label: \"Admin\",\n        value: \"admin\"\n      }, {\n        label: \"User\",\n        value: \"user\"\n      }, {\n        label: \"Staff\",\n        value: \"staff\"\n      }]\n    };\n  },\n  computed: {\n    status_local: {\n      get: function get() {\n        return {\n          label: this.capitalize(this.data_local.status),\n          value: this.data_local.status\n        };\n      },\n      set: function set(obj) {\n        this.data_local.status = obj.value;\n      }\n    },\n    role_local: {\n      get: function get() {\n        return {\n          label: this.capitalize(this.data_local.role),\n          value: this.data_local.role\n        };\n      },\n      set: function set(obj) {\n        this.data_local.role = obj.value;\n      }\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any();\n    }\n  },\n  methods: {\n    capitalize: function capitalize(str) {\n      return str.slice(0, 1).toUpperCase() + str.slice(1, str.length);\n    },\n    save_changes: function save_changes() {\n      if (!this.validateForm) return; // Here will go your API call for updating data\n      // You can get data in \"this.data_local\"\n    },\n    reset_data: function reset_data() {\n      this.data_local = JSON.parse(JSON.stringify(this.data));\n    },\n    update_avatar: function update_avatar() {// You can update avatar Here\n      // For reference you can check dataList example\n      // We haven't integrated it here, because data isn't saved in DB\n    }\n  }\n};",null]}