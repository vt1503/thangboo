{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/components/extra-components/tree/TreeAsyncTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/components/extra-components/tree/TreeAsyncTree.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/tule/Code/winbo.trade/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/tule/Code/winbo.trade/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VTree, VSelectTree } from 'vue-tree-halower';\nexport default {\n  data: function data() {\n    return {\n      initSelected: ['node-1'],\n      treeData: [{\n        title: 'node1',\n        expanded: false,\n        async: true\n      }]\n    };\n  },\n  methods: {\n    nodechecked: function nodechecked(node, v) {\n      alert('that a node-check envent ...' + node.title + v);\n    },\n    asyncLoad: function () {\n      var _asyncLoad = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(node) {\n        var _node$children;\n\n        var _node$checked, checked, pro;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _node$checked = node.checked, checked = _node$checked === void 0 ? false : _node$checked;\n                this.$set(node, 'loading', true);\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  setTimeout(resolve, 2000, [{\n                    title: 'test1',\n                    async: true\n                  }, {\n                    title: 'test2',\n                    async: true\n                  }, {\n                    title: 'test3'\n                  }]);\n                });\n\n              case 4:\n                pro = _context.sent;\n\n                if (!node.hasOwnProperty('children')) {\n                  this.$set(node, 'children', []);\n                }\n\n                (_node$children = node.children).push.apply(_node$children, _toConsumableArray(pro));\n\n                this.$set(node, 'loading', false);\n\n                if (checked) {\n                  this.$refs.tree.childCheckedHandle(node, checked);\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function asyncLoad(_x) {\n        return _asyncLoad.apply(this, arguments);\n      }\n\n      return asyncLoad;\n    }()\n  },\n  components: {\n    VTree: VTree,\n    VSelectTree: VSelectTree\n  }\n};",null]}