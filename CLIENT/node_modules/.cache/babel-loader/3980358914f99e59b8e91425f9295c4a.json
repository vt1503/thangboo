{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/Wallet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/Wallet.vue","mtime":1649936361955},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar connectionNAP = false; //import NapTien from '@/pages/trade/slidebar/NapTien.vue'\n//import RutTien from '@/pages/trade/slidebar/RutTienS.vue'\n\nimport NapRutTien from '@/pages/trade/slidebar/NapRutTien.vue';\nimport getData from '@/pages/trade/navbar/components/data.json';\nimport AuthenticationService from '@/services/AuthenticationService';\nimport getSetSys from '@/services/settingSys.json';\nimport moment from 'moment';\nimport SETTINGS from \"../../../settings.json\";\nexport default {\n  components: {\n    //NapTien,\n    //RutTien,\n    NapRutTien: NapRutTien\n  },\n  data: function data() {\n    return {\n      typeShow: '',\n      timeShow: '',\n      valueShow: '',\n      descriptShow: '',\n      noteShow: '',\n      statusShow: '',\n      getSetSys: getSetSys,\n      popupActiveNRTien: false,\n      popupBillActive: false,\n      showVC: true,\n      showVGD: false,\n      showHisUSD: true,\n      showHisHH: false,\n      blObj: getData,\n      textWalletHtml: '<span class=\"mr-1 color-blue uppercase green\">USDT</span> <span>Wallet</span>',\n      textAccLive: 'Tài khoản Thực',\n      amountAcc: 0,\n      amountAccLive: 0,\n      typeChange: false,\n      // false: Wall to Live, true: Live to Wallet\n      enterAmount: '',\n      popupTransferActive: false,\n      currentxUSDT: 1,\n      currentxHH: 1,\n      currentxWGD: 1,\n      email: '',\n      password: '',\n      error: null,\n      addSidebarNapTien: false,\n      addSidebarRutTien: false,\n      balanceUser: 0,\n      balanceUSDT: 0,\n      balanceETH: 0,\n      balanceBTC: 0,\n      balancePaypal: 0,\n      isLoading: false,\n      dataHisWallet: [],\n      totalRUSDT: 0,\n      dataHisWalletHoaHong: [],\n      totalRHH: 0,\n      dataHisWalletWGD: [],\n      totalRWGD: 0\n    };\n  },\n  computed: {\n    //   giaTriUocTinh(){\n    //       return this.formatPrice(getSetSys.quotePriceUSDT + getSetSys.quotePriceETH + getSetSys.quotePriceBTC + getSetSys.quotePricePAYPAL, 2)\n    //   },\n    balanceForUser: function balanceForUser() {\n      return getData.balance;\n    }\n  },\n  methods: {\n    popupBill: function popupBill(tr) {\n      this.popupBillActive = true;\n      this.timeShow = this.formatDateWallet(tr.created_at);\n\n      if (getData.displayName.toUpperCase() == tr.from_u.toUpperCase()) {\n        this.valueShow = tr.type_key == 'rt' || tr.type_key == 'ct' || tr.type_key == 'ctsa' || tr.type_key == 'nn' || tr.type_key == 'mv' ? '-$' + this.formatPrice(tr.amount, 2) : '+$' + this.formatPrice(tr.amount, 2);\n      } else if (getData.displayName.toUpperCase() == tr.to_u.toUpperCase()) {\n        this.valueShow = '+$' + this.formatPrice(tr.amount, 2);\n      }\n\n      switch (tr.type_key) {\n        case 'rt':\n          this.typeShow = 'Rút tiền';\n          break;\n\n        case 'nt':\n          this.typeShow = 'Nạp tiền' + tr.paypal_order_id ? 'Paypal' : '';\n          break;\n\n        case 'nn':\n          this.typeShow = 'Nạp nhanh';\n          break;\n\n        case 'mv':\n          this.typeShow = 'Mua VIP';\n          break;\n\n        default:\n      }\n\n      if (tr.type_key == 'ct' || tr.type_key == 'ctsa' || tr.type_key == 'ctas') {\n        this.typeShow = 'Chuyển tiền';\n      }\n\n      this.descriptShow = tr.type_key == 'ctsa' || tr.type_key == 'ctas' ? '' : tr.from_u + ': ';\n      this.descriptShow = this.descriptShow + tr.type;\n      this.noteShow = tr.note ? tr.note : '-';\n\n      if (tr.status == 1) {\n        this.statusShow = 'Hoàn tất';\n      } else if (tr.status == 0) {\n        this.statusShow = 'Đợi';\n      } else if (tr.status == 0) {\n        this.statusShow = 'Hủy';\n      }\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    showPopNapRutTien: function showPopNapRutTien() {\n      this.popupActiveNRTien = true;\n    },\n    // viewNapTien(){ \n    //   this.toggleDataSidebarNapTien(true)\n    // },\n    // viewRutTien(){ \n    //   this.toggleDataSidebarRutTien(true)\n    // },\n    toggleDataSidebarNapTien: function toggleDataSidebarNapTien() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.addSidebarNapTien = val;\n    },\n    toggleDataSidebarRutTien: function toggleDataSidebarRutTien() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.addSidebarRutTien = val;\n    },\n    changeTransMoney: function changeTransMoney() {\n      if (this.typeChange) {\n        // Live to Wallet  \n        this.typeChange = false;\n        var b = this.textWalletHtml;\n        var a = this.textAccLive;\n        var d = getData.balance;\n        var c = getData.blLive;\n        this.textAccLive = b;\n        this.textWalletHtml = a;\n        this.amountAcc = d;\n        this.amountAccLive = c;\n      } else {\n        // Live to Wallet\n        this.typeChange = true;\n        var _a = this.textWalletHtml;\n        var _b = this.textAccLive;\n        var _c = getData.balance;\n        var _d = getData.blLive;\n        this.textAccLive = _a;\n        this.textWalletHtml = _b;\n        this.amountAcc = _d;\n        this.amountAccLive = _c;\n      }\n    },\n    clickReloadMoneyDemo: function clickReloadMoneyDemo() {\n      var _this = this;\n\n      AuthenticationService.reloadMoneyDemo().then(function (res) {\n        if (res.data.success) {\n          _this.blObj.blDemo = 1000;\n          return _this.$vs.notify({\n            text: 'Tài khoản Demo đã nạp.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'success',\n            position: 'top-right'\n          });\n        }\n      });\n    },\n    enterAllMoney: function enterAllMoney() {\n      if (this.typeChange) {\n        // nếu true thì live to wallet\n        this.enterAmount = getData.blLive;\n      } else {\n        // wallet to live\n        this.enterAmount = getData.balance;\n      }\n    },\n    clickTransMoney: function clickTransMoney() {\n      var _this2 = this;\n\n      var amount = this.enterAmount.toString();\n      amount = this.replaceAll(amount, ',', '');\n      amount = this.replaceAll(amount.toString(), '-', '');\n\n      if (!this.isNumber(amount) || amount <= 0) {\n        return this.$vs.notify({\n          text: 'Giá trị không hợp lệ',\n          color: 'danger',\n          position: 'top-right',\n          iconPack: 'feather',\n          icon: 'icon-x-circle'\n        });\n      }\n\n      if (this.typeChange) {\n        // nếu true thì live to wallet\n        // gửi tiền từ live tới tài khoản chính\n        var obj = {\n          email: getData.email,\n          m: amount\n        };\n        AuthenticationService.sendMoneyLiveToUsdt(obj).then(function (res) {\n          if (res.data.success) {\n            getData.blLive -= amount;\n            getData.balance += amount;\n            _this2.amountAcc = getData.blLive;\n            _this2.amountAccLive = getData.balance; // reload lại lịch sử\n\n            _this2.getListHisTradeWGD();\n\n            return _this2.$vs.notify({\n              text: 'Chuyển tiền thành công',\n              color: 'success',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-check'\n            });\n          } else {\n            return _this2.$vs.notify({\n              text: 'Số dư của bạn không đủ',\n              color: 'danger',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-x-circle'\n            });\n          }\n        });\n      } else {\n        // wallet to live\n        // gửi tiền từ tài khoản chính tới live\n        var _obj = {\n          email: getData.email,\n          m: amount\n        };\n        AuthenticationService.sendMoneyUsdtToLive(_obj).then(function (res) {\n          if (res.data.success) {\n            getData.blLive += amount;\n            getData.balance -= amount;\n            _this2.amountAcc = getData.balance;\n            _this2.amountAccLive = getData.blLive; // reload lại lịch sử\n\n            _this2.getListHisTradeWGD();\n\n            return _this2.$vs.notify({\n              text: 'Chuyển tiền thành công',\n              color: 'success',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-check'\n            });\n          } else {\n            return _this2.$vs.notify({\n              text: 'Số dư của bạn không đủ',\n              color: 'danger',\n              position: 'top-right',\n              iconPack: 'feather',\n              icon: 'icon-x-circle'\n            });\n          }\n        });\n      }\n    },\n    getListHisTrade: function getListHisTrade() {\n      var _this3 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWallet().then(function (res) {\n        if (res.data.success) {\n          _this3.isLoading = false;\n          _this3.dataHisWallet = res.data.data;\n          var c = (res.data.count / 10).toString(); //this.totalRUSDT = Number(c.split(\".\")[0])\n\n          _this3.totalRUSDT = Math.ceil(c);\n        }\n      });\n    },\n    clickPageUSDT: function clickPageUSDT(page) {\n      var _this4 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWalletNumber(page).then(function (res) {\n        if (res.data.success) {\n          _this4.isLoading = false;\n          _this4.dataHisWallet = res.data.data;\n        }\n      });\n    },\n    getListHisTradeHH: function getListHisTradeHH() {\n      var _this5 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWalletHH().then(function (res) {\n        if (res.data.success) {\n          _this5.isLoading = false;\n          _this5.dataHisWalletHoaHong = res.data.data;\n          var c = (res.data.count / 10).toString(); //this.totalRHH = Number(c.split(\".\")[0])\n\n          _this5.totalRHH = Math.ceil(c);\n        }\n      });\n    },\n    clickPageHH: function clickPageHH(page) {\n      var _this6 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWalletHHNumber(page).then(function (res) {\n        if (res.data.success) {\n          _this6.isLoading = false;\n          _this6.dataHisWalletHoaHong = res.data.data;\n        }\n      });\n    },\n    getListHisTradeWGD: function getListHisTradeWGD() {\n      var _this7 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWalletWGD().then(function (res) {\n        if (res.data.success) {\n          _this7.isLoading = false;\n          _this7.dataHisWalletWGD = res.data.data;\n          var c = (res.data.count / 10).toString();\n          _this7.totalRWGD = Number(c.split(\".\")[0]);\n        }\n      });\n    },\n    clickPageWGD: function clickPageWGD(page) {\n      var _this8 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisTradeWalletWGDNumber(page).then(function (res) {\n        if (res.data.success) {\n          _this8.isLoading = false;\n          _this8.dataHisWalletWGD = res.data.data;\n        }\n      });\n    },\n    replaceAll: function replaceAll(str, find, replace) {\n      return Number(str.replace(new RegExp(find, 'g'), replace));\n    },\n    isNumber: function isNumber(value) {\n      return typeof value === 'number' && isFinite(value);\n    },\n    formatDateWallet: function formatDateWallet(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY HH:mm:ss');\n      }\n    },\n    getBalanceWallet: function getBalanceWallet() {\n      var _this9 = this;\n\n      AuthenticationService.getBalanceWallet().then(function (res) {\n        var d = res.data;\n\n        if (d.success == 3 || d.success == 4) {\n          localStorage.removeItem('token');\n\n          _this9.$router.push('/login').catch(function () {});\n\n          return;\n        }\n\n        if (d.success) {\n          var mU = d.data.usdt;\n          var mE = d.data.eth;\n          var mB = d.data.btc;\n          var mP = d.data.paypal;\n          _this9.balanceUSDT = mU;\n          _this9.balanceETH = mE;\n          _this9.balanceBTC = mB;\n          _this9.balancePaypal = mP; // mặc định hiển thị tiền đầu vào\n\n          _this9.getAmount = _this9.balancePaypal;\n        }\n      });\n    },\n    getSysWallet: function getSysWallet() {\n      var _this10 = this;\n\n      AuthenticationService.getSetupWallet().then(function (res) {\n        var g = res.data.data;\n        getSetSys.quotePriceUSDT = _this10.replaceAll(_this10.formatPrice(g.qUSDT, 2), ',', ''); // giá sấp sĩ USD\n\n        getSetSys.quotePriceETH = _this10.replaceAll(_this10.formatPrice(g.qETH, 4), ',', ''); // giá sấp sĩ USD\n\n        getSetSys.quotePriceBTC = _this10.replaceAll(_this10.formatPrice(g.qBTC, 6), ',', ''); // giá sấp sĩ USD\n\n        getSetSys.quotePricePAYPAL = _this10.replaceAll(_this10.formatPrice(g.qPaypal, 2), ',', ''); //  giá sấp sĩ USD\n\n        getSetSys.typeCurrUseSys = g.tCUseSys; // đồng tiền tệ sử dụng trong hệ thống\n\n        getSetSys.minDepositBTC = g.mDBTC; // nạp tiền tối thiểu\n\n        getSetSys.minDepositETH = g.mDETH; // nạp tiền tối thiểu\n\n        getSetSys.minDepositUSDT = g.mDUSDT; // nạp tiền tối thiểu\n\n        getSetSys.minDepositPaypal = g.mDPaypal; // nạp tiền tối thiểu\n\n        getSetSys.minWithdrawalBTC = g.mWBTC; // rút tiền tối thiểu\n\n        getSetSys.minWithdrawalETH = g.mWETH; // rút tiền tối thiểu\n\n        getSetSys.minWithdrawalUSDT = g.mWUSDT; // rút tiền tối thiểu\n\n        getSetSys.minWithdrawalPaypal = g.mWPaypal; // rút tiền tối thiểu\n\n        getSetSys.isActiveWalletPaypal = g.iAWPaypal; // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\n\n        getSetSys.isActiveWalletETH = g.iAWETH; // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\n\n        getSetSys.isActiveWalletUSDT = g.iAWUSDT; // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\n\n        getSetSys.isActiveWalletBTC = g.iAWBTC; // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\n\n        getSetSys.feeRutPaypalNoiBo = g.fDPaypalNB;\n        getSetSys.feeRutPaypalAcc = g.fDPaypalAcc;\n        getSetSys.feeRutBTCNoiBo = g.fDBTCNB;\n        getSetSys.feeRutBTCAcc = g.fDBTCAcc;\n        getSetSys.feeRutETHNoiBo = g.fDETHNB;\n        getSetSys.feeRutETHERC20 = g.fDETHERC20;\n        getSetSys.feeRutUSDTNoiBo = g.fDUSDTNB;\n        getSetSys.feeRutUSDTBEP20 = g.fDUSDTBEP20;\n        getSetSys.feeRutUSDTERC20 = g.fDUSDTERC20;\n      });\n    },\n    sendMessage: function sendMessage(message) {\n      this.connectionNAP.send(JSON.stringify(message));\n    },\n    getInfoUser: function getInfoUser() {\n      this.sendMessage({\n        type: 'accountDetail',\n        data: {\n          email: getData.email\n        }\n      });\n    },\n    onWindowLoad: function onWindowLoad() {\n      this.getInfoUser();\n    }\n  },\n  mounted: function mounted() {\n    var _this11 = this;\n\n    this.getSysWallet();\n    this.getListHisTrade();\n    setTimeout(function () {\n      _this11.getListHisTrade();\n    }, 1000);\n    this.getListHisTradeWGD();\n    this.getBalanceWallet();\n  },\n  created: function created() {\n    this.amountAcc = getData.balance;\n    this.amountAccLive = getData.blLive;\n\n    if (!connectionNAP) {\n      connectionNAP = true;\n      this.connectionNAP = new WebSocket(SETTINGS.BASE_URL_SOCKET_NAP);\n\n      this.connectionNAP.onopen = function () {\n        //console.log(\"Successfully connected to the echo websocket server...\")\n        this.onWindowLoad();\n      }.bind(this);\n\n      this.connectionNAP.onmessage = function (event) {\n        var data = JSON.parse(event.data);\n\n        if (data.type === 'mess') {\n          var dl = data.data;\n          this.amountAcc += dl.usd * 1;\n          getData.balance += dl.usd * 1;\n          this.balanceUSDT += dl.usd * 1;\n          return this.$vs.notify({\n            text: dl.mess,\n            color: dl.style,\n            position: 'top-right',\n            iconPack: 'feather',\n            icon: 'icon-x-circle'\n          });\n        }\n      }.bind(this);\n    }\n  }\n};",null]}