{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/DataViewSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/DataViewSidebar.vue","mtime":1571822968000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(val) {\n      if (!val) return;\n\n      if (Object.entries(this.data).length === 0) {\n        this.initValues();\n        this.$validator.reset();\n      } else {\n        var _JSON$parse = JSON.parse(JSON.stringify(this.data)),\n            category = _JSON$parse.category,\n            id = _JSON$parse.id,\n            img = _JSON$parse.img,\n            name = _JSON$parse.name,\n            order_status = _JSON$parse.order_status,\n            price = _JSON$parse.price;\n\n        this.dataId = id;\n        this.dataCategory = category;\n        this.dataImg = img;\n        this.dataName = name;\n        this.dataOrder_status = order_status;\n        this.dataPrice = price;\n        this.initValues();\n      } // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n\n    }\n  },\n  data: function data() {\n    return {\n      dataId: null,\n      dataName: \"\",\n      dataCategory: null,\n      dataImg: null,\n      dataOrder_status: \"pending\",\n      dataPrice: 0,\n      category_choices: [{\n        text: 'Audio',\n        value: 'audio'\n      }, {\n        text: 'Computers',\n        value: 'computers'\n      }, {\n        text: 'Fitness',\n        value: 'fitness'\n      }, {\n        text: 'Appliance',\n        value: 'appliance'\n      }],\n      order_status_choices: [{\n        text: 'Pending',\n        value: 'pending'\n      }, {\n        text: 'Canceled',\n        value: 'canceled'\n      }, {\n        text: 'Delivered',\n        value: 'delivered'\n      }, {\n        text: 'On Hold',\n        value: 'on_hold'\n      }],\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  computed: {\n    isSidebarActiveLocal: {\n      get: function get() {\n        return this.isSidebarActive;\n      },\n      set: function set(val) {\n        if (!val) {\n          this.$emit('closeSidebar'); // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    },\n    isFormValid: function isFormValid() {\n      return !this.errors.any() && this.dataName && this.dataCategory && this.dataPrice > 0;\n    }\n  },\n  methods: {\n    initValues: function initValues() {\n      if (this.data.id) return;\n      this.dataId = null;\n      this.dataName = \"\";\n      this.dataCategory = null;\n      this.dataOrder_status = \"pending\";\n      this.dataPrice = 0;\n      this.dataImg = null;\n    },\n    submitData: function submitData() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          var obj = {\n            id: _this.dataId,\n            name: _this.dataName,\n            img: _this.dataImg,\n            category: _this.dataCategory,\n            order_status: _this.dataOrder_status,\n            price: _this.dataPrice\n          };\n\n          if (_this.dataId !== null && _this.dataId >= 0) {\n            _this.$store.dispatch(\"dataList/updateItem\", obj).catch(function (err) {\n              console.error(err);\n            });\n          } else {\n            delete obj.id;\n            obj.popularity = 0;\n\n            _this.$store.dispatch(\"dataList/addItem\", obj).catch(function (err) {\n              console.error(err);\n            });\n          }\n\n          _this.$emit('closeSidebar');\n\n          _this.initValues();\n        }\n      });\n    },\n    updateCurrImg: function updateCurrImg(input) {\n      var _this2 = this;\n\n      if (input.target.files && input.target.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          _this2.dataImg = e.target.result;\n        };\n\n        reader.readAsDataURL(input.target.files[0]);\n      }\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  }\n};",null]}