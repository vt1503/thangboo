{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/components/navbar/components/NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/components/navbar/components/NotificationDropDown.vue","mtime":1571653082000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  data: function data() {\n    return {\n      unreadNotifications: [{\n        index: 0,\n        title: 'New Message',\n        msg: 'Are your going to meet me tonight?',\n        icon: 'MessageSquareIcon',\n        time: this.randomDate({\n          sec: 10\n        }),\n        category: 'primary'\n      }, {\n        index: 1,\n        title: 'New Order Recieved',\n        msg: 'You got new order of goods.',\n        icon: 'PackageIcon',\n        time: this.randomDate({\n          sec: 40\n        }),\n        category: 'success'\n      }, {\n        index: 2,\n        title: 'Server Limit Reached!',\n        msg: 'Server have 99% CPU usage.',\n        icon: 'AlertOctagonIcon',\n        time: this.randomDate({\n          min: 1\n        }),\n        category: 'danger'\n      }, {\n        index: 3,\n        title: 'New Mail From Peter',\n        msg: 'Cake sesame snaps cupcake',\n        icon: 'MailIcon',\n        time: this.randomDate({\n          min: 6\n        }),\n        category: 'primary'\n      }, {\n        index: 4,\n        title: 'Bruce\\'s Party',\n        msg: 'Chocolate cake oat cake tiramisu',\n        icon: 'CalendarIcon',\n        time: this.randomDate({\n          hr: 2\n        }),\n        category: 'warning'\n      }],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  methods: {\n    elapsedTime: function elapsedTime(startTime) {\n      var x = new Date(startTime);\n      var now = new Date();\n      var timeDiff = now - x;\n      timeDiff /= 1000;\n      var seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n      var minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n      var hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n      var days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n      var years = timeDiff;\n\n      if (years > 0) {\n        return years + (years > 1 ? ' Years ' : ' Year ') + 'ago';\n      } else if (days > 0) {\n        return days + (days > 1 ? ' Days ' : ' Day ') + 'ago';\n      } else if (hours > 0) {\n        return hours + (hours > 1 ? ' Hrs ' : ' Hour ') + 'ago';\n      } else if (minutes > 0) {\n        return minutes + (minutes > 1 ? ' Mins ' : ' Min ') + 'ago';\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now');\n      }\n\n      return 'Just Now';\n    },\n    // Method for creating dummy notification time\n    randomDate: function randomDate(_ref) {\n      var hr = _ref.hr,\n          min = _ref.min,\n          sec = _ref.sec;\n      var date = new Date();\n      if (hr) date.setHours(date.getHours() - hr);\n      if (min) date.setMinutes(date.getMinutes() - min);\n      if (sec) date.setSeconds(date.getSeconds() - sec);\n      return date;\n    }\n  }\n};",null]}