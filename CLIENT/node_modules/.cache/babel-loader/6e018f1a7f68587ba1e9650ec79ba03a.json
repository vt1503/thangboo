{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js??ref--13-0!/Users/tule/Code/winbo.trade/src/store/email/moduleEmailActions.js","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/store/email/moduleEmailActions.js","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleEmailActions.js\n  Description: Email Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport axios from \"@/axios.js\";\nexport default {\n  setEmailSearchQuery: function setEmailSearchQuery(_ref, query) {\n    var commit = _ref.commit;\n    commit(\"SET_EMAIL_SEARCH_QUERY\", query);\n  },\n  // Fetch emails\n  fetchEmails: function fetchEmails(_ref2, payload) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/mails\", {\n        params: {\n          filter: payload.filter\n        }\n      }).then(function (response) {\n        commit(\"SET_MAILS\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Tags\n  fetchTags: function fetchTags(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/tags\").then(function (response) {\n        commit(\"SET_TAGS\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Fetch Email Meta\n  fetchMeta: function fetchMeta(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      axios.get(\"/api/apps/email/meta\").then(function (response) {\n        commit(\"SET_META\", response.data);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Move mails to another folder\n  moveMailsTo: function moveMailsTo(_ref5, payload) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/move-mails\", {\n        emailIds: payload.emailIds,\n        mailFolder: payload.to\n      }).then(function (response) {\n        commit(\"MOVE_MAILS_TO\", payload);\n        commit(\"UPDATE_UNREAD_META_ON_MOVE\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Update Mails label\n  updateLabels: function updateLabels(_ref6, payload) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/update-labels\", {\n        emailIds: payload.mails,\n        label: payload.label\n      }).then(function (response) {\n        commit(\"UPDATE_LABELS\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  setLabels: function setLabels(_ref7, payload) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/set-labels\", {\n        mailId: payload.mailId,\n        labels: payload.labels\n      }).then(function (response) {\n        commit(\"SET_LABELS\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Set mails flag unread to true\n  setUnread: function setUnread(_ref8, payload) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/mark-unread\", {\n        emailIds: payload.emailIds,\n        unreadFlag: payload.unreadFlag\n      }).then(function (response) {\n        commit(\"SET_UNREAD\", payload); // Remove this if you are getting meta like us\n        // Use your own method to update email meta if you are fetching email meta\n\n        commit(\"UPDATE_UNREAD_META\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // Toggle isStarred flag in mail\n  toggleIsMailStarred: function toggleIsMailStarred(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      axios.post(\"/api/apps/email/set-starred\", {\n        mailId: payload.mailId,\n        value: payload.value\n      }).then(function (response) {\n        commit(\"TOGGLE_IS_MAIL_STARRED\", payload);\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};",null]}