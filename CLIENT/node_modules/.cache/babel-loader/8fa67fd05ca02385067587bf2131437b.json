{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/components/statistics-cards/StatisticsCardLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/components/statistics-cards/StatisticsCardLine.vue","mtime":1571637234000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueApexCharts from 'vue-apexcharts';\nimport chartConfigs from \"./chartConfigs.js\";\nimport _color from '@/assets/utils/color.js';\nexport default {\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    statistic: {\n      type: [Number, String],\n      required: true\n    },\n    statisticTitle: {\n      type: String\n    },\n    chartData: {// type: Array,\n      // required: true\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    colorTo: {\n      type: String\n    },\n    // chartType: {\n    //     type: String,\n    //     default: 'line-chart',\n    // },\n    type: {\n      type: String,\n      default: 'line'\n    },\n    iconRight: {\n      type: Boolean,\n      default: false\n    },\n    hideChart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      chartOptions: null\n    };\n  },\n  watch: {\n    themePrimaryColor: function themePrimaryColor() {\n      this.$refs.apexChart.updateOptions({\n        theme: {\n          monochrome: {\n            color: this.getHex(this.color)\n          }\n        }\n      });\n    }\n  },\n  computed: {\n    themePrimaryColor: function themePrimaryColor() {\n      return this.$store.state.themePrimaryColor;\n    }\n  },\n  methods: {\n    getHex: function getHex(color) {\n      if (_color.isColor(color)) {\n        var rgb = window.getComputedStyle(document.documentElement).getPropertyValue(\"--vs-\".concat(color));\n        rgb = rgb.split(\",\");\n        return \"#\" + ((1 << 24) + (Number(rgb[0]) << 16) + (Number(rgb[1]) << 8) + Number(rgb[2])).toString(16).slice(1);\n      }\n\n      return color;\n    },\n    gradientToColor: function gradientToColor(color) {\n      var gradientToColors = {\n        \"primary\": \"#A9A2F6\",\n        \"success\": \"#55DD92\",\n        \"warning\": \"#ffc085\",\n        \"danger\": \"#F97794\"\n      };\n      return gradientToColors[color] ? gradientToColors[color] : gradientToColors[\"primary\"];\n    }\n  },\n  components: {\n    VueApexCharts: VueApexCharts\n  },\n  created: function created() {\n    if (this.type == 'area') {\n      // assign chart options\n      this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions);\n      this.chartOptions['theme'] = {\n        monochrome: {\n          enabled: true,\n          color: this.getHex(this.color),\n          shadeTo: 'light',\n          shadeIntensity: 0.65\n        }\n      };\n    } else if (this.type == \"line\") {\n      // Assign chart options\n      this.chartOptions = JSON.parse(JSON.stringify(chartConfigs.lineChartOptions));\n      this.chartOptions.fill.gradient.gradientToColors = [this.gradientToColor(this.colorTo || this.color)];\n      this.chartOptions.colors = [this.getHex(this.color)];\n    }\n  }\n};",null]}