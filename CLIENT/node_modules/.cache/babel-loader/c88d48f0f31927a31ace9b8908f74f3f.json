{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/user/user-list/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/user/user-list/UserList.vue","mtime":1573712498000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { AgGridVue } from \"ag-grid-vue\";\nimport '@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss';\nimport vSelect from 'vue-select'; // Store Module\n\nimport moduleUserManagement from '@/store/user-management/moduleUserManagement.js'; // Cell Renderer\n\nimport CellRendererLink from \"./cell-renderer/CellRendererLink.vue\";\nimport CellRendererStatus from \"./cell-renderer/CellRendererStatus.vue\";\nimport CellRendererVerified from \"./cell-renderer/CellRendererVerified.vue\";\nimport CellRendererActions from \"./cell-renderer/CellRendererActions.vue\";\nexport default {\n  components: {\n    AgGridVue: AgGridVue,\n    vSelect: vSelect,\n    // Cell Renderer\n    CellRendererLink: CellRendererLink,\n    CellRendererStatus: CellRendererStatus,\n    CellRendererVerified: CellRendererVerified,\n    CellRendererActions: CellRendererActions\n  },\n  data: function data() {\n    return {\n      // Filter Options\n      roleFilter: {\n        label: 'All',\n        value: 'all'\n      },\n      roleOptions: [{\n        label: 'All',\n        value: 'all'\n      }, {\n        label: 'Admin',\n        value: 'admin'\n      }, {\n        label: 'User',\n        value: 'user'\n      }, {\n        label: 'Staff',\n        value: 'staff'\n      }],\n      statusFilter: {\n        label: 'All',\n        value: 'all'\n      },\n      statusOptions: [{\n        label: 'All',\n        value: 'all'\n      }, {\n        label: 'Active',\n        value: 'active'\n      }, {\n        label: 'Deactivated',\n        value: 'deactivated'\n      }, {\n        label: 'Blocked',\n        value: 'blocked'\n      }],\n      isVerifiedFilter: {\n        label: 'All',\n        value: 'all'\n      },\n      isVerifiedOptions: [{\n        label: 'All',\n        value: 'all'\n      }, {\n        label: 'Yes',\n        value: 'yes'\n      }, {\n        label: 'No',\n        value: 'no'\n      }],\n      departmentFilter: {\n        label: 'All',\n        value: 'all'\n      },\n      departmentOptions: [{\n        label: 'All',\n        value: 'all'\n      }, {\n        label: 'Sales',\n        value: 'sales'\n      }, {\n        label: 'Development',\n        value: 'development'\n      }, {\n        label: 'Management',\n        value: 'management'\n      }],\n      searchQuery: \"\",\n      // AgGrid\n      gridApi: null,\n      gridOptions: {},\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        suppressMenu: true\n      },\n      columnDefs: [{\n        headerName: 'ID',\n        field: 'id',\n        width: 125,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      }, {\n        headerName: 'Username',\n        field: 'username',\n        filter: true,\n        width: 210,\n        cellRendererFramework: 'CellRendererLink'\n      }, {\n        headerName: 'Email',\n        field: 'email',\n        filter: true,\n        width: 225\n      }, {\n        headerName: 'Name',\n        field: 'name',\n        filter: true,\n        width: 200\n      }, {\n        headerName: 'Country',\n        field: 'country',\n        filter: true,\n        width: 150\n      }, {\n        headerName: 'Role',\n        field: 'role',\n        filter: true,\n        width: 150\n      }, {\n        headerName: 'Status',\n        field: 'status',\n        filter: true,\n        width: 150,\n        cellRendererFramework: 'CellRendererStatus'\n      }, {\n        headerName: 'Verified',\n        field: 'is_verified',\n        filter: true,\n        width: 125,\n        cellRendererFramework: 'CellRendererVerified',\n        cellClass: \"text-center\"\n      }, {\n        headerName: 'Department',\n        field: 'department',\n        filter: true,\n        width: 150\n      }, {\n        headerName: 'Actions',\n        field: 'transactions',\n        width: 150,\n        cellRendererFramework: 'CellRendererActions'\n      }],\n      // Cell Renderer Components\n      components: {\n        CellRendererLink: CellRendererLink,\n        CellRendererStatus: CellRendererStatus,\n        CellRendererVerified: CellRendererVerified,\n        CellRendererActions: CellRendererActions\n      }\n    };\n  },\n  watch: {\n    roleFilter: function roleFilter(obj) {\n      this.setColumnFilter(\"role\", obj.value);\n    },\n    statusFilter: function statusFilter(obj) {\n      this.setColumnFilter(\"status\", obj.value);\n    },\n    isVerifiedFilter: function isVerifiedFilter(obj) {\n      var val = obj.value === \"all\" ? \"all\" : obj.value == \"yes\" ? \"true\" : \"false\";\n      this.setColumnFilter(\"is_verified\", val);\n    },\n    departmentFilter: function departmentFilter(obj) {\n      this.setColumnFilter(\"department\", obj.value);\n    }\n  },\n  computed: {\n    usersData: function usersData() {\n      return this.$store.state.userManagement.users;\n    },\n    paginationPageSize: function paginationPageSize() {\n      if (this.gridApi) return this.gridApi.paginationGetPageSize();else return 10;\n    },\n    totalPages: function totalPages() {\n      if (this.gridApi) return this.gridApi.paginationGetTotalPages();else return 0;\n    },\n    currentPage: {\n      get: function get() {\n        if (this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1;else return 1;\n      },\n      set: function set(val) {\n        this.gridApi.paginationGoToPage(val - 1);\n      }\n    }\n  },\n  methods: {\n    setColumnFilter: function setColumnFilter(column, val) {\n      var filter = this.gridApi.getFilterInstance(column);\n      var modelObj = null;\n\n      if (val !== \"all\") {\n        modelObj = {\n          type: \"equals\",\n          filter: val\n        };\n      }\n\n      filter.setModel(modelObj);\n      this.gridApi.onFilterChanged();\n    },\n    resetColFilters: function resetColFilters() {\n      // Reset Grid Filter\n      this.gridApi.setFilterModel(null);\n      this.gridApi.onFilterChanged(); // Reset Filter Options\n\n      this.roleFilter = this.statusFilter = this.isVerifiedFilter = this.departmentFilter = {\n        label: 'All',\n        value: 'all'\n      };\n      this.$refs.filterCard.removeRefreshAnimation();\n    },\n    updateSearchQuery: function updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val);\n    }\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    /* =================================================================\n      NOTE:\n      Header is not aligned properly in RTL version of agGrid table.\n      However, we given fix to this issue. If you want more robust solution please contact them at gitHub\n    ================================================================= */\n\n    if (this.$vs.rtl) {\n      var header = this.$refs.agGridTable.$el.querySelector(\".ag-header-container\");\n      header.style.left = \"-\" + String(Number(header.style.transform.slice(11, -3)) + 9) + \"px\";\n    }\n  },\n  created: function created() {\n    if (!moduleUserManagement.isRegistered) {\n      this.$store.registerModule('userManagement', moduleUserManagement);\n      moduleUserManagement.isRegistered = true;\n    }\n\n    this.$store.dispatch(\"userManagement/fetchUsers\").catch(function (err) {\n      console.error(err);\n    });\n  }\n};",null]}