{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/chat/ChatNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/chat/ChatNavbar.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isPinnedLocal: {\n      get: function get() {\n        return this.isPinnedProp;\n      },\n      set: function set(val) {\n        var _this = this;\n\n        var chatData = this.$store.getters['chat/chatDataOfUser'](this.userId);\n\n        if (chatData) {\n          var payload = {\n            id: this.userId,\n            value: val\n          };\n          this.$store.dispatch('chat/toggleIsPinned', payload).then(function () {\n            _this.$emit('toggleIsChatPinned', val);\n          }).catch(function (err) {\n            console.error(err);\n          });\n        } else {\n          this.$emit('toggleIsChatPinned', val);\n        }\n      }\n    },\n    userDetails: function userDetails() {\n      return this.$store.getters['chat/contact'](this.userId);\n    },\n    getStatusColor: function getStatusColor() {\n      var _this2 = this;\n\n      return function (isActiveUser) {\n        var userStatus = _this2.getUserStatus(isActiveUser);\n\n        if (userStatus == \"online\") {\n          return \"success\";\n        } else if (userStatus == \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus == \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus: function getUserStatus(isActiveUser) {\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.userDetails.status;\n    }\n  }\n};",null]}