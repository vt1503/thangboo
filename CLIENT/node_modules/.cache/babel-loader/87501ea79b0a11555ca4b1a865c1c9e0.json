{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HisOrderBet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HisOrderBet.vue","mtime":1649894645189},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport AuthenticationService from '@/services/AuthenticationService';\nimport { isTablet, isMobile } from 'mobile-device-detect';\nimport moment from 'moment';\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {// isSidebarActive(val) {\n    //   if(!val) return\n    //   if(Object.entries(this.data).length === 0) {\n    //     //this.initValues()\n    //     this.$validator.reset()\n    //   }else {\n    //     let { token } = JSON.parse(JSON.stringify(this.data))\n    //     this.token = token\n    //     //this.initValues()\n    //   }\n    //   // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n    // }\n  },\n  data: function data() {\n    return {\n      isCloseTab: true,\n      isOpenTab: false,\n      isDate: '',\n      lastDate: '',\n      listItem: [],\n      listItemOpen: [],\n      colorxChangePass: \"#def1d1\",\n      popupActiveChangePass: false,\n      // Data Sidebar\n      SidebarHSSetting: false,\n      sidebarDataSetting: {},\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      },\n      isSideBar: isMobile || isTablet\n    };\n  },\n  //   filters: {\n  //     currencydecimal (val) {\n  //       if(val == 'BTC') return val.toFixed(6)\n  //       if(val == 'ETH') return val.toFixed(4)\n  //       return val.toFixed(2)\n  //     }\n  //   },\n  computed: {\n    isSidebarActiveLocal: {\n      get: function get() {\n        if (!!this.isCloseTab) {\n          this.getListBET();\n        }\n\n        if (!!this.isOpenTab) {\n          this.getListOrder();\n        }\n\n        return this.isSidebarActive;\n      },\n      set: function set(val) {\n        if (!val) {\n          this.$emit('closeSidebar'); // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    }\n  },\n  methods: {\n    fromatTimzoneD: function fromatTimzoneD(value) {\n      if (value) {\n        return moment(new Date(value)).format('DD/MM/YYYY');\n      }\n    },\n    fromatTimzoneH: function fromatTimzoneH(value) {\n      if (value) {\n        return moment(new Date(value)).format('HH:mm:ss');\n      }\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    formatDay: function formatDay(value) {\n      if (value) {\n        return moment(String(value)).format('DD/MM/YYYY');\n      }\n    },\n    formatHours: function formatHours(value) {\n      if (value) {\n        return moment(String(value)).format('HH:mm:ss');\n      }\n    },\n    getListBET: function getListBET() {\n      var list = JSON.parse(localStorage.getItem('stateOpen'));\n\n      if (list) {\n        this.listItemOpen = list.l.bet[0].items.reverse();\n      } else {\n        this.listItemOpen = [];\n      }\n    },\n    getListOrder: function getListOrder() {\n      var _this = this;\n\n      AuthenticationService.getListHitoryOrder().then(function (res) {\n        if (res.data.success) {\n          _this.listItem = res.data.data;\n        }\n      });\n    },\n    showHoSoSetting: function showHoSoSetting(data) {\n      //let id = data\n      this.toggleDataSidebar(true);\n    },\n    toggleDataSidebar: function toggleDataSidebar() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.SidebarHSSetting = val;\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var stateOpen = localStorage.getItem('stateOpen');\n\n    if (stateOpen) {\n      var list = JSON.parse(stateOpen);\n\n      if (list) {\n        this.listItemOpen = list.l.bet[0].items.reverse();\n      } else {\n        this.listItemOpen = [];\n        this.getListOrder();\n      }\n    }\n\n    window.addEventListener('stateOpen-localstorage-changed', function (event) {\n      if (!event.detail.storage) {\n        _this2.listItemOpen = [];\n\n        _this2.getListOrder();\n\n        return;\n      }\n\n      var list = JSON.parse(event.detail.storage);\n\n      if (list) {\n        _this2.listItemOpen = list.l.bet[0].items.reverse();\n      } else {\n        _this2.listItemOpen = [];\n\n        _this2.getListOrder();\n      }\n    });\n  }\n};",null]}