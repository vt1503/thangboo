{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/tool/EditKetQua.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/tool/EditKetQua.vue","mtime":1649894014944},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SETTINGS from \"../../../settings.json\";\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      AMOUNTBECAU_MIN: -30,\n      AMOUNTBECAU_MAX: 400,\n      PriceBOT: 0,\n      checkOnOffBOT: true,\n      checkOnOffAnGian: false,\n      checkOnOffBOTGoTien: false,\n      radioBC: '',\n      productsFake: [// {e: 'admin@gmail.com', uid: 'DS9OR0KGJS', sv: 'BTC/USDT', bet: 'buy', amount: '10' } \n      ],\n      itemsPerPage: 10,\n      isMounted: false,\n      countDown: 0,\n      typeOder: 'Mở',\n      price_buy: 0,\n      price_sell: 0,\n      price_buy_mkt: 0,\n      price_sell_mkt: 0,\n      price_total_mkt: 0,\n      price_total: 0,\n      price_play_buy: 0,\n      price_play_sell: 0\n    };\n  },\n  computed: {\n    currentPage: function currentPage() {\n      if (this.isMounted) {\n        return this.$refs.table.currentx;\n      }\n\n      return 0;\n    },\n    products: function products() {\n      return this.productsFake;\n    },\n    queriedItems: function queriedItems() {\n      return this.$refs.table ? this.$refs.table.queriedResults.length : this.productsFake.length;\n    }\n  },\n  watch: {},\n  methods: {\n    sbAmountBeCauMin: function sbAmountBeCauMin() {\n      this.sendMessage({\n        type: 'editGL',\n        data: {\n          type: 'WRITE_AMOUNT_NEGA_AMOUNT_BREAK_BRIDGE',\n          AMOUNT: this.AMOUNTBECAU_MIN\n        }\n      });\n      return this.$vs.notify({\n        text: 'Đã thay đổi thành ' + this.AMOUNTBECAU_MIN,\n        color: 'success',\n        position: 'top-center',\n        iconPack: 'feather',\n        icon: 'icon-message-square'\n      });\n    },\n    sbAmountBeCauMax: function sbAmountBeCauMax() {\n      this.sendMessage({\n        type: 'editGL',\n        data: {\n          type: 'WRITE_AMOUNT_MAX_BREAK_BRIDGE',\n          AMOUNT: this.AMOUNTBECAU_MAX\n        }\n      });\n      return this.$vs.notify({\n        text: 'Đã thay đổi thành ' + this.AMOUNTBECAU_MAX,\n        color: 'success',\n        position: 'top-center',\n        iconPack: 'feather',\n        icon: 'icon-message-square'\n      });\n    },\n    changeBOTOnOff: function changeBOTOnOff() {\n      this.sendMessage({\n        type: 'editGL',\n        data: {\n          type: 'BOT'\n        }\n      });\n\n      if (this.checkOnOffBOT) {\n        return this.$vs.notify({\n          text: 'BOT đã được TẮT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      } else {\n        return this.$vs.notify({\n          text: 'BOT đã được BẬT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      }\n    },\n    changeBetOnOff: function changeBetOnOff() {\n      this.radioBC = 'off';\n      this.checkOnOffBOTGoTien = false;\n\n      if (this.checkOnOffAnGian) {\n        this.sendMessage({\n          type: 'editGL',\n          data: {\n            type: 'BTC_OFF'\n          }\n        });\n        return this.$vs.notify({\n          text: 'Đã thay đổi thành TẮT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      } else {\n        this.sendMessage({\n          type: 'editGL',\n          data: {\n            type: 'BTC_LESS'\n          }\n        });\n        return this.$vs.notify({\n          text: 'Đã thay đổi thành BẬT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      }\n    },\n    reloadAmTien: function reloadAmTien() {\n      this.sendMessage({\n        type: 'editGL',\n        data: {\n          type: 'GO_TIEN_OFF'\n        }\n      });\n    },\n    changeMode: function changeMode(val) {\n      this.checkOnOffAnGian = false;\n\n      if (val == 'buy') {\n        this.sendMessage({\n          type: 'editGL',\n          data: {\n            type: 'BTC_BUY'\n          }\n        });\n        val = 'MUA';\n      }\n\n      if (val == 'sell') {\n        this.sendMessage({\n          type: 'editGL',\n          data: {\n            type: 'BTC_SELL'\n          }\n        });\n        val = 'BÁN';\n      }\n\n      if (val == 'off') {\n        this.sendMessage({\n          type: 'editGL',\n          data: {\n            type: 'BTC_OFF'\n          }\n        });\n        val = 'TẮT';\n      }\n\n      return this.$vs.notify({\n        text: 'Đã thay đổi thành ' + val,\n        color: 'success',\n        position: 'top-center',\n        iconPack: 'feather',\n        icon: 'icon-message-square'\n      });\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    // getAmountDecimal(type, money){\n    //   let cur = '$'\n    //   let coin = type.toUpperCase()\n    //   if(coin == 'BTC') return cur+money.toFixed(6)\n    //   if(coin == 'ETH') return cur+money.toFixed(4)\n    //   return cur+money.toFixed(2)\n    // },\n    toggleDataSidebar: function toggleDataSidebar() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.addNewDataSidebar = val;\n    },\n    sendMessage: function sendMessage(message) {\n      this.connection.send(JSON.stringify(message));\n    },\n    changeRadioGetSV: function changeRadioGetSV(dl) {\n      this.radioBC = '';\n\n      if (dl.BTC.BUY) {\n        this.radioBC = 'buy';\n      } else if (dl.BTC.SELL) {\n        this.radioBC = 'sell';\n      } else if (!dl.BTC.BUY && !dl.BTC.SELL) {\n        this.radioBC = 'off';\n      }\n\n      if (dl.LESS_WIN) {\n        this.checkOnOffAnGian = true;\n      } else {\n        this.checkOnOffAnGian = false;\n      }\n\n      if (dl.PRICE_FUND_ON_OFF) {\n        this.checkOnOffBOTGoTien = true;\n      } else {\n        this.checkOnOffBOTGoTien = false;\n      }\n\n      if (dl.BOT) {\n        this.checkOnOffBOT = true;\n      } else {\n        this.checkOnOffBOT = false;\n      }\n    },\n    changeBOTGoTienOnOff: function changeBOTGoTienOnOff() {\n      this.checkOnOffAnGian = false;\n      this.radioBC = 'off';\n      this.sendMessage({\n        type: 'editGL',\n        data: {\n          type: 'BOT_GO_TIEN'\n        }\n      });\n\n      if (this.checkOnOffBOTGoTien) {\n        return this.$vs.notify({\n          text: 'BOT gỡ tiền đã được TẮT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      } else {\n        return this.$vs.notify({\n          text: 'BOT gỡ tiền đã được BẬT',\n          color: 'success',\n          position: 'top-center',\n          iconPack: 'feather',\n          icon: 'icon-message-square'\n        });\n      }\n    },\n    sendInfoAdmin: function sendInfoAdmin() {\n      this.sendMessage({\n        type: 'accountDetail',\n        data: {\n          uid: 'ADMIN_BO',\n          email: 'ad999999@gmail.com'\n        }\n      });\n    }\n  },\n  created: function created() {\n    // if(!moduleDataList.isRegistered) {\n    //   this.$store.registerModule('dataList', moduleDataList)\n    //   moduleDataList.isRegistered = true\n    // }\n    //this.$store.registerModule('dataList', this.productsFake);\n    //this.$store.dispatch(\"dataList/fetchDataListItems\")\n    //console.log(this.productsFake);\n    //console.log(this.$store.state.dataList);\n    var _this = this;\n\n    this.connection = new WebSocket(SETTINGS.BASE_URL_SOCKET);\n\n    this.connection.onopen = function () {\n      _this.sendInfoAdmin();\n\n      console.log(\"Successfully connected to the echo websocket server...\");\n    };\n\n    this.connection.onmessage = function (event) {\n      var data = JSON.parse(event.data);\n      var dl = data.data;\n\n      if (data.type === 'allData') {\n        _this.countDown = dl.candleClose;\n        _this.typeOder = dl.type == 'order' ? 'Mở' : 'Đóng'; // reset lại số tiền = 0 khi thời gian = 0;\n\n        if (dl.candleClose == 0) {\n          _this.price_buy = 0;\n          _this.price_sell = 0;\n        }\n      }\n\n      if (data.type === 'getTruck') {\n        _this.changeRadioGetSV(dl);\n\n        _this.AMOUNTBECAU_MIN = data.min_am_go;\n        _this.AMOUNTBECAU_MAX = data.max_amount_be;\n      }\n\n      if (data.type === 'truck') {\n        _this.productsFake = dl;\n        _this.price_buy = _this.formatPrice(data.price_buy, 2);\n        _this.price_sell = _this.formatPrice(data.price_sell, 2);\n        _this.price_buy_mkt = _this.formatPrice(data.mktBUY, 2);\n        _this.price_sell_mkt = _this.formatPrice(data.mktSELL, 2);\n        _this.price_total_mkt = _this.formatPrice(data.mktBUY + data.mktSELL, 2);\n        var tt = data.price_buy + data.price_sell - (data.mktBUY + data.mktSELL);\n        _this.price_play_buy = _this.formatPrice(data.price_buy - data.mktBUY, 2);\n        _this.price_play_sell = _this.formatPrice(data.price_sell - data.mktSELL, 2);\n        _this.price_total = _this.formatPrice(tt, 2);\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.isMounted = true;\n  }\n};",null]}