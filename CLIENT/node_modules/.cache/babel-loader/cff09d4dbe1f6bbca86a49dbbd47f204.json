{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/TradeHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/TradeHistory.vue","mtime":1642160418000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AuthenticationService from '@/services/AuthenticationService'; //import VueApexCharts from 'vue-apexcharts'\n\nimport { Chart } from 'highcharts-vue';\nimport Highcharts from 'highcharts';\nimport Highcharts3D from 'highcharts/highcharts-3d';\nimport More from 'highcharts/highcharts-more';\nimport Datepicker from 'vuejs-datepicker';\nimport moment from 'moment';\nHighcharts3D(Highcharts);\nMore(Highcharts);\nvar chartDount = {\n  chart: {\n    type: 'pie',\n    backgroundColor: \"transparent\",\n    height: '250px',\n    options3d: {\n      enabled: true,\n      alpha: 45\n    }\n  },\n  title: {\n    text: ''\n  },\n  subtitle: {\n    text: ''\n  },\n  credits: {\n    enabled: false\n  },\n  plotOptions: {\n    pie: {\n      innerSize: 50,\n      depth: 20\n    },\n    series: {\n      colors: [\"#EA5455\", \"#28C76F\"],\n      dataLabels: {\n        enabled: true,\n        color: '#fff'\n      }\n    }\n  },\n  legend: {\n    itemHoverStyle: {\n      \"color\": \"#C1C1C1\"\n    },\n    itemStyle: {\n      \"color\": \"#fff\",\n      \"cursor\": \"pointer\",\n      \"fontSize\": \"12px\",\n      \"fontWeight\": \"bold\",\n      \"textOverflow\": \"ellipsis\"\n    }\n  },\n  series: [{\n    pie: {\n      borderColor: 'transparent',\n      borderWidth: 0\n    },\n    showInLegend: true,\n    name: '',\n    data: [['Total Lose', 78], ['Total Win', 34]]\n  }]\n};\nexport default {\n  components: {\n    //VueApexCharts,\n    Datepicker: Datepicker,\n    highcharts: Chart\n  },\n  data: function data() {\n    return {\n      dataHisOrder: [],\n      isLoading: false,\n      down: 0,\n      // số lần sell\n      down_rate: 0,\n      // tỉ lệ sell\n      lose: 0,\n      profits: 0,\n      // lợi nhuận rồng\n      refund: 0,\n      // hoàn tiền           \n      revenue: 0,\n      // tổng doanh thu\n      trades: 0,\n      // tổng tiền giao dịch\n      up: 0,\n      // số lần buy\n      up_rate: 0,\n      // tỉ lệ buy\n      win: 0,\n      win_rate: 0,\n      formatDate: \"MM/dd/yyyy\",\n      startDate: null,\n      endDate: null,\n      optionsDount: chartDount,\n      totalOrder: 0 // donutChart: {\n      //     series: [0, 1],\n      //     chartOptions: {\n      //         labels: [\"Tổng vòng thua\", \"Tổng vòng thắng\"],\n      //         //colors: this.themeColors,\n      //         colors: [\"#28C76F\", \"#EA5455\", \"#414141\"],\n      //         responsive: [{\n      //             breakpoint: 480,\n      //             options: {\n      //                 chart: {\n      //                     width: 200\n      //                 },\n      //                 legend: {\n      //                     position: 'bottom'\n      //                 }\n      //             }\n      //         }]\n      //     }\n      // }\n\n    };\n  },\n  methods: {\n    getInfoAccountDoanhThu: function getInfoAccountDoanhThu() {\n      var _this = this;\n\n      AuthenticationService.getThongTinLoiNhuan().then(function (res) {\n        if (res.data.success) {\n          var cD = _this.$refs.chartDount.chart.series[0];\n          var gD = res.data.data;\n          var obj = [{\n            name: 'Total Lose',\n            y: gD.lose\n          }, {\n            name: 'Total Win',\n            y: gD.win\n          }];\n          cD.update({\n            data: obj\n          }, true);\n          _this.totalOrder = gD.lose + gD.win; //this.donutChart.series = [gD.lose, gD.win]\n\n          _this.up = gD.up;\n          _this.up_rate = gD.up_rate;\n          _this.down = gD.down;\n          _this.down_rate = gD.down_rate;\n          _this.win = gD.win;\n          _this.win_rate = gD.win_rate;\n          _this.lose = gD.lose;\n          _this.trades = gD.trades;\n          _this.revenue = gD.revenue;\n          _this.profits = gD.profits;\n          gD = null;\n        }\n      });\n    },\n    getListHistoryOrder: function getListHistoryOrder() {\n      var _this2 = this;\n\n      this.isLoading = true;\n      AuthenticationService.getListHisOrder().then(function (res) {\n        if (res.data.success) {\n          //console.log(res.data.data)\n          _this2.isLoading = false;\n          _this2.dataHisOrder = res.data.data;\n        }\n      });\n    },\n    getSeachOrderDate: function getSeachOrderDate() {\n      var _this3 = this;\n\n      this.isLoading = true;\n      var start = this.formatDateHis(this.startDate);\n      var end = this.formatDateHis(this.endDate);\n      var obj = {\n        s: start,\n        e: end\n      };\n      AuthenticationService.getSeachListOrder(obj).then(function (res) {\n        if (res.data.success) {\n          //console.log(res.data.data)\n          _this3.isLoading = false;\n          _this3.dataHisOrder = res.data.data;\n        }\n      });\n    },\n    replaceAll: function replaceAll(str, find, replace) {\n      return Number(str.replace(new RegExp(find, 'g'), replace));\n    },\n    isNumber: function isNumber(value) {\n      return typeof value === 'number' && isFinite(value);\n    },\n    formatPrice: function formatPrice(value, minimum) {\n      var formatter = new Intl.NumberFormat('en-US', {\n        //style: 'currency',\n        //currency: '',\n        minimumFractionDigits: minimum\n      });\n      return formatter.format(value);\n    },\n    formatDateHis: function formatDateHis(value) {\n      if (value) {\n        return moment(String(value)).format('YYYY-MM-DD');\n      }\n    },\n    formatDateOrder: function formatDateOrder(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY HH:mm:ss');\n      }\n    }\n  },\n  created: function created() {\n    var currentDate = new Date();\n    var day = currentDate.getDate();\n    var month = currentDate.getMonth();\n    var year = currentDate.getFullYear();\n    var last_week = new Date(year, currentDate.getMonth(), day - 7);\n    this.startDate = moment(String(last_week)).format('MM/DD/YYYY');\n    var end_date = new Date(year, month, day);\n    this.endDate = moment(String(end_date)).format('MM/DD/YYYY');\n    this.getInfoAccountDoanhThu();\n    this.getListHistoryOrder();\n  }\n};",null]}