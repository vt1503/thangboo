{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/email/EmailView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/email/EmailView.vue","mtime":1573138056000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport EmailMailCard from \"./EmailMailCard.vue\";\nexport default {\n  props: {\n    emailTags: {\n      type: Array,\n      required: true\n    },\n    openMailId: {\n      required: true,\n      validator: function validator(prop) {\n        return typeof prop === 'number' || prop === null;\n      }\n    },\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    mailFilter: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      showThread: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.50\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      var _this = this;\n\n      if (!value) {\n        this.$emit('closeSidebar');\n        setTimeout(function () {\n          _this.showThread = false;\n        }, 500);\n      }\n    }\n  },\n  computed: {\n    currentMail: function currentMail() {\n      return this.$store.getters['email/getMail'](this.openMailId);\n    },\n    labelColor: function labelColor() {\n      var _this2 = this;\n\n      return function (label) {\n        var tags = _this2.$store.state.email.mailTags;\n        return tags.find(function (tag) {\n          return tag.value == label;\n        }).color;\n      };\n    },\n    currentMailLabels: {\n      get: function get() {\n        return this.currentMail.labels;\n      },\n      set: function set(value) {\n        if (Array.isArray(value)) {\n          var payload = {\n            mailId: this.openMailId,\n            labels: value\n          };\n          this.$store.dispatch('email/setLabels', payload);\n        }\n      }\n    }\n  },\n  methods: {\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.openMailId,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    },\n    moveTo: function moveTo(to) {\n      this.$emit('closeSidebar');\n      this.$emit('moveTo', to);\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    EmailMailCard: EmailMailCard\n  },\n  updated: function updated() {\n    if (!this.currentMail) return;\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', {\n      emailIds: [this.openMailId],\n      unread: false\n    });\n  }\n};",null]}