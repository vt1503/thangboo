{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/components/extra-components/autocomplete/Autocomplete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/components/extra-components/autocomplete/Autocomplete.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueSimpleSuggest from 'vue-simple-suggest';\nimport 'vue-simple-suggest/dist/styles.css';\nimport Prism from 'vue-prism-component';\nexport default {\n  name: 'Autocomplete',\n  data: function data() {\n    return {\n      chosen: '',\n      selected: null,\n      model: null,\n      mode: 'input',\n      loading: false,\n      log: []\n    };\n  },\n  methods: {\n    simpleSuggestionList: function simpleSuggestionList() {\n      return ['Vue.js', 'React.js', 'Angular.js'];\n    },\n    onSuggestSelect: function onSuggestSelect(suggest) {\n      this.selected = suggest;\n    },\n    boldenSuggestion: function boldenSuggestion(scope) {\n      if (!scope) return scope;\n      var suggestion = scope.suggestion,\n          query = scope.query;\n      var result = this.$refs.suggestComponent.displayProperty(suggestion);\n      if (!query) return result;\n      var texts = query.split(/[\\s-_/\\\\|.]/gm).filter(function (t) {\n        return !!t;\n      }) || [''];\n      return result.replace(new RegExp('(.*?)(' + texts.join('|') + ')(.*?)', 'gi'), '$1<b>$2</b>$3');\n    },\n    getList: function getList(inputValue) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var url = \"https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&namespace=*&search=\".concat(inputValue, \"&limit=10&namespace=0&format=json\");\n        fetch(url).then(function (response) {\n          if (!response.ok) {\n            reject();\n          }\n\n          response.json().then(function (json) {\n            json.shift();\n            var result = [];\n            var fields = ['text', 'description', 'link'];\n            json.forEach(function (part, i) {\n              part.forEach(function (el, j) {\n                if (!result[j]) {\n                  result.push({\n                    id: j + 1\n                  });\n                }\n\n                result[j][fields[i]] = el;\n              });\n            });\n            resolve(result);\n          }).catch(function (e) {\n            reject(e);\n          });\n        }).catch(function (error) {\n          _this.loading = false;\n          reject(error);\n        });\n      });\n    }\n  },\n  components: {\n    VueSimpleSuggest: VueSimpleSuggest,\n    Prism: Prism\n  }\n};",null]}