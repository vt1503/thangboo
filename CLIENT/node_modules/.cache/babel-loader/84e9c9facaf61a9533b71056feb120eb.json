{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/todo/TodoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/todo/TodoEdit.vue","mtime":1570196296000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    displayPrompt: {\n      type: Boolean,\n      required: true\n    },\n    taskId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      taskLocal: Object.assign({}, this.$store.getters[\"todo/getTask\"](this.taskId))\n    };\n  },\n  computed: {\n    activePrompt: {\n      get: function get() {\n        return this.displayPrompt;\n      },\n      set: function set(value) {\n        this.$emit('hideDisplayPrompt', value);\n      }\n    },\n    taskTags: function taskTags() {\n      return this.$store.state.todo.taskTags;\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.taskLocal.title != '';\n    }\n  },\n  methods: {\n    removeTodo: function removeTodo() {\n      var _this = this;\n\n      this.$store.dispatch(\"todo/updateTask\", Object.assign({}, this.taskLocal, {\n        isTrashed: true\n      })).then(function () {\n        // Fetch Tasks\n        _this.$store.dispatch(\"todo/fetchTasks\", {\n          filter: _this.$route.params.filter\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    init: function init() {\n      this.taskLocal = Object.assign({}, this.$store.getters[\"todo/getTask\"](this.taskId));\n    },\n    submitTodo: function submitTodo() {\n      this.$store.dispatch(\"todo/updateTask\", this.taskLocal);\n    }\n  }\n};",null]}