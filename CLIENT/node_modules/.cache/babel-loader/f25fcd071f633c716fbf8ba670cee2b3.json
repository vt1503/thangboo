{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js!/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js!/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HoSoUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HoSoUser.vue","mtime":1650097913910},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport HoSoSetting from '@/pages/trade/slidebar/HoSoSetting.vue';\nimport AuthenticationService from '@/services/AuthenticationService';\nimport getData from '@/pages/trade/navbar/components/data.json';\nimport GoogleAuth from '@/pages/trade/slidebar/2FAGoogle';\nimport SETTINGS from \"../../../../settings.json\";\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    HoSoSetting: HoSoSetting,\n    GoogleAuth: GoogleAuth\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(val) {\n      if (!val) return;\n\n      if (Object.entries(this.data).length === 0) {\n        //this.initValues()\n        this.$validator.reset();\n      } else {\n        var _JSON$parse = JSON.parse(JSON.stringify(this.data)),\n            token = _JSON$parse.token;\n\n        this.token = token; //this.initValues()\n      } // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n\n    }\n  },\n  data: function data() {\n    return {\n      getDataJson: getData,\n      dm: SETTINGS.BASE_URL,\n      disableChangePass: false,\n      passOld: '',\n      passNew: '',\n      passRenew: '',\n      avatar: 'df.jpg',\n      url_avatar: '',\n      nickName: '',\n      email: '',\n      frist_n: '',\n      last_n: '',\n      swi2Fa: false,\n      num_secury: 0,\n      colorxChangePass: \"#def1d1\",\n      popupActiveChangePass: false,\n      popupActive2FA: false,\n      // Data Sidebar\n      SidebarHSSetting: false,\n      sidebarDataSetting: {},\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  //   filters: {\n  //     currencydecimal (val) {\n  //       if(val == 'BTC') return val.toFixed(6)\n  //       if(val == 'ETH') return val.toFixed(4)\n  //       return val.toFixed(2)\n  //     }\n  //   },\n  computed: {\n    isSidebarActiveLocal: {\n      get: function get() {\n        return this.isSidebarActive;\n      },\n      set: function set(val) {\n        if (!val) {\n          this.$emit('closeSidebar'); // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    closeGG2FA: function closeGG2FA() {\n      if (!getData.c2fa) {\n        this.swi2Fa = false;\n      } else {\n        this.swi2Fa = true;\n      }\n    },\n    showHoSoSetting: function showHoSoSetting() {\n      this.toggleDataSidebar(true);\n    },\n    toggleDataSidebar: function toggleDataSidebar() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.SidebarHSSetting = val;\n    },\n    logOutUser: function logOutUser() {\n      localStorage.removeItem('tokenUser');\n      localStorage.removeItem('INFO');\n      getData.Notify = 0;\n      localStorage.removeItem('stateOpen');\n      window.location.href = window.location.origin + '/login';\n    },\n    ChangeNewPass: function ChangeNewPass() {\n      var _this = this;\n\n      this.disableChangePass = true;\n\n      if (this.passOld == '' || this.passNew == '' || this.passRenew == '') {\n        return this.$vs.notify({\n          text: 'Mật khẩu không được rỗng.',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning',\n          position: 'top-right'\n        });\n      }\n\n      if (this.passNew != this.passRenew) {\n        return this.$vs.notify({\n          text: 'Mật khẩu mới của bạn không khớp.',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning',\n          position: 'top-right'\n        });\n      }\n\n      var obj = {\n        email: this.email,\n        passOld: this.passOld,\n        password: this.passNew,\n        code_secure: this.num_secury\n      };\n      AuthenticationService.changePassword2(obj).then(function (res) {\n        _this.disableChangePass = false;\n\n        if (res.data.success == 1) {\n          return _this.$vs.notify({\n            text: 'Mật khẩu đã được đổi thành công.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            position: 'top-right',\n            color: 'success'\n          });\n        } else if (res.data.success == 0) {\n          return _this.$vs.notify({\n            text: 'Mật khẩu cũ không đúng.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            position: 'top-right',\n            color: 'danger'\n          });\n        } else if (res.data.success == 3) {\n          return _this.$vs.notify({\n            text: 'Mật khẩu đổi thất bại.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            position: 'top-right',\n            color: 'danger'\n          });\n        }\n      });\n    },\n    on2FA: function on2FA() {\n      this.swi2Fa ? this.swi2Fa = false : this.swi2Fa = true; // bật 2Fa\n\n      this.popupActive2FA = true;\n    },\n    update_avatar: function update_avatar(file) {\n      var _this2 = this;\n\n      //evt.preventDefault()\n      this.urlPassFront = URL.createObjectURL(file[0]);\n      var formData = new FormData();\n      formData.append(\"image\", file[0]);\n      formData.append(\"nick\", getData.displayName);\n      AuthenticationService.uploadAvatar(formData).then(function (res) {\n        if (res.data.success) {\n          return _this2.$vs.notify({\n            text: 'Ảnh đại diện thay đổi thành công.',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            position: 'top-right',\n            color: 'success'\n          });\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.nickName = getData.displayName;\n    this.avatar = getData.profile_image;\n    this.email = getData.email;\n    this.frist_n = getData.first_name;\n    this.last_n = getData.last_name;\n    this.swi2Fa = getData.c2fa;\n    this.num_secury = getData.num_secu;\n  }\n};",null]}