{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/user/user-list/UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/user/user-list/UserList.vue","mtime":1573712498000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { AgGridVue } from \"ag-grid-vue\"\nimport '@/assets/scss/vuexy/extraComponents/agGridStyleOverride.scss'\nimport vSelect from 'vue-select'\n\n// Store Module\nimport moduleUserManagement from '@/store/user-management/moduleUserManagement.js'\n\n// Cell Renderer\nimport CellRendererLink from \"./cell-renderer/CellRendererLink.vue\"\nimport CellRendererStatus from \"./cell-renderer/CellRendererStatus.vue\"\nimport CellRendererVerified from \"./cell-renderer/CellRendererVerified.vue\"\nimport CellRendererActions from \"./cell-renderer/CellRendererActions.vue\"\n\n\nexport default {\n  components: {\n    AgGridVue,\n    vSelect,\n\n    // Cell Renderer\n    CellRendererLink,\n    CellRendererStatus,\n    CellRendererVerified,\n    CellRendererActions,\n  },\n  data() {\n    return {\n\n      // Filter Options\n      roleFilter: { label: 'All', value: 'all' },\n      roleOptions: [\n        { label: 'All', value: 'all' },\n        { label: 'Admin', value: 'admin' },\n        { label: 'User', value: 'user' },\n        { label: 'Staff', value: 'staff' },\n      ],\n\n      statusFilter: { label: 'All', value: 'all' },\n      statusOptions: [\n        { label: 'All', value: 'all' },\n        { label: 'Active', value: 'active' },\n        { label: 'Deactivated', value: 'deactivated' },\n        { label: 'Blocked', value: 'blocked' },\n      ],\n\n      isVerifiedFilter: { label: 'All', value: 'all' },\n      isVerifiedOptions: [\n        { label: 'All', value: 'all' },\n        { label: 'Yes', value: 'yes' },\n        { label: 'No', value: 'no' },\n      ],\n\n      departmentFilter: { label: 'All', value: 'all' },\n      departmentOptions: [\n        { label: 'All', value: 'all' },\n        { label: 'Sales', value: 'sales' },\n        { label: 'Development', value: 'development' },\n        { label: 'Management', value: 'management' },\n      ],\n\n      searchQuery: \"\",\n\n      // AgGrid\n      gridApi: null,\n      gridOptions: {},\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        suppressMenu: true\n      },\n      columnDefs: [\n        {\n          headerName: 'ID',\n          field: 'id',\n          width: 125,\n          filter: true,\n          checkboxSelection: true,\n          headerCheckboxSelectionFilteredOnly: true,\n          headerCheckboxSelection: true,\n        },\n        {\n          headerName: 'Username',\n          field: 'username',\n          filter: true,\n          width: 210,\n          cellRendererFramework: 'CellRendererLink'\n        },\n        {\n          headerName: 'Email',\n          field: 'email',\n          filter: true,\n          width: 225,\n        },\n        {\n          headerName: 'Name',\n          field: 'name',\n          filter: true,\n          width: 200,\n        },\n        {\n          headerName: 'Country',\n          field: 'country',\n          filter: true,\n          width: 150,\n        },\n        {\n          headerName: 'Role',\n          field: 'role',\n          filter: true,\n          width: 150,\n        },\n        {\n          headerName: 'Status',\n          field: 'status',\n          filter: true,\n          width: 150,\n          cellRendererFramework: 'CellRendererStatus'\n        },\n        {\n          headerName: 'Verified',\n          field: 'is_verified',\n          filter: true,\n          width: 125,\n          cellRendererFramework: 'CellRendererVerified',\n          cellClass: \"text-center\"\n        },\n        {\n          headerName: 'Department',\n          field: 'department',\n          filter: true,\n          width: 150,\n        },\n        {\n          headerName: 'Actions',\n          field: 'transactions',\n          width: 150,\n          cellRendererFramework: 'CellRendererActions',\n        },\n      ],\n\n      // Cell Renderer Components\n      components: {\n        CellRendererLink,\n        CellRendererStatus,\n        CellRendererVerified,\n        CellRendererActions,\n      }\n    }\n  },\n  watch: {\n    roleFilter(obj) {\n      this.setColumnFilter(\"role\", obj.value)\n    },\n    statusFilter(obj) {\n      this.setColumnFilter(\"status\", obj.value)\n    },\n    isVerifiedFilter(obj) {\n      let val = obj.value === \"all\" ? \"all\" : obj.value == \"yes\" ? \"true\" : \"false\"\n      this.setColumnFilter(\"is_verified\", val)\n    },\n    departmentFilter(obj) {\n      this.setColumnFilter(\"department\", obj.value)\n    },\n  },\n  computed: {\n    usersData() {\n      return this.$store.state.userManagement.users\n    },\n    paginationPageSize() {\n      if(this.gridApi) return this.gridApi.paginationGetPageSize()\n      else return 10\n    },\n    totalPages() {\n      if(this.gridApi) return this.gridApi.paginationGetTotalPages()\n      else return 0\n    },\n    currentPage: {\n      get() {\n        if(this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1\n        else return 1\n      },\n      set(val) {\n        this.gridApi.paginationGoToPage(val - 1)\n      }\n    }\n  },\n  methods: {\n    setColumnFilter(column, val) {\n      const filter = this.gridApi.getFilterInstance(column)\n      let modelObj = null\n\n      if(val !== \"all\") {\n        modelObj = { type: \"equals\", filter: val }\n      }\n\n      filter.setModel(modelObj)\n      this.gridApi.onFilterChanged()\n    },\n    resetColFilters() {\n      // Reset Grid Filter\n      this.gridApi.setFilterModel(null)\n      this.gridApi.onFilterChanged()\n\n      // Reset Filter Options\n      this.roleFilter = this.statusFilter = this.isVerifiedFilter = this.departmentFilter = { label: 'All', value: 'all' }\n\n      this.$refs.filterCard.removeRefreshAnimation()\n    },\n    updateSearchQuery(val) {\n      this.gridApi.setQuickFilter(val)\n    }\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api\n\n    /* =================================================================\n      NOTE:\n      Header is not aligned properly in RTL version of agGrid table.\n      However, we given fix to this issue. If you want more robust solution please contact them at gitHub\n    ================================================================= */\n    if(this.$vs.rtl) {\n      const header = this.$refs.agGridTable.$el.querySelector(\".ag-header-container\")\n      header.style.left = \"-\" + String(Number(header.style.transform.slice(11,-3)) + 9) + \"px\"\n    }\n  },\n  created() {\n    if(!moduleUserManagement.isRegistered) {\n      this.$store.registerModule('userManagement', moduleUserManagement)\n      moduleUserManagement.isRegistered = true\n    }\n    this.$store.dispatch(\"userManagement/fetchUsers\").catch(err => { console.error(err) })\n  }\n}\n\n",null]}