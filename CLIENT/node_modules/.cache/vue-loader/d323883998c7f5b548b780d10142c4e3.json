{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/components/horizontal-nav-menu/HorizontalNavMenuHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/components/horizontal-nav-menu/HorizontalNavMenuHeader.vue","mtime":1571912370000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport HNavMenuGroup from \"./HorizontalNavMenuGroup.vue\"\nimport HNavMenuItem from \"./HorizontalNavMenuItem.vue\"\n\nexport default {\n  props: {\n    header: {\n      type: Object,\n      requried: true\n    },\n    openOnHover: {\n      type: Boolean,\n      default: true\n    }\n  },\n  components: {\n    HNavMenuGroup,\n    HNavMenuItem\n  },\n  data() {\n    return {\n      showChildren: false,\n      isHovered: false,\n      dropRight: false,\n    }\n  },\n  computed: {\n    isHeaderActive() {\n      const path        = this.$route.fullPath\n      let active        = false\n      const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\n\n      this.header.items.forEach((item) => {\n\n        // If item is group\n        if (item.submenu) {\n          if(this.checkGrpChildrenActive(item)) { active = true }\n        } else if (item.url) {\n          if (path == item.url || routeParent == item.slug) { active = true }\n        }\n      })\n\n      return active\n    }\n  },\n  watch: {\n    showChildren() {\n      this.$nextTick(() => {\n        if(this.showChildren) {\n          let dd = this.$refs.headerDropdown\n          if(dd.getBoundingClientRect().left + dd.offsetWidth - (window.innerWidth - 16) >= 0) {\n            this.dropRight = true\n          }\n        }\n      })\n    }\n  },\n  methods: {\n    checkGrpChildrenActive(group) {\n\n      const path        = this.$route.fullPath\n      let active        = false\n      const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\n\n      if (group.submenu) {\n        group.submenu.forEach((item) => {\n          if ((path == item.url || routeParent == item.slug) && item.slug) { active = true }\n          else if (item.submenu) { this.checkGrpChildrenActive(item) ? active = true : null }\n        })\n      }\n\n      return active\n    },\n    hovered(val=true) {\n      this.isHovered = val\n      if(this.openOnHover) {\n        val ? this.showChildren = true : this.showChildren = false\n      }\n    },\n  }\n}\n",null]}