{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/Profile.vue","mtime":1650074336063},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { isMobile } from 'mobile-device-detect'\r\nimport HoSoUserInfo from '@/pages/trade/slidebar/HoSoUser'\r\nimport HisOrderBet from '@/pages/trade/slidebar/HisOrderBet.vue'\r\nimport getData from './data.json'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport I18n  from \"./i18n\"\r\nimport NotificationDropDown from \"@/pages/user/NotifiDropDown.vue\"\r\n//import { gsap } from \"gsap\"\r\n\r\nexport default {\r\n  components: {\r\n    I18n,\r\n    HoSoUserInfo,\r\n    NotificationDropDown,\r\n    HisOrderBet\r\n  },\r\n  data() {\r\n    return {\r\n      popupTransferActive: false,\r\n      textWalletHtml: '<span class=\"mr-1 color-blue uppercase green\">USDT</span> <span>Wallet</span>',\r\n      textAccLive: 'Tài khoản Thực',\r\n      amountAcc: 0,\r\n      amountAccLive: 0,\r\n      enterAmount: '',\r\n\r\n\r\n      isMenuMobie: false,\r\n      switchAmThanh: true,\r\n      popupActiveCaiDat: false,\r\n      popupActiveNapNhanh: false,\r\n      numberTween: 1000,\r\n      counter: false,\r\n      isAcc: 0,\r\n      blObj: getData,\r\n      colorNT: '#0094ff',\r\n      colorRT: '#fff',\r\n\r\n      // Data Sidebar\r\n      addNewDataSidebar: false,\r\n      sidebarData: {},\r\n      interval: false,\r\n      showPopWalSL: false,\r\n      walletIsSelect: 'usdt',\r\n      balanceUSDT: 0,\r\n      enterMoneyDeposit: '',\r\n      ttNhan: 0.00,\r\n      isMobile,\r\n      countEnterOrder: 0,\r\n    }\r\n  },\r\n  props: {\r\n    number: {\r\n      type: Number,\r\n      default: 0\r\n    }\r\n  },\r\n  computed: {\r\n    activeUserInfo() {\r\n      return getData.displayName\r\n    },\r\n  },\r\n  watch: {\r\n    number() {\r\n      \r\n      clearInterval(this.counter);\r\n      if (this.number === this.numberTween) {\r\n        return;\r\n      }\r\n      this.counter = setInterval(function () {\r\n        if (Math.floor(this.numberTween) !== Math.floor(this.number)) {\r\n          var change = (this.number - this.numberTween) / 5;\r\n          change = change >= 0 ? Math.ceil(change) : Math.floor(change);\r\n          this.numberTween = this.numberTween + change;\r\n        } else {\r\n          this.numberTween = this.number;\r\n          clearInterval(this.counter);\r\n        }\r\n      }.bind(this), 20);\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    clickShowPopTrans(){\r\n      this.popupTransferActive=true;\r\n\r\n      this.amountAcc = getData.balance;\r\n      this.amountAccLive = getData.blLive;\r\n\r\n    },\r\n\r\n    clickTransMoney(){\r\n        let amount = this.enterAmount.toString()\r\n        amount = this.replaceAll(amount, ',', '')\r\n        amount = this.replaceAll(amount.toString(), '-', '')\r\n        \r\n        if(!this.isNumber(amount) || amount <= 0){\r\n            return this.$vs.notify({\r\n                text:'Giá trị không hợp lệ',\r\n                color:'danger',\r\n                position:'top-right',\r\n                iconPack: 'feather',\r\n                icon:'icon-x-circle'})\r\n        }\r\n\r\n\r\n        if(this.typeChange){\r\n            // nếu true thì live to wallet\r\n\r\n             // gửi tiền từ live tới tài khoản chính\r\n            let obj = {\r\n                email: getData.email,\r\n                m: amount\r\n            }\r\n\r\n            AuthenticationService.sendMoneyLiveToUsdt(obj)\r\n            .then((res) => {\r\n                if(res.data.success){\r\n                    \r\n                    getData.blLive -= amount\r\n                    getData.balance += amount\r\n\r\n                    this.amountAcc = getData.blLive\r\n                    this.amountAccLive = getData.balance\r\n\r\n                     // reload lại lịch sử\r\n                    this.getListHisTradeWGD()\r\n\r\n                    return this.$vs.notify({\r\n                        text:'Chuyển tiền thành công',\r\n                        color:'success',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'\r\n                        })\r\n                }else{\r\n                     return this.$vs.notify({\r\n                        text:'Số dư của bạn không đủ',\r\n                        color:'danger',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-x-circle'\r\n                    })\r\n                }\r\n            })\r\n\r\n        }else{\r\n            // wallet to live\r\n\r\n            // gửi tiền từ tài khoản chính tới live\r\n            let obj = {\r\n                email: getData.email,\r\n                m: amount\r\n            }\r\n\r\n            AuthenticationService.sendMoneyUsdtToLive(obj)\r\n            .then((res) => {\r\n                if(res.data.success){\r\n\r\n                    getData.blLive = getData.blLive + amount\r\n                    getData.balance = getData.balance - amount\r\n\r\n                    this.amountAcc = getData.balance\r\n                    this.amountAccLive = getData.blLive\r\n\r\n                    // reload lại lịch sử\r\n                    this.getListHisTradeWGD()\r\n\r\n                    return this.$vs.notify({\r\n                        text:'Chuyển tiền thành công',\r\n                        color:'success',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'\r\n                        })\r\n                }else{\r\n                     return this.$vs.notify({\r\n                        text:'Số dư của bạn không đủ',\r\n                        color:'danger',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-x-circle'\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    changeTransMoney(){\r\n        \r\n        \r\n        if(this.typeChange){\r\n            // Live to Wallet  \r\n            this.typeChange = false\r\n\r\n            let b = this.textWalletHtml\r\n            let a = this.textAccLive\r\n            let d = getData.balance\r\n            let c = getData.blLive\r\n\r\n            this.textAccLive = b\r\n            this.textWalletHtml = a\r\n            this.amountAcc = d\r\n            this.amountAccLive = c\r\n\r\n        }else{ \r\n            // Live to Wallet\r\n            this.typeChange = true\r\n\r\n            let a = this.textWalletHtml\r\n            let b = this.textAccLive\r\n            let c = getData.balance\r\n            let d = getData.blLive\r\n\r\n\r\n            this.textAccLive = a\r\n            this.textWalletHtml = b\r\n            this.amountAcc = d\r\n            this.amountAccLive = c\r\n\r\n        }\r\n\r\n    },\r\n\r\n    enterAllMoney(){\r\n        if(this.typeChange){\r\n            // nếu true thì live to wallet\r\n\r\n            this.enterAmount = getData.blLive\r\n\r\n        }else{\r\n            // wallet to live\r\n\r\n            this.enterAmount = getData.balance\r\n\r\n        }\r\n    },\r\n    \r\n    // numberTo(start, end, duration, currency = false){\r\n\r\n    //   console.log()\r\n    //   this.blanceStart = end\r\n\r\n    //   clearInterval(mm);\r\n    //   var range = end - start;\r\n    //   var minTimer = 50;\r\n    //   var stepTime = Math.abs(Math.floor(duration / range));\r\n    //   stepTime = Math.max(stepTime, minTimer);\r\n    //   var startTime = new Date().getTime();\r\n    //   var endTime = startTime + duration;\r\n\r\n    //   var mm = setInterval(() => {\r\n    //       var now = new Date().getTime();\r\n    //       var remaining = Math.max((endTime - now) / duration, 0);\r\n    //       var value = (end - (remaining * range))>>0;\r\n    //       var blance = currency ? this.formatPrice(value, 2) : value;\r\n    //       this.isAcc ? getData.blLive = blance : getData.blDemo = blance\r\n    //       if (value == end) {\r\n    //         clearInterval(mm);\r\n    //       }\r\n    //   }, stepTime);\r\n    // },\r\n\r\n    OnOffSound(){\r\n        if(this.switchAmThanh){\r\n          localStorage.setItem('SOUND', true);\r\n        }else{\r\n          localStorage.setItem('SOUND', false);\r\n        }\r\n    },\r\n\r\n    ttThucNhan(e){\r\n\r\n        let amount = e.currentTarget.value\r\n        amount = this.replaceAll(amount, ',', '')\r\n        amount = this.replaceAll(amount.toString(), '-', '')\r\n\r\n        if(!this.isNumber(amount) || amount <= 0){\r\n            return this.$vs.notify({\r\n                text:'Giá trị không hợp lệ',\r\n                color:'danger',\r\n                position:'top-right',\r\n                iconPack: 'feather',\r\n                icon:'icon-x-circle'})\r\n        }\r\n      \r\n\r\n\r\n        this.ttNhan = this.formatPrice(amount, 2)\r\n    },\r\n\r\n\r\n    submitDeposit(){\r\n\r\n         \r\n          let amount = this.ttNhan\r\n\r\n          amount = this.replaceAll(amount.toString(), ',', '')\r\n          amount = this.replaceAll(amount.toString(), '-', '')\r\n\r\n          if(amount <= 0){\r\n              return this.$vs.notify({\r\n                  text:'Giá trị không hợp lệ',\r\n                  color:'danger',\r\n                  position:'top-right',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-x-circle'})\r\n          }\r\n\r\n          if(amount < 11){\r\n            return this.$vs.notify({\r\n                  text:'Số tiền tối thiểu không đủ',\r\n                  color:'danger',\r\n                  position:'top-right',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-x-circle'})\r\n          }\r\n\r\n          \r\n          let obj = {\r\n              money: amount,\r\n              id: getData.uidLive\r\n          }\r\n\r\n          AuthenticationService.depositWallet(obj)\r\n          .then((res) => {\r\n              if(res.data.success == 1){\r\n                  getData.balance -= amount;\r\n                  getData.blLive += amount;\r\n\r\n                  this.$vs.notify({\r\n                      text: 'Nạp tiền thành công.',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check',\r\n                      color: 'success'\r\n                  })\r\n              }else if(res.data.success == 3){\r\n                this.$vs.notify({\r\n                      text: 'Số dư bạn không đủ.',\r\n                      color:'danger',\r\n                      position:'top-right',\r\n                      iconPack: 'feather',\r\n                      icon:'icon-x-circle'\r\n                  })\r\n              }else{\r\n                this.$vs.notify({\r\n                  text:'Giá trị không hợp lệ',\r\n                  color:'danger',\r\n                  position:'top-right',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-x-circle'})\r\n              }\r\n          })\r\n\r\n    },  \r\n\r\n    allEnterWallet(){\r\n      this.ttNhan = this.formatPrice(getData.balance, 2)\r\n      this.enterMoneyDeposit = this.formatPrice(getData.balance, 2)\r\n\r\n    },\r\n    \r\n\r\n    selectWallet(val){\r\n      this.walletIsSelect = val\r\n      this.showPopWalSL = false\r\n    },\r\n\r\n    reloadBalanceDemo(){\r\n          $('.dropdown-account').hide()  \r\n          AuthenticationService.reloadMoneyDemo()\r\n          .then((res) => {\r\n              if(res.data.success){\r\n\r\n                  getData.blDemo = 1000;\r\n\r\n                  this.$vs.notify({\r\n                      text: 'Tài khoản Demo đã nạp.',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check',\r\n                      color: 'success'\r\n                  });\r\n              }\r\n          })\r\n    },\r\n\r\n    getBalanceWalletClick(){\r\n      AuthenticationService.getBalanceWallet()\r\n          .then((res) => {\r\n              if(res.data.success){\r\n                  let mU = res.data.data.usdt\r\n                  this.balanceUSDT = this.formatPrice(mU, 2)\r\n              }\r\n          })\r\n    },\r\n\r\n    changeAccount(val){\r\n\r\n      if(val){\r\n        localStorage.setItem('BO_BALANCE_TYPE', 'LIVE')\r\n        this.isAcc = getData.isAccount = 1;\r\n      }else{\r\n        localStorage.setItem('BO_BALANCE_TYPE', 'DEMO')\r\n        this.isAcc = getData.isAccount = 0;\r\n      }\r\n\r\n    },\r\n\r\n    replaceAll(str, find, replace) {\r\n        return Number(str.replace(new RegExp(find, 'g'), replace));\r\n    },\r\n\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    isNumber(value){\r\n        return typeof value === 'number' && isFinite(value);\r\n    },\r\n\r\n    viewHoSo(){ \r\n      this.toggleDataSidebar(true)\r\n    },\r\n\r\n    viewHelp() {\r\n      this.$router.push('/ho-tro').catch(() => {})\r\n    },\r\n\r\n    toggleDataSidebarHisOrder(){\r\n      this.$store.commit('TOGGLE_IS_OPEN_SIDEBAR');\r\n    },\r\n\r\n    toggleDataSidebar(val=false) {\r\n      this.addNewDataSidebar = val\r\n    },\r\n\r\n    logout() {\r\n\r\n        // // if user is logged in via auth0\r\n        // if (this.$auth.profile) this.$auth.logOut();\r\n\r\n        // // if user is logged in via firebase\r\n        // const firebaseCurrentUser = firebase.auth().currentUser\r\n\r\n        // if (firebaseCurrentUser) {\r\n        //     firebase.auth().signOut().then(() => {\r\n        //         this.$router.push('/pages/login').catch(() => {})\r\n        //     })\r\n        // }\r\n        // // If JWT login\r\n        // if(localStorage.getItem(\"accessToken\")) {\r\n        //   localStorage.removeItem(\"accessToken\")\r\n        //   this.$router.push('/pages/login').catch(() => {})\r\n        // }\r\n\r\n        // // Change role on logout. Same value as initialRole of acj.js\r\n        // this.$acl.change('admin')\r\n        // localStorage.removeItem('userInfo')\r\n        localStorage.removeItem('tokenUser')\r\n\r\n        // This is just for demo Purpose. If user clicks on logout -> redirect\r\n        this.$router.push('/login').catch(() => {})\r\n    },\r\n  },\r\n  created() {\r\n    let checkSound = localStorage.hasOwnProperty('SOUND');\r\n    if(!checkSound){\r\n        localStorage.setItem('SOUND', true);\r\n    }else{\r\n        let getS = localStorage.getItem('SOUND');\r\n        if(getS === 'false'){\r\n            this.switchAmThanh = false;\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    this.blanceStart = this.isAcc ? getData.blLive : getData.blDemo\r\n\r\n    let acc = localStorage.getItem('BO_BALANCE_TYPE')\r\n    if(acc == 'LIVE'){\r\n      this.isAcc = getData.isAccount = 1\r\n    }else{\r\n      this.isAcc = getData.isAccount = 0\r\n    }\r\n    \r\n  },\r\n  mounted() {\r\n    let stateOpen = localStorage.getItem('stateOpen');\r\n    if (stateOpen) {\r\n      const list = JSON.parse(stateOpen)\r\n      if(list){\r\n        this.countEnterOrder = list.l.bet[0].items.length;\r\n      } else {\r\n        this.countEnterOrder = 0;\r\n      }\r\n    }\r\n\r\n    window.addEventListener('stateOpen-localstorage-changed', (event) => {\r\n      if (!event.detail.storage) {\r\n        this.countEnterOrder = 0;\r\n        return;\r\n      }\r\n      const list = JSON.parse(event.detail.storage)\r\n      if(list){\r\n        this.countEnterOrder = list.l.bet[0].items.length;\r\n      } else {\r\n        this.countEnterOrder = 0;\r\n      }\r\n    });\r\n  },\r\n}\r\n",null]}