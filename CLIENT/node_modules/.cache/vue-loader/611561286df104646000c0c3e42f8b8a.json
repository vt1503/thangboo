{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/main/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/main/Main.vue","mtime":1633660610000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BackToTop           from 'vue-backtotop'\nimport HNavMenu            from \"@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue\"\nimport navMenuItems        from \"@/layouts/components/vertical-nav-menu/navMenuItems.js\"\nimport TheCustomizer       from \"@/layouts/components/customizer/TheCustomizer.vue\"\nimport TheNavbarHorizontal from '@/layouts/components/navbar/TheNavbarHorizontal.vue'\nimport TheNavbarVertical   from '@/layouts/components/navbar/TheNavbarVertical.vue'\nimport TheFooter           from '@/layouts/components/TheFooter.vue'\nimport themeConfig         from '@/../themeConfig.js'\nimport VNavMenu            from '@/layouts/components/vertical-nav-menu/VerticalNavMenu.vue'\n\nconst VxTour = () => import('@/components/VxTour.vue')\n\nexport default {\n  components: {\n    BackToTop,\n    HNavMenu,\n    TheCustomizer,\n    TheFooter,\n    TheNavbarHorizontal,\n    TheNavbarVertical,\n    VNavMenu,\n    VxTour\n  },\n  data() {\n    return {\n      disableCustomizer : themeConfig.disableCustomizer,\n      disableThemeTour  : themeConfig.disableThemeTour,\n      dynamicWatchers   : {},\n      footerType        : themeConfig.footerType  || 'static',\n      hideScrollToTop   : themeConfig.hideScrollToTop,\n      isNavbarDark      : false,\n      navbarColor       : themeConfig.navbarColor || '#fff',\n      navbarType        : themeConfig.navbarType  || 'floating',\n      navMenuItems      : navMenuItems,\n      routerTransition  : themeConfig.routerTransition || 'none',\n      routeTitle        : this.$route.meta.pageTitle,\n      steps: [\n        // {\n        //   target  : '#btnVNavMenuMinToggler',\n        //   content : 'Thu gọn.'\n        // },\n        // {\n        //   target  : '.vx-navbar__starred-pages',\n        //   content : 'Tạo dấu trang của riêng bạn. Bạn cũng có thể sắp xếp lại chúng bằng cách kéo và thả.'\n        // },\n        // {\n        //   target  : '.i18n-locale',\n        //   content : 'Bạn có thể thay đổi ngôn ngữ từ đây.'\n        // },\n        // {\n        //   target  : '.navbar-fuzzy-search',\n        //   content : 'Thử tìm kiếm để truy cập các trang trong nháy mắt.'\n        // },\n        // {\n        //   target  : '.customizer-btn',\n        //   content : 'Tùy chỉnh mẫu dựa trên sở thích của bạn',\n        //   params  : {\n        //     placement: 'left'\n        //   }\n        // },\n        // {\n        //   target  : '.vs-button.buy-now',\n        //   content : 'Chúng tôi còn rất nhiều sản phẩm khác ^.^!',\n        //   params  : {\n        //     placement: 'top'\n        //   }\n        // },\n      ],\n    }\n  },\n  watch: {\n    \"$route\"() {\n      this.routeTitle = this.$route.meta.pageTitle\n    },\n    isThemeDark(val) {\n      const color = this.navbarColor == \"#fff\" && val ? \"#10163a\" : \"#fff\"\n      this.updateNavbarColor(color)\n    },\n    \"$store.state.mainLayoutType\"(val) {\n      this.setNavMenuVisibility(val)\n      this.disableThemeTour = true\n    }\n  },\n  computed: {\n    bodyOverlay() { return this.$store.state.bodyOverlay },\n    contentAreaClass() {\n      if(this.mainLayoutType === \"vertical\") {\n        if      (this.verticalNavMenuWidth == \"default\") return \"content-area-reduced\"\n        else if (this.verticalNavMenuWidth == \"reduced\") return \"content-area-lg\"\n        else return \"content-area-full\"\n      }\n      // else if(this.mainLayoutType === \"boxed\") return \"content-area-reduced\"\n      else return \"content-area-full\"\n    },\n    footerClasses() {\n      return {\n        'footer-hidden': this.footerType == 'hidden',\n        'footer-sticky': this.footerType == 'sticky',\n        'footer-static': this.footerType == 'static',\n      }\n    },\n    isAppPage() {\n      return this.$route.meta.no_scroll\n    },\n    isThemeDark()     { return this.$store.state.theme == 'dark' },\n    layoutTypeClass() { return `main-${this.mainLayoutType}` },\n    mainLayoutType()  { return this.$store.state.mainLayoutType  },\n    navbarClasses()   {\n      return {\n        'navbar-hidden'   : this.navbarType == 'hidden',\n        'navbar-sticky'   : this.navbarType == 'sticky',\n        'navbar-static'   : this.navbarType == 'static',\n        'navbar-floating' : this.navbarType == 'floating',\n      }\n    },\n    verticalNavMenuWidth() { return this.$store.state.verticalNavMenuWidth },\n    windowWidth()          { return this.$store.state.windowWidth }\n  },\n  methods: {\n    changeRouteTitle(title) {\n      this.routeTitle = title\n    },\n    updateNavbar(val) {\n      if (val == \"static\") this.updateNavbarColor(this.isThemeDark ? \"#10163a\" : \"#fff\")\n      this.navbarType = val\n    },\n    updateNavbarColor(val) {\n      this.navbarColor = val\n      if (val == \"#fff\") this.isNavbarDark = false\n      else this.isNavbarDark = true\n    },\n    updateFooter(val) {\n      this.footerType = val\n    },\n    updateRouterTransition(val) {\n      this.routerTransition = val\n    },\n    setNavMenuVisibility(layoutType) {\n      if((layoutType === 'horizontal' && this.windowWidth >= 1200) || (layoutType === \"vertical\" && this.windowWidth < 1200)) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n        this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      }\n      else {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      }\n    },\n    toggleHideScrollToTop(val) {\n      this.hideScrollToTop = val\n    }\n  },\n  created() {\n    const color = this.navbarColor == \"#fff\" && this.isThemeDark ? \"#10163a\" : this.navbarColor\n    this.updateNavbarColor(color)\n    this.setNavMenuVisibility(this.$store.state.mainLayoutType)\n\n    // Dynamic Watchers for tour\n    // Reason: Once tour is disabled it is not required to enable it.\n    // So, watcher is required for just disabling it.\n    this.dynamicWatchers.windowWidth = this.$watch(\"$store.state.windowWidth\", (val) => {\n      if(val < 1200) {\n        this.disableThemeTour = true\n        this.dynamicWatchers.windowWidth()\n      }\n    })\n\n    this.dynamicWatchers.verticalNavMenuWidth = this.$watch(\"$store.state.verticalNavMenuWidth\", () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.verticalNavMenuWidth()\n    })\n\n    this.dynamicWatchers.rtl = this.$watch(\"$vs.rtl\", () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.rtl()\n    })\n  },\n  beforeDestroy() {\n    Object.keys(this.dynamicWatchers).map(i => {\n      this.dynamicWatchers[i]()\n      delete this.dynamicWatchers[i]\n    })\n  }\n}\n\n",null]}