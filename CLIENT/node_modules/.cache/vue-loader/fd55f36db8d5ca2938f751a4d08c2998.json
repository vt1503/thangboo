{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HisOrderBet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/slidebar/HisOrderBet.vue","mtime":1649894645189},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport { isTablet, isMobile } from 'mobile-device-detect'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  props: {\r\n    isSidebarActive: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    data: {\r\n      type: Object,\r\n      default: () => {},\r\n    }\r\n  },\r\n  watch: {\r\n    // isSidebarActive(val) {\r\n    //   if(!val) return\r\n    //   if(Object.entries(this.data).length === 0) {\r\n    //     //this.initValues()\r\n    //     this.$validator.reset()\r\n    //   }else {\r\n    //     let { token } = JSON.parse(JSON.stringify(this.data))\r\n    //     this.token = token\r\n    //     //this.initValues()\r\n    //   }\r\n    //   // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\r\n    // }\r\n  },\r\n  data() {\r\n    return {\r\n\r\n      isCloseTab: true,\r\n      isOpenTab: false,\r\n\r\n      isDate: '',\r\n\r\n      lastDate: '',\r\n      listItem: [],\r\n      listItemOpen: [],\r\n      colorxChangePass:\"#def1d1\",\r\n      popupActiveChangePass: false,\r\n      // Data Sidebar\r\n      SidebarHSSetting: false,\r\n      sidebarDataSetting: {},\r\n      settings: { // perfectscrollbar settings\r\n          maxScrollbarLength: 60,\r\n          wheelSpeed: .60,\r\n      },\r\n      isSideBar: isMobile || isTablet,\r\n    }\r\n  },\r\n//   filters: {\r\n//     currencydecimal (val) {\r\n//       if(val == 'BTC') return val.toFixed(6)\r\n//       if(val == 'ETH') return val.toFixed(4)\r\n//       return val.toFixed(2)\r\n//     }\r\n//   },\r\n  computed: {\r\n    isSidebarActiveLocal: {\r\n      get() {\r\n        if(!!this.isCloseTab){\r\n          this.getListBET();\r\n        }\r\n        if(!!this.isOpenTab){\r\n          this.getListOrder();\r\n        }\r\n        return this.isSidebarActive\r\n      },\r\n      set(val) {\r\n        if(!val) {\r\n          this.$emit('closeSidebar')\r\n          // this.$validator.reset()\r\n          // this.initValues()\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n\r\n    fromatTimzoneD(value){\r\n      if (value) {\r\n          return moment(new Date(value)).format('DD/MM/YYYY')\r\n      }\r\n    },\r\n\r\n    fromatTimzoneH(value){\r\n      if (value) {\r\n          return moment(new Date(value)).format('HH:mm:ss')\r\n      }\r\n    },\r\n\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    formatDay(value){\r\n      if (value) {\r\n          return moment(String(value)).format('DD/MM/YYYY')\r\n      }\r\n    },\r\n\r\n    formatHours(value){\r\n      if (value) {\r\n          return moment(String(value)).format('HH:mm:ss')\r\n      }\r\n    },\r\n\r\n    getListBET(){\r\n      let list = JSON.parse(localStorage.getItem('stateOpen'))\r\n      if(list){\r\n        this.listItemOpen = list.l.bet[0].items.reverse();\r\n      }else{\r\n        this.listItemOpen = [];\r\n      }\r\n    },\r\n\r\n    getListOrder(){\r\n      AuthenticationService.getListHitoryOrder()\r\n      .then((res)=>{\r\n          if(res.data.success){\r\n              this.listItem = res.data.data\r\n          }\r\n      })\r\n    },\r\n\r\n    showHoSoSetting(data){\r\n      //let id = data\r\n      this.toggleDataSidebar(true)\r\n    },\r\n\r\n    toggleDataSidebar(val=false) {\r\n      this.SidebarHSSetting = val\r\n    },\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n\r\n  mounted() {\r\n    let stateOpen = localStorage.getItem('stateOpen');\r\n    if (stateOpen) {\r\n      const list = JSON.parse(stateOpen)\r\n      if(list){\r\n        this.listItemOpen = list.l.bet[0].items.reverse();\r\n      } else {\r\n        this.listItemOpen = [];\r\n        this.getListOrder();\r\n      }\r\n    }\r\n\r\n    window.addEventListener('stateOpen-localstorage-changed', (event) => {\r\n      if (!event.detail.storage) {\r\n        this.listItemOpen = [];\r\n        this.getListOrder();\r\n        return;\r\n      }\r\n      const list = JSON.parse(event.detail.storage)\r\n      if(list){\r\n        this.listItemOpen = list.l.bet[0].items.reverse();\r\n      } else {\r\n        this.listItemOpen = [];\r\n        this.getListOrder();\r\n      }\r\n    });\r\n  },\r\n\r\n}\r\n",null]}