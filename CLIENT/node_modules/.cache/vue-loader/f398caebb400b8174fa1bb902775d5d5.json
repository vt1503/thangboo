{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/list-view/DataListListView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/list-view/DataListListView.vue","mtime":1573544616000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataViewSidebar from '../DataViewSidebar.vue'\nimport moduleDataList from \"@/store/data-list/moduleDataList.js\"\n\nexport default {\n  components: {\n    DataViewSidebar\n  },\n  data() {\n    return {\n      selected: [],\n      // products: [],\n      itemsPerPage: 4,\n      isMounted: false,\n\n      // Data Sidebar\n      addNewDataSidebar: false,\n      sidebarData: {},\n    }\n  },\n  computed: {\n    currentPage() {\n      if(this.isMounted) {\n        return this.$refs.table.currentx\n      }\n      return 0\n    },\n    products() {\n      return this.$store.state.dataList.products\n    },\n    queriedItems() {\n      return this.$refs.table ? this.$refs.table.queriedResults.length : this.products.length\n    }\n  },\n  methods: {\n    addNewData() {\n      this.sidebarData = {}\n      this.toggleDataSidebar(true)\n    },\n    deleteData(id) {\n      this.$store.dispatch(\"dataList/removeItem\", id).catch(err => { console.error(err) })\n    },\n    editData(data) {\n      // this.sidebarData = JSON.parse(JSON.stringify(this.blankData))\n      this.sidebarData = data\n      this.toggleDataSidebar(true)\n    },\n    getOrderStatusColor(status) {\n      if(status == 'on_hold') return \"warning\"\n      if(status == 'delivered') return \"success\"\n      if(status == 'canceled') return \"danger\"\n      return \"primary\"\n    },\n    getPopularityColor(num) {\n      if(num > 90) return \"success\"\n      if(num >70) return \"primary\"\n      if(num >= 50) return \"warning\"\n      if(num < 50) return \"danger\"\n      return \"primary\"\n    },\n    toggleDataSidebar(val=false) {\n      this.addNewDataSidebar = val\n    }\n  },\n  created() {\n    if(!moduleDataList.isRegistered) {\n      this.$store.registerModule('dataList', moduleDataList)\n      moduleDataList.isRegistered = true\n    }\n    this.$store.dispatch(\"dataList/fetchDataListItems\")\n  },\n  mounted() {\n    this.isMounted = true;\n  }\n}\n",null]}