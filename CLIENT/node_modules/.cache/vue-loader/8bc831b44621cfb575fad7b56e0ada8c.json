{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/components/extra-components/autocomplete/Autocomplete.vue?vue&type=template&id=44bec18e&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/components/extra-components/autocomplete/Autocomplete.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  <div id=\"page-autocomplete-demo\">\n\n    <!-- BASIC AUTOCOMPLETE -->\n    <vx-card title=\"Basic Autocomplete\" code-toggler>\n      <vue-simple-suggest\n        v-model=\"chosen\"\n        :list=\"simpleSuggestionList\"\n        :filter-by-query=\"true\">\n      </vue-simple-suggest>\n\n      <p class=\"mt-4\">Chosen element: {{ chosen }}</p>\n\n      <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vue-simple-suggest\n    v-model=&quot;chosen&quot;\n    :list=&quot;simpleSuggestionList&quot;\n    :filter-by-query=&quot;true&quot;&gt;\n    &lt;!-- Filter by input text to only show the matching results --&gt;\n  &lt;/vue-simple-suggest&gt;\n\n  &lt;p class=&quot;mt-4&quot;&gt;Chosen element: {{ chosen }}&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      chosen: &apos;&apos;,\n    }\n  },\n  methods: {\n    simpleSuggestionList() {\n      return [\n        &apos;Vue.js&apos;,\n        &apos;React.js&apos;,\n        &apos;Angular.js&apos;\n      ]\n    },\n  }\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;scss&quot;&gt;\n@import &quot;@/assets/scss/vuexy/extraComponents/autocomplete.scss&quot;;\n&lt;/style&gt;\n      </template>\n    </vx-card>\n    <!-- /BASIC AUTOCOMPLETE -->\n\n\n    <!-- AJAX BASED AUTOCOMPLETE -->\n    <vx-card title=\"Ajax Based Autocomplete\" code-toggler>\n      <vue-simple-suggest pattern=\"\\w+\"\n        v-model=\"model\"\n        :list=\"getList\"\n        :max-suggestions=\"10\"\n        :min-length=\"3\"\n        :debounce=\"200\"\n        :filter-by-query=\"false\"\n        :prevent-submit=\"true\"\n        :controls=\"{\n          selectionUp: [38, 33],\n          selectionDown: [40, 34],\n          select: [13, 36],\n          hideList: [27, 35]\n        }\"\n        :mode=\"mode\"\n        :nullable-select=\"true\"\n        ref=\"suggestComponent\"\n        placeholder=\"Search information...\"\n        value-attribute=\"id\"\n        display-attribute=\"text\"\n        @select=\"onSuggestSelect\">\n\n        <div class=\"g\">\n          <input type=\"text\">\n        </div>\n\n        <template slot=\"misc-item-above\" slot-scope=\"{ suggestions, query }\">\n          <div class=\"misc-item\">\n            <span>You're searching for '{{ query }}'.</span>\n          </div>\n\n          <template v-if=\"suggestions.length > 0\">\n            <div class=\"misc-item\">\n              <span>{{ suggestions.length }} suggestions are shown...</span>\n            </div>\n            <hr>\n          </template>\n\n          <div class=\"misc-item\" v-else-if=\"!loading\">\n            <span>No results</span>\n          </div>\n        </template>\n\n        <div slot=\"suggestion-item\" slot-scope=\"scope\" :title=\"scope.suggestion.description\">\n          <div class=\"text\">\n            <span v-html=\"boldenSuggestion(scope)\"></span>\n          </div>\n        </div>\n\n        <div class=\"misc-item\" slot=\"misc-item-below\" slot-scope=\"{ suggestions }\" v-if=\"loading\">\n          <span>Loading...</span>\n        </div>\n      </vue-simple-suggest>\n\n      <p class=\"mt-3\">Selected element ({{ typeof selected }}): <pre class=\"selected hljs\"><span v-html=\"selected\"></span></pre></p>\n\n      <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vue-simple-suggest\n    pattern=&quot;\\w+&quot;\n    v-model=&quot;model&quot;\n    :list=&quot;getList&quot;\n    :max-suggestions=&quot;10&quot;\n    :min-length=&quot;3&quot;\n    :debounce=&quot;200&quot;\n    :filter-by-query=&quot;false&quot;\n    :prevent-submit=&quot;true&quot;\n    :controls=&quot;{\n      selectionUp: [38, 33],\n      selectionDown: [40, 34],\n      select: [13, 36],\n      hideList: [27, 35]\n    }&quot;\n    :mode=&quot;mode&quot;\n    :nullable-select=&quot;true&quot;\n    ref=&quot;suggestComponent&quot;\n    placeholder=&quot;Search information...&quot;\n    value-attribute=&quot;id&quot;\n    display-attribute=&quot;text&quot;\n    @select=&quot;onSuggestSelect&quot;&gt;\n\n    &lt;div class=&quot;g&quot;&gt;\n      &lt;input type=&quot;text&quot;&gt;\n    &lt;/div&gt;\n\n    &lt;template slot=&quot;misc-item-above&quot; slot-scope=&quot;{ suggestions, query }&quot;&gt;\n      &lt;div class=&quot;misc-item&quot;&gt;\n        &lt;span&gt;You&apos;re searching for &apos;{{ \"\\{\\{ query \\}\\}\" }}&apos;.&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;template v-if=&quot;suggestions.length &gt; 0&quot;&gt;\n        &lt;div class=&quot;misc-item&quot;&gt;\n          &lt;span&gt;{{ \"\\{\\{ suggestions.length \\}\\}\" }} suggestions are shown...&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;hr&gt;\n      &lt;/template&gt;\n\n      &lt;div class=&quot;misc-item&quot; v-else-if=&quot;!loading&quot;&gt;\n        &lt;span&gt;No results&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/template&gt;\n\n    &lt;div slot=&quot;suggestion-item&quot; slot-scope=&quot;scope&quot; :title=&quot;scope.suggestion.description&quot;&gt;\n      &lt;div class=&quot;text&quot;&gt;\n        &lt;span v-html=&quot;boldenSuggestion(scope)&quot;&gt;&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=&quot;misc-item&quot; slot=&quot;misc-item-below&quot; slot-scope=&quot;{ suggestions }&quot; v-if=&quot;loading&quot;&gt;\n      &lt;span&gt;Loading...&lt;/span&gt;\n    &lt;/div&gt;\n  &lt;/vue-simple-suggest&gt;\n\n  &lt;p class=&quot;mt-3&quot;&gt;Selected element ({{ \"\\{\\{ typeof selected \\}\\}\" }}): &lt;pre class=&quot;selected hljs&quot;&gt;&lt;span v-html=&quot;selected&quot;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      model: null,\n    }\n  },\n  methods: {\n    getList (inputValue) {\n      return new Promise((resolve, reject) =&gt; {\n        let url = &grave;https://en.wikipedia.org/w/api.php?origin=*&amp;action=opensearch&amp;namespace=*&amp;search=${inputValue}&amp;limit=10&amp;namespace=0&amp;format=json&grave;\n        fetch(url).then(response =&gt; {\n          if (!response.ok) {\n            reject()\n          }\n          response.json().then(json =&gt; {\n            json.shift();\n            let result = []\n            const fields = [&apos;text&apos;, &apos;description&apos;, &apos;link&apos;]\n            json.forEach((part, i) =&gt; {\n              part.forEach((el, j) =&gt; {\n                if (!result[j]) {\n                  result.push({\n                    id: j+1\n                  })\n                }\n                result[j][fields[i]] = el\n              })\n            })\n            resolve(result)\n            // resolve([...(json.items || [])])\n          }).catch(e =&gt; {\n            reject(e)\n          })\n        }).catch(error =&gt; {\n          this.loading = false\n          reject(error)\n        })\n      })\n    },\n    onSuggestSelect (suggest) {\n      this.selected = suggest\n    },\n    boldenSuggestion(scope) {\n      if (!scope) return scope;\n      const { suggestion, query } = scope;\n      let result = this.$refs.suggestComponent.displayProperty(suggestion);\n      if (!query) return result;\n      const texts = query.split(/[\\s-_/\\\\|.]/gm).filter(t =&gt; !!t) || [&apos;&apos;];\n      return result.replace(new RegExp(&apos;(.*?)(&apos; + texts.join(&apos;|&apos;) + &apos;)(.*?)&apos;,&apos;gi&apos;), &apos;$1&lt;b&gt;$2&lt;/b&gt;$3&apos;);\n    },\n  }\n}\n&lt;/script&gt;\n      </template>\n    </vx-card>\n    <!-- /AJAX BASED AUTOCOMPLETE -->\n\n\n    <!-- MODE -->\n    <vx-card title=\"Mode\">\n      <p class=\"mb-3\">Determines the event, that triggers <code>v-model</code>. Can be one of <code>'input'</code> (default) or <code>'select'</code>.</p>\n\n      <p class=\"mb-3\">For example, if <code>'input'</code> is chosen - then v-model will update the value each time an <code>input</code> event is fired, setting the input's string.</p>\n\n      <p class=\"mb-3\">Same is for <code>'select'</code> - v-model changes only when something is selected from the list, setting the selected value (string, object or whatever) to its argument.</p>\n\n      <p class=\"mb-3\">A proper use-case for it being when one wants to use the component only for selection binding and custom input for text binding:</p>\n\n      <prism language=\"markup\" class=\"rounded-lg\">\n&lt;vue-simple-suggest v-model=&quot;selected&quot; mode=&quot;select&quot;&gt;\n  &lt;input v-model=&quot;text&quot;&gt;\n&lt;/vue-simple-suggest&gt;\n      </prism>\n    </vx-card>\n    <!-- /MODE -->\n\n  </div>\n",null]}