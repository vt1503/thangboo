{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/forms/form-wizard/FormWizardValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/forms/form-wizard/FormWizardValidation.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport { Validator } from 'vee-validate';\nconst dict = {\n    custom: {\n        first_name: {\n            required: 'First name is required',\n            alpha: \"First name may only contain alphabetic characters\"\n        },\n        last_name: {\n            required: 'Last name is required',\n            alpha: \"Last name may only contain alphabetic characters\"\n        },\n        email: {\n            required: 'Email is required',\n            email: \"Please enter valid email\"\n        },\n        job_title: {\n            required: 'Job title name is required',\n            alpha: \"Job title may only contain alphabetic characters\"\n        },\n        proposal_title: {\n            required: 'Proposal title name is required',\n            alpha: \"Proposal title may only contain alphabetic characters\"\n        },\n        event_name: {\n            required: 'Event name is required',\n            alpha: \"Event name may only contain alphabetic characters\"\n        },\n    }\n};\n\n// register custom messages\nValidator.localize('en', dict);\n\nexport default {\n    data() {\n        return {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            city: \"new-york\",\n            proposalTitle: \"\",\n            jobTitle: \"\",\n            textarea: \"\",\n            eventName: \"\",\n            eventLocation: \"san-francisco\",\n            status: \"plannning\",\n            cityOptions: [\n                { text: \"New York\", value: \"new-york\" },\n                { text: \"Chicago\", value: \"chicago\" },\n                { text: \"San Francisco\", value: \"san-francisco\" },\n                { text: \"Boston\", value: \"boston\" },\n            ],\n            statusOptions: [\n                { text: \"Plannning\", value: \"plannning\" },\n                { text: \"In Progress\", value: \"in progress\" },\n                { text: \"Finished\", value: \"finished\" },\n            ],\n            LocationOptions: [\n                { text: \"New York\", value: \"new-york\" },\n                { text: \"Chicago\", value: \"chicago\" },\n                { text: \"San Francisco\", value: \"san-francisco\" },\n                { text: \"Boston\", value: \"boston\" },\n            ],\n        }\n    },\n    methods: {\n        validateStep1() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll('step-1').then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                })\n            })\n        },\n        validateStep2() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-2\").then(result => {\n                    if (result) {\n                        resolve(true)\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                })\n            })\n        },\n        validateStep3() {\n            return new Promise((resolve, reject) => {\n                this.$validator.validateAll(\"step-3\").then(result => {\n                    if (result) {\n                        alert(\"Form submitted!\");\n                        resolve(true)\n                    } else {\n                        reject(\"correct all values\");\n                    }\n                })\n            })\n        }\n    },\n    components: {\n        FormWizard,\n        TabContent\n    }\n}\n",null]}