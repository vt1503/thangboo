{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/todo/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/todo/Todo.vue","mtime":1571653082000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moduleTodo          from '@/store/todo/moduleTodo.js'\nimport TodoAddNew          from \"./TodoAddNew.vue\"\nimport TodoTask            from \"./TodoTask.vue\"\nimport TodoFilters         from \"./TodoFilters.vue\"\nimport TodoEdit            from \"./TodoEdit.vue\"\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  data() {\n    return {\n      currFilter           : \"\",\n      clickNotClose        : true,\n      displayPrompt        : false,\n      taskIdToEdit         : 0,\n      isSidebarActive      : true,\n      settings : {\n        maxScrollbarLength : 60,\n        wheelSpeed         : 0.30,\n      },\n    }\n  },\n  watch: {\n    todoFilter() {\n      this.$refs.taskListPS.$el.scrollTop = 0\n      this.toggleTodoSidebar()\n\n      // Fetch Tasks\n      let filter = this.$route.params.filter\n      this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n      this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n    },\n    windowWidth() {\n      this.setSidebarWidth()\n    },\n  },\n  computed: {\n    todo()        { return this.$store.state.todo.todoArray              },\n    todoFilter()  { return this.$route.params.filter                     },\n    taskList()    { return this.$store.getters[\"todo/queriedTasks\"]      },\n    searchQuery:  {\n      get()       { return this.$store.state.todo.todoSearchQuery        },\n      set(val)    { this.$store.dispatch('todo/setTodoSearchQuery', val) }\n    },\n    windowWidth() { return this.$store.state.windowWidth }\n  },\n  methods: {\n    showDisplayPrompt(itemId) {\n      this.taskIdToEdit  = itemId\n      this.displayPrompt = true\n    },\n    hidePrompt() {\n      this.displayPrompt = false\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isSidebarActive = this.clickNotClose = false\n      } else {\n        this.isSidebarActive = this.clickNotClose = true\n      }\n    },\n    toggleTodoSidebar(value = false) {\n      if (!value && this.clickNotClose) return\n      this.isSidebarActive = value\n    },\n  },\n  components: {\n    TodoAddNew,\n    TodoTask,\n    TodoFilters,\n    TodoEdit,\n    VuePerfectScrollbar\n  },\n  created() {\n    this.$store.registerModule('todo', moduleTodo)\n    this.setSidebarWidth()\n\n    let filter = this.$route.params.filter\n\n    // Fetch Tasks\n    this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n    this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n\n    // Fetch Tags\n    this.$store.dispatch(\"todo/fetchTags\")\n  },\n  beforeUpdate() {\n    this.currFilter = this.$route.params.filter\n  },\n  beforeDestroy: function() {\n    this.$store.unregisterModule('todo')\n  },\n  mounted() {\n    this.$store.dispatch(\"todo/setTodoSearchQuery\", \"\")\n  }\n}\n\n",null]}