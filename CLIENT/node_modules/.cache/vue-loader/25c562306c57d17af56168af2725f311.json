{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/TradeHistory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/TradeHistory.vue","mtime":1642160418000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\n//import VueApexCharts from 'vue-apexcharts'\r\n\r\nimport { Chart } from 'highcharts-vue'\r\nimport Highcharts from 'highcharts'\r\nimport Highcharts3D from 'highcharts/highcharts-3d'\r\nimport More from 'highcharts/highcharts-more'\r\n\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport moment from 'moment'\r\n\r\nHighcharts3D(Highcharts)\r\nMore(Highcharts)\r\n\r\nconst chartDount = {\r\n    chart: {\r\n        type: 'pie',\r\n        backgroundColor: \"transparent\",\r\n        height: '250px',\r\n        options3d: {\r\n            enabled: true,\r\n            alpha: 45\r\n        }\r\n    },\r\n    title: {\r\n        text: ''\r\n    },\r\n    subtitle: {\r\n        text: ''\r\n    },\r\n    credits: {\r\n        enabled: false\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            innerSize: 50,\r\n            depth: 20\r\n        },\r\n        series: {\r\n            colors: [\"#EA5455\", \"#28C76F\"],\r\n        \tdataLabels: {\r\n          \t    enabled: true,\r\n                color: '#fff'\r\n\t\t\t}\r\n\t\t}\r\n    },\r\n    legend:{\r\n        itemHoverStyle:{\"color\": \"#C1C1C1\"},\r\n        itemStyle: {\"color\": \"#fff\", \"cursor\": \"pointer\", \"fontSize\": \"12px\", \"fontWeight\": \"bold\", \"textOverflow\": \"ellipsis\"}\r\n    },\r\n    series: [{\r\n        pie: {\r\n            borderColor: 'transparent',\r\n            borderWidth: 0\r\n        },\r\n        showInLegend: true,\r\n        name: '',\r\n        data: [\r\n            ['Total Lose', 78],\r\n            ['Total Win', 34]\r\n        ]\r\n    }]\r\n}\r\n\r\nexport default {\r\n    components: {\r\n        //VueApexCharts,\r\n        Datepicker,\r\n        highcharts: Chart \r\n    },\r\n    data() {\r\n        return {\r\n            dataHisOrder: [],\r\n            \r\n            isLoading: false,\r\n\r\n            down:0, // số lần sell\r\n            down_rate:0, // tỉ lệ sell\r\n            lose: 0,\r\n            profits: 0, // lợi nhuận rồng\r\n            refund: 0, // hoàn tiền           \r\n            revenue: 0, // tổng doanh thu\r\n            trades: 0, // tổng tiền giao dịch\r\n            up:0, // số lần buy\r\n            up_rate:0, // tỉ lệ buy\r\n            win: 0,\r\n            win_rate: 0,\r\n\r\n            formatDate: \"MM/dd/yyyy\",\r\n            startDate: null,\r\n            endDate: null,\r\n            optionsDount: chartDount,\r\n            totalOrder: 0,\r\n            // donutChart: {\r\n            //     series: [0, 1],\r\n            //     chartOptions: {\r\n                    \r\n            //         labels: [\"Tổng vòng thua\", \"Tổng vòng thắng\"],\r\n            //         //colors: this.themeColors,\r\n            //         colors: [\"#28C76F\", \"#EA5455\", \"#414141\"],\r\n\r\n            //         responsive: [{\r\n            //             breakpoint: 480,\r\n            //             options: {\r\n            //                 chart: {\r\n            //                     width: 200\r\n            //                 },\r\n            //                 legend: {\r\n            //                     position: 'bottom'\r\n            //                 }\r\n            //             }\r\n            //         }]\r\n            //     }\r\n            // }\r\n        }\r\n    },\r\n  methods: {\r\n\r\n\r\n    getInfoAccountDoanhThu(){\r\n        AuthenticationService.getThongTinLoiNhuan()\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                let cD = this.$refs.chartDount.chart.series[0];\r\n                let gD = res.data.data;\r\n                let obj = [\r\n                    {\r\n                        name: 'Total Lose',\r\n                        y: gD.lose\r\n                    },\r\n                    {\r\n                        name: 'Total Win',\r\n                        y: gD.win\r\n                    }\r\n                ]\r\n                cD.update({data: obj}, true)\r\n                this.totalOrder = gD.lose + gD.win\r\n                //this.donutChart.series = [gD.lose, gD.win]\r\n                \r\n                this.up = gD.up\r\n                this.up_rate = gD.up_rate\r\n                this.down = gD.down\r\n                this.down_rate = gD.down_rate\r\n                this.win = gD.win\r\n                this.win_rate = gD.win_rate\r\n                this.lose = gD.lose\r\n                this.trades = gD.trades\r\n                this.revenue = gD.revenue\r\n\r\n                this.profits = gD.profits\r\n\r\n                gD = null;\r\n            }\r\n        })\r\n    },\r\n\r\n\r\n    getListHistoryOrder(){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisOrder()\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                //console.log(res.data.data)\r\n                this.isLoading = false\r\n                this.dataHisOrder = res.data.data\r\n            }\r\n        })\r\n    },\r\n\r\n    getSeachOrderDate(){\r\n        this.isLoading = true\r\n\r\n\r\n        let start =  this.formatDateHis(this.startDate)\r\n        let end =  this.formatDateHis(this.endDate)\r\n\r\n        let obj = {\r\n            s: start,\r\n            e: end\r\n        }\r\n\r\n        AuthenticationService.getSeachListOrder(obj)\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                //console.log(res.data.data)\r\n                this.isLoading = false\r\n                this.dataHisOrder = res.data.data\r\n            }\r\n        })\r\n    },\r\n\r\n    replaceAll(str, find, replace) {\r\n        return Number(str.replace(new RegExp(find, 'g'), replace));\r\n    },\r\n\r\n    isNumber(value){\r\n        return typeof value === 'number' && isFinite(value);\r\n    },\r\n\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    formatDateHis(value){\r\n        if (value) {\r\n          return moment(String(value)).format('YYYY-MM-DD')\r\n        }\r\n    },\r\n\r\n    formatDateOrder(value){\r\n      if (value) {\r\n          return moment(String(value)).format('MM/DD/YYYY HH:mm:ss')\r\n      }\r\n    },\r\n\r\n  },\r\n\r\n  created() {\r\n\r\n        var currentDate = new Date()\r\n        var day = currentDate.getDate()\r\n        var month = currentDate.getMonth()\r\n        var year = currentDate.getFullYear()\r\n\r\n        var last_week = new Date(year, currentDate.getMonth(), day - 7);\r\n\r\n        this.startDate = moment(String(last_week)).format('MM/DD/YYYY')\r\n\r\n        let end_date = new Date(year, month, day)\r\n\r\n        this.endDate = moment(String(end_date)).format('MM/DD/YYYY')\r\n\r\n\r\n\r\n        this.getInfoAccountDoanhThu()\r\n        this.getListHistoryOrder()\r\n  },\r\n}\r\n",null]}