{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/components/customizer/TheCustomizer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/components/customizer/TheCustomizer.vue","mtime":1572508396000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  props: {\n    footerType       : { type: String,  required: true, },\n    hideScrollToTop  : { type: Boolean, required: true, },\n    navbarType       : { type: String,  required: true, },\n    navbarColor      : { type: String,  required: true, default: \"#fff\", },\n    routerTransition : { type: String,  required: true, }\n  },\n  data() {\n    return {\n      active             : false,\n      customPrimaryColor : '#3DC9B3',\n      customNavbarColor  : '#3DC9B3',\n      routerTransitionsList: [\n        { text: 'Zoom Fade',   value: 'zoom-fade'   },\n        { text: 'Slide Fade',  value: 'slide-fade'  },\n        { text: 'Fade Bottom', value: 'fade-bottom' },\n        { text: 'Fade',        value: 'fade'        },\n        { text: 'Zoom Out',    value: 'zoom-out'    },\n        { text: 'None',        value: 'none'        },\n      ],\n      settings: {\n        maxScrollbarLength : 60,\n        wheelSpeed         : .60,\n      },\n      themeColors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\n    }\n  },\n  watch: {\n    layoutType(val) {\n\n      // Reset unsupported options\n      if(val === \"horizontal\") {\n        this.themeMode === \"semi-dark\" ? this.themeMode = \"light\" : null\n        this.navbarType === \"hidden\" ? this.navbarTypeLocal = \"floating\" : null\n        this.$emit('updateNavbarColor', \"#fff\")\n      }\n    }\n  },\n  computed: {\n    footerTypeLocal: {\n      get()    { return this.footerType; },\n      set(val) { this.$emit('updateFooter', val) }\n    },\n    hideScrollToTopLocal: {\n      get()    { return this.hideScrollToTop },\n      set(val) { this.$emit('toggleHideScrollToTop', val) }\n    },\n    navbarColorInitial() {\n      return this.$store.state.theme === 'dark' ? '#10163a' : '#fff'\n    },\n    navbarColorOptionClasses() {\n      return (color) => {\n        let classes = {}\n        if (color == this.navbarColorLocal)   classes['shadow-outline'] = true\n        if (this.navbarTypeLocal == 'static') classes['cursor-not-allowed'] = true\n        return classes\n      }\n    },\n    navbarColorLocal: {\n      get() { return this.navbarColor },\n      set(val) {\n        if (this.navbarType == 'static') return\n        this.$emit('updateNavbarColor', val)\n      }\n    },\n    navbarTypeLocal: {\n      get()    { return this.navbarType },\n      set(val) { this.$emit('updateNavbar', val) }\n    },\n    layoutType: {\n      get()    { return this.$store.state.mainLayoutType },\n      set(val) { this.$store.commit(\"UPDATE_MAIN_LAYOUT_TYPE\", val) }\n    },\n    primaryColor: {\n      get()    { return this.$store.state.themePrimaryColor },\n      set(val) { this.$store.commit('UPDATE_PRIMARY_COLOR', val) }\n    },\n    reduced_sidebar: {\n      get()    { return this.$store.state.reduceButton },\n      set(val) { this.$store.commit('TOGGLE_REDUCE_BUTTON', val) }\n    },\n    routerTransitionLocal: {\n      get()    { return this.routerTransition },\n      set(val) { this.$emit('updateRouterTransition', val) }\n    },\n    rtl: {\n      get()    { return this.$vs.rtl },\n      set(val) { this.$vs.rtl = val  }\n    },\n    themeMode: {\n      get()    { return this.$store.state.theme },\n      set(val) { this.$store.dispatch('updateTheme', val) }\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth\n    }\n  },\n  methods: {\n    updatePrimaryColor(color) {\n      this.primaryColor = color;\n      this.$vs.theme({ primary: color });\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n  }\n}\n\n",null]}