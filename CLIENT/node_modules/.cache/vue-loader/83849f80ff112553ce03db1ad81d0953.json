{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/charts-and-maps/maps/google-map/GoogleMapInfoWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/charts-and-maps/maps/google-map/GoogleMapInfoWindow.vue","mtime":1570194316000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            center: { lat: 47.376332, lng: 8.547511 },\n            infoContent: '',\n            infoWindowPos: null,\n            infoWinOpen: false,\n            currentMidx: null,\n            //optional: offset infowindow so it visually sits nicely on top of our marker\n            infoOptions: {\n            pixelOffset: { width: 0, height: -35 }\n            },\n            markers: [\n                { position: { lat: 47.376332, lng: 8.547511 }, infoText: 'Marker 1' },\n                { position: { lat: 47.374592, lng: 8.548867 }, infoText: 'Marker 2' },\n                { position: { lat: 47.379592, lng: 8.549867 }, infoText: 'Marker 3' }\n            ]\n        }\n    },\n    methods: {\n        toggleInfoWindow: function(marker, idx) {\n            this.infoWindowPos = marker.position;\n            this.infoContent = marker.infoText;\n            //check if its the same marker that was selected if yes toggle\n            if (this.currentMidx == idx) {\n                this.infoWinOpen = !this.infoWinOpen;\n            }\n            //if different marker set infowindow to open and reset current marker index\n            else {\n                this.infoWinOpen = true;\n                this.currentMidx = idx;\n            }\n        }\n    }\n}\n",null]}