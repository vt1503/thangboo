{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/eCommerce/ECommerceCheckout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/eCommerce/ECommerceCheckout.vue","mtime":1573303530000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nconst ItemListView = () => import('./components/ItemListView.vue')\n\nexport default {\n    data() {\n        return {\n\n            // TAB 2\n            fullName: \"\",\n            mobileNum: \"\",\n            pincode: \"\",\n            houseNum: \"\",\n            area: \"\",\n            landmark: \"\",\n            city: \"\",\n            state: \"\",\n            addressType: 1,\n            addressTypeOptions: [\n                { text: 'Home', value: 1 },\n                { text: 'Office', value: 2 },\n            ],\n\n            // TAB 3\n            paymentMethod: \"debit-card\",\n            cvv: '',\n        }\n    },\n    computed: {\n        cartItems() {\n            return this.$store.state.eCommerce.cartItems.slice().reverse();\n        },\n        isInWishList() {\n            return (itemId) => this.$store.getters['eCommerce/isInWishList'](itemId)\n        },\n    },\n    methods: {\n\n        // TAB 1\n        removeItemFromCart(item) {\n            this.$store.dispatch('eCommerce/toggleItemInCart', item)\n        },\n        wishListButtonClicked(item) {\n            // Toggle in Wish List\n            if (this.isInWishList(item.objectID)) this.$router.push('/apps/eCommerce/wish-list').catch(() => {})\n            else {\n                this.toggleItemInWishList(item)\n                this.removeItemFromCart(item)\n            }\n        },\n        toggleItemInWishList(item) {\n            this.$store.dispatch('eCommerce/toggleItemInWishList', item)\n        },\n        updateItemQuantity(event, index) {\n            const itemIndex = Math.abs(index + 1 - this.cartItems.length)\n            this.$store.dispatch(\"eCommerce/updateItemQuantity\", { quantity: event, index: itemIndex })\n        },\n\n        // TAB 2\n        submitNewAddressForm() {\n            return new Promise(() => {\n                this.$validator.validateAll('add-new-address').then(result => {\n                    if (result) {\n                        // if form have no errors\n                        this.$refs.checkoutWizard.nextTab()\n                    } else {\n                        this.$vs.notify({\n                            title: 'Error',\n                            text: 'Please enter valid details',\n                            color: 'warning',\n                            iconPack: 'feather',\n                            icon: 'icon-alert-circle'\n                        })\n                    }\n                })\n            })\n        },\n\n        // TAB 3\n        makePayment() {\n            return new Promise(() => {\n                this.$validator.validateAll('cvv-form').then(result => {\n                    if (result) {\n                        // if form have no errors\n                        this.$vs.notify({\n                            title: 'Success',\n                            text: 'Payment received successfully',\n                            color: 'success',\n                            iconPack: 'feather',\n                            icon: 'icon-check'\n                        })\n                    } else {\n                        this.$vs.notify({\n                            title: 'Error',\n                            text: 'Please enter valid details',\n                            color: 'warning',\n                            iconPack: 'feather',\n                            icon: 'icon-alert-circle'\n                        })\n                    }\n                })\n            })\n        }\n    },\n    components: {\n        ItemListView,\n        FormWizard,\n        TabContent\n    }\n}\n",null]}