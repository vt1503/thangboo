{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/Exchange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/Exchange.vue","mtime":1630845244000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport getData from '@/pages/trade/navbar/components/data.json'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\ncomponents: {\r\n    \r\n},\r\n  data () {\r\n    return {\r\n        currentxEx: 0,\r\n        totalExH: 0,\r\n        isLoading: false,\r\n\r\n        minAmountTrans: 11,\r\n\r\n        amountEnterOne: 1,\r\n        amountEnterTwo: 0,\r\n\r\n        balanceOne: 0,\r\n        balanceTwo: 0,\r\n\r\n        isCoinOne: 'PAYPAL',\r\n        isCoinTwo: 'USDT',\r\n\r\n        disButtonTrans: false,\r\n\r\n        ssDownSend: 'Đổi',\r\n        backgroundLoading:'primary',\r\n        colorLoading: '#fff',\r\n        \r\n        totalRCT: 0,\r\n        currentxCT: 0,\r\n        dataHisEx: {}\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    replaceAll(str, find, replace) {\r\n        return Number(str.replace(new RegExp(find, 'g'), replace));\r\n    },\r\n\r\n    convertMoney(){\r\n          let mE = this.amountEnterOne == '' ? 0 : Number(this.amountEnterOne)\r\n          this.amountEnterTwo = this.formatPrice(mE * 1, 2) // 1 là giá trị quy đổi ( mặc định USDT là 1)\r\n\r\n          \r\n    },\r\n\r\n    ttClickAmount(v){\r\n        if(v == 1){ // thêm vào 1 nữa số tiền\r\n        this.amountEnterOne = Number(this.balanceOne) / 2\r\n        }else{ // thêm vào tất cả\r\n        this.amountEnterOne = Number(this.balanceOne)\r\n        }\r\n        this.convertMoney();\r\n    },\r\n\r\n    transCoin(){\r\n\r\n          if(this.isCoinOne == 'PAYPAL'){\r\n              this.isCoinOne = 'USDT'\r\n              this.isCoinTwo = 'PAYPAL'\r\n              let o = this.balanceOne\r\n              let t = this.balanceTwo\r\n\r\n              this.balanceOne = t\r\n              this.balanceTwo = o\r\n\r\n          }else{\r\n              this.isCoinOne = 'PAYPAL'\r\n              this.isCoinTwo = 'USDT'\r\n\r\n              let o = this.balanceOne\r\n              let t = this.balanceTwo\r\n\r\n              this.balanceOne = t\r\n              this.balanceTwo = o\r\n          }\r\n          this.balanceOne = this.replaceAll(this.balanceOne.toString(), ',', '');\r\n          \r\n      },\r\n\r\n      sendCodeSecure(){\r\n        this.disButtonTrans = true\r\n\r\n        this.$vs.loading({\r\n            //background: this.backgroundLoading,\r\n            color: this.colorLoading,\r\n            container: \"#button-with-loading\",\r\n            scale: 0.45\r\n        })\r\n        let giay = 10\r\n        let countD = setInterval(() => {\r\n            this.ssDownSend = giay + 's'\r\n            if(giay == 0){\r\n                this.disButtonTrans = false\r\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n                this.ssDownSend = 'Đổi'\r\n                clearInterval(countD)\r\n            }\r\n            giay--\r\n        }, 1000)\r\n    },\r\n\r\n    exChangeSubmit(){\r\n          let am = this.amountEnterOne == '' ? 0 : Number(this.amountEnterOne)\r\n          let adf = this.minAmountTrans\r\n          \r\n          // kiểm tra nếu số tiền đổi nhỏ hơn 11 USD và có nhỏ hơn số tiền hiện có hay không\r\n          if(am < adf){\r\n              return this.$vs.notify({\r\n                    text: `Giá trị chuyển đổi nhỏ nhất là ${adf} ${this.isCoinOne}`,\r\n                    color:'danger',\r\n                    position:'top-right',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-x-circle'\r\n                })\r\n          }\r\n\r\n\r\n          let dfBalance = Number(this.balanceOne)\r\n\r\n          if(am > dfBalance){\r\n              return this.$vs.notify({\r\n                    text: 'Số dư không đủ để chuyển đổi',\r\n                    color:'danger',\r\n                    position:'top-right',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-x-circle'\r\n                })\r\n          }\r\n          \r\n            // thực hiện quy trình chuyển đổi\r\n            \r\n            this.sendCodeSecure()\r\n\r\n            let obj = {\r\n                t_s: this.isCoinOne,\r\n                t_r: this.isCoinTwo,\r\n                a: am,\r\n                \r\n            }\r\n            AuthenticationService.transWallet(obj)\r\n            .then((res) => {\r\n                let d = res.data \r\n                if(d.success == 3 || d.success == 4){\r\n                    localStorage.removeItem('token')\r\n                    this.$router.push('/login').catch(() => {})\r\n                    return\r\n                }\r\n\r\n                if(d.success == 1){\r\n\r\n                    this.balanceOne = this.formatPrice(dfBalance - am, 2)\r\n                    this.balanceTwo = this.formatPrice(Number(this.balanceTwo) + am, 2)\r\n\r\n                    return this.$vs.notify({\r\n                        text:'Chuyển đổi thành công',\r\n                        color:'success',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'\r\n                    })\r\n\r\n                }\r\n\r\n            }) \r\n          \r\n    },\r\n\r\n    getBalanceWallet(){\r\n        \r\n        AuthenticationService.getBalanceWallet()\r\n        .then((res) => {\r\n            let d = res.data\r\n            if(d.success == 3 || d.success == 4){\r\n                localStorage.removeItem('token')\r\n                this.$router.push('/login').catch(() => {})\r\n                return\r\n            }\r\n            if(d.success){\r\n                //let mU = d.data.usdt\r\n                //let mE = d.data.eth\r\n               // let mB = d.data.btc\r\n                let mP = d.data.paypal\r\n\r\n                //this.balanceUSDT = this.formatPrice(mU, 2)\r\n                //this.balanceETH = this.formatPrice(mE, 4)\r\n                //this.balanceBTC = this.formatPrice(mB, 6)\r\n                this.balanceOne = this.formatPrice(mP, 2)\r\n\r\n                this.balanceTwo = this.formatPrice(getData.balance, 2)\r\n            }\r\n        })\r\n    },\r\n\r\n    getExChange(){\r\n        AuthenticationService.getExChangeUser()\r\n        .then((res) => {\r\n            let d = res.data\r\n            if(d.success == 3 || d.success == 4){\r\n                localStorage.removeItem('token')\r\n                this.$router.push('/login').catch(() => {})\r\n                return\r\n            }\r\n            if(d.success){\r\n                let c = (d.count / 10).toString()\r\n                this.totalExH = Number(c.split(\".\")[0])\r\n                this.dataHisEx = d.data\r\n            }\r\n        })\r\n    },\r\n    \r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    formatDateEx(value){\r\n      if (value) {\r\n          return moment(String(value)).format('MM/DD/YYYY HH:mm:ss')\r\n      }\r\n    },\r\n    \r\n  },\r\n\r\n  mounted() {\r\n      this.getExChange()\r\n      this.getBalanceWallet()\r\n  },\r\n}\r\n",null]}