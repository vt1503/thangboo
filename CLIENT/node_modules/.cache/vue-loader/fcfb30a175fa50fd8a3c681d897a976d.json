{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/email/EmailView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/email/EmailView.vue","mtime":1573138056000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport EmailMailCard from \"./EmailMailCard.vue\"\n\nexport default {\n  props: {\n    emailTags: {\n      type: Array,\n      required: true,\n    },\n    openMailId: {\n      required: true,\n      validator: prop => typeof prop === 'number' || prop === null\n    },\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    mailFilter: {\n      type: String\n    }\n  },\n  data() {\n    return {\n      showThread: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.50,\n      },\n    }\n  },\n  watch: {\n    isSidebarActive(value) {\n      if (!value) {\n        this.$emit('closeSidebar')\n        setTimeout(() => {\n          this.showThread = false\n        }, 500)\n      }\n    },\n  },\n  computed: {\n    currentMail() {\n      return this.$store.getters['email/getMail'](this.openMailId)\n    },\n    labelColor() {\n      return (label) => {\n        const tags = this.$store.state.email.mailTags\n        return tags.find((tag) => {\n          return tag.value == label\n        }).color\n      }\n    },\n    currentMailLabels: {\n      get() {\n        return this.currentMail.labels\n      },\n      set(value) {\n        if (Array.isArray(value)) {\n          const payload = { mailId: this.openMailId, labels: value }\n          this.$store.dispatch('email/setLabels', payload)\n        }\n      }\n    }\n  },\n  methods: {\n    toggleIsStarred() {\n      const payload = { mailId: this.openMailId, value: !this.currentMail.isStarred }\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\n    },\n    moveTo(to) {\n      this.$emit('closeSidebar')\n      this.$emit('moveTo', to)\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n    EmailMailCard\n  },\n  updated() {\n    if (!this.currentMail) return\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', { emailIds: [this.openMailId], unread: false });\n  },\n}\n\n",null]}