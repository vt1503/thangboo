{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/account/slidebar/DataViewSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/account/slidebar/DataViewSidebar.vue","mtime":1640931778000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport SETTINGS from '../../../../settings.json'\r\n\r\nexport default {\r\n  props: {\r\n    isSidebarActive: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    data: {\r\n      type: Object,\r\n      default: () => {},\r\n    }\r\n  },\r\n  watch: {\r\n    isSidebarActive(val) {\r\n      if(!val) return\r\n      if(Object.entries(this.data).length === 0) {\r\n        this.initValues()\r\n        this.$validator.reset()\r\n      }else {\r\n        let { email, id, nick_name, first_name, last_name, money_vn, money_btc, money_eth, money_usdt, profile_image, type, vip_user, super_user, level_vip } = JSON.parse(JSON.stringify(this.data))\r\n   \r\n        this.dataId = id\r\n        this.dataEmail = email\r\n        this.dataNick = nick_name\r\n        this.dataFirstName = first_name\r\n        this.dataLastName = last_name\r\n        this.dataMoneyVN = money_vn\r\n        this.dataMoneyBTC = this.formatPrice(money_btc, 6)\r\n        this.dataMoneyETH = this.formatPrice(money_eth, 4)\r\n        this.dataMoneyUSDT = this.formatPrice(money_usdt, 2)\r\n        this.dataImg = profile_image\r\n        this.dataPassword = ''\r\n        this.dataPermission = vip_user \r\n        this.superUser = super_user\r\n        this.dataType = type\r\n        this.addDataMoneyVN = 0\r\n        this.addDataMoneyBTC = this.formatPrice(0, 6)\r\n        this.addDataMoneyETH = this.formatPrice(0, 4)\r\n        this.addDataMoneyUSDT = this.formatPrice(0, 2)\r\n        this.isLevelVIP = level_vip;\r\n        this.initValues()\r\n      }\r\n      // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n\r\n    //   dataId: null,\r\n    //   dataName: \"\",\r\n    //   dataCategory: null,\r\n    //   dataImg: null,\r\n    //   dataOrder_status: \"pending\",\r\n    //   dataPrice: 0,\r\n        dm: SETTINGS.BASE_URL,\r\n\r\n        superUser: 0,\r\n\r\n        dataId: null,\r\n        dataEmail: '',\r\n        dataNick: '',\r\n        dataFirstName: '',\r\n        dataLastName: '',\r\n        dataMoneyVN: 0,\r\n        dataMoneyBTC: 0,\r\n        dataMoneyETH: 0,\r\n        dataMoneyUSDT: 0,\r\n        dataImg: null,\r\n        dataPassword: '',\r\n        dataPermission: 0,\r\n        dataType: null,\r\n        addDataMoneyVN: 0,\r\n        addDataMoneyBTC: 0,\r\n        addDataMoneyETH: 0,\r\n        addDataMoneyUSDT: 0,\r\n\r\n      category_choices: [\r\n        //{text:'Quản trị viên',value: 1},\r\n        {text:'Đại lý ( VIP )', value: 1},\r\n        {text:'Thành viên', value: 0}\r\n      ],\r\n\r\n      category_level: [\r\n        {text:'Cấp 0', value: 0},\r\n        {text:'Cấp 1', value: 1},\r\n        {text:'Cấp 2', value: 2},\r\n        {text:'Cấp 3', value: 3},\r\n        {text:'Cấp 4', value: 4},\r\n        {text:'Cấp 5', value: 5},\r\n        {text:'Cấp 6', value: 6},\r\n        {text:'Cấp 7', value: 7}\r\n      ],\r\n\r\n      isLevelVIP: 0,\r\n\r\n    //   order_status_choices: [\r\n    //     {text:'Pending',value:'pending'},\r\n    //     {text:'Canceled',value:'canceled'},\r\n    //     {text:'Delivered',value:'delivered'},\r\n    //     {text:'On Hold',value:'on_hold'}\r\n    //   ],\r\n      settings: { // perfectscrollbar settings\r\n          maxScrollbarLength: 60,\r\n          wheelSpeed: .60,\r\n      },\r\n    }\r\n  },\r\n//   filters: {\r\n//     currencydecimal (val) {\r\n//       if(val == 'BTC') return val.toFixed(6)\r\n//       if(val == 'ETH') return val.toFixed(4)\r\n//       return val.toFixed(2)\r\n//     }\r\n//   },\r\n  computed: {\r\n    isSidebarActiveLocal: {\r\n      get() {\r\n        return this.isSidebarActive\r\n      },\r\n      set(val) {\r\n        if(!val) {\r\n          this.$emit('closeSidebar')\r\n          // this.$validator.reset()\r\n          // this.initValues()\r\n        }\r\n      }\r\n    },\r\n    isFormValid() {\r\n        if(this.dataType != 'addMoney'){\r\n            return !this.errors.any() && this.dataEmail && this.dataNick && this.dataFirstName && this.dataLastName\r\n        }else{\r\n            return (this.addDataMoneyVN >= 0) && (this.addDataMoneyBTC >= 0) && (this.addDataMoneyETH >= 0) && (this.addDataMoneyUSDT >= 0)\r\n        }\r\n      //return !this.errors.any() && this.dataName && this.dataCategory && (this.dataPrice > 0)\r\n    }\r\n  },\r\n  methods: {\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n    initValues() {\r\n      if(this.data.id) return\r\n        this.dataId = null\r\n        this.dataEmail = ''\r\n        this.dataNick = ''\r\n        this.dataFirstName = ''\r\n        this.dataLastName = ''\r\n        this.dataMoneyVN = 0\r\n        this.dataMoneyBTC = 0\r\n        this.dataMoneyETH = 0\r\n        this.dataMoneyUSDT = 0\r\n        this.superUser = 0\r\n        this.dataImg = null\r\n        this.dataPassword = ''\r\n        this.dataPermission = 0\r\n        this.dataType = null\r\n        this.addDataMoneyVN = 0\r\n        this.addDataMoneyBTC = 0\r\n        this.addDataMoneyETH = 0\r\n        this.addDataMoneyUSDT = 0\r\n    },\r\n    submitDataUpdateMoney(){\r\n        const obj = {\r\n            id: this.dataId,\r\n            nick_name: this.dataNick,\r\n            email: this.dataEmail,\r\n            type: 1, // 1: marketing, 0: member\r\n            money_paypal: 0,\r\n            money_btc: this.addDataMoneyBTC,\r\n            money_eth: this.addDataMoneyETH,\r\n            money_usdt: this.addDataMoneyUSDT, \r\n            money_vn:  this.addDataMoneyVN,\r\n          }\r\n        AuthenticationService.updatePriceMember(obj)\r\n        .then((resp) => {\r\n            if(resp.data.success){\r\n              return this.$vs.notify({\r\n                  text:'Đã cộng tiền thành công cho '+ this.dataNick,\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'});\r\n              }else{\r\n                if(!resp.data.l){\r\n                  return this.$vs.notify({\r\n                    text: 'Thời gian đăng nhập đã hết, vui lòng đăng nhập lại để sử dụng',\r\n                    color:'danger',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-alert-circle'});\r\n                }\r\n                return this.$vs.notify({\r\n                  text: resp.data.message,\r\n                  color:'danger',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-alert-circle'});\r\n              }\r\n        })\r\n    },\r\n    submitDataUpdateUser() {\r\n      this.$validator.validateAll().then(result => {\r\n        if (result) {\r\n            const obj = {\r\n              id: this.dataId,\r\n              nick_name: this.dataNick,\r\n              first_name: this.dataFirstName,\r\n              last_name: this.dataLastName,\r\n              email: this.dataEmail,\r\n              vip_user: this.dataPermission,\r\n              level_vip: this.isLevelVIP,\r\n              active: 1\r\n            }\r\n            if(this.dataPassword != ''){\r\n              obj.password = this.dataPassword\r\n            }\r\n            // thêm mới tài khoản\r\n            if(Object.entries(this.data).length == 0){\r\n                AuthenticationService.checkEmail(this.dataEmail)\r\n                .then((resp) => {\r\n                  if(resp.data.success){\r\n                      return this.$vs.notify({\r\n                        text: 'Email này đã tồn tại',\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-circle'});\r\n                  }else{\r\n                     AuthenticationService.createUser(obj)\r\n                        .then((resp) => {\r\n                          if(resp.data.success){\r\n                            return this.$vs.notify({\r\n                                title: this.dataEmail,\r\n                                text:'Bạn đã tạo thành công',\r\n                                color:'success',\r\n                                iconPack: 'feather',\r\n                                icon:'icon-check'});\r\n                            }else{\r\n                              return this.$vs.notify({\r\n                                text: resp.data.message,\r\n                                color:'danger',\r\n                                iconPack: 'feather',\r\n                                icon:'icon-alert-circle'});\r\n                            }\r\n                      })\r\n                  }\r\n                });\r\n               \r\n            }else{ // cập nhật tài khoản\r\n                AuthenticationService.updateMember(obj)\r\n                .then((resp) => {\r\n                  if(resp.data.success){\r\n                    return this.$vs.notify({\r\n                        text:'Đã cập nhập thông tin thành công cho '+ this.dataNick,\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'});\r\n                    }else{\r\n                      return this.$vs.notify({\r\n                        text: resp.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-circle'});\r\n                    }\r\n              })\r\n            }\r\n            \r\n        }\r\n          \r\n      })\r\n      \r\n    //   this.$validator.validateAll().then(result => {\r\n    //       if (result) {\r\n    //         const obj = {\r\n    //           id: this.dataId,\r\n    //           name: this.dataName,\r\n    //           img: this.dataImg,\r\n    //           category: this.dataCategory,\r\n    //           order_status: this.dataOrder_status,\r\n    //           price: this.dataPrice\r\n    //         }\r\n\r\n    //         if(this.dataId !== null && this.dataId >= 0) {\r\n    //           this.$store.dispatch(\"dataList/updateItem\", obj).catch(err => { console.error(err) })\r\n    //         }else{\r\n    //           delete obj.id\r\n    //           obj.popularity = 0\r\n    //           this.$store.dispatch(\"dataList/addItem\", obj).catch(err => { console.error(err) })\r\n    //         }\r\n\r\n    //         this.$emit('closeSidebar')\r\n    //         this.initValues()\r\n    //       }\r\n    //   })\r\n    },\r\n    updateCurrImg(input) {\r\n      if (input.target.files && input.target.files[0]) {\r\n        var reader = new FileReader()\r\n        reader.onload = e => {\r\n          this.dataImg = e.target.result\r\n        }\r\n        reader.readAsDataURL(input.target.files[0])\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    VuePerfectScrollbar,\r\n  }\r\n}\r\n",null]}