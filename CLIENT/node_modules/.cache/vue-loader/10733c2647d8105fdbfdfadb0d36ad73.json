{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/trading/Wallet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/trading/Wallet.vue","mtime":1649936361955},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nvar connectionNAP = false;\r\n//import NapTien from '@/pages/trade/slidebar/NapTien.vue'\r\n//import RutTien from '@/pages/trade/slidebar/RutTienS.vue'\r\nimport NapRutTien from '@/pages/trade/slidebar/NapRutTien.vue'\r\nimport getData from '@/pages/trade/navbar/components/data.json'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport getSetSys  from '@/services/settingSys.json'\r\nimport moment from 'moment'\r\nimport SETTINGS from '../../../settings.json'\r\n\r\nexport default {\r\ncomponents: {\r\n    //NapTien,\r\n    //RutTien,\r\n    NapRutTien\r\n},\r\n  data () {\r\n    return {\r\n        typeShow: '',\r\n        timeShow: '',\r\n        valueShow: '',\r\n        descriptShow: '',\r\n        noteShow: '',\r\n        statusShow: '',\r\n\r\n        getSetSys: getSetSys,\r\n\r\n        popupActiveNRTien: false,\r\n        popupBillActive: false,\r\n\r\n        showVC: true,\r\n        showVGD: false,\r\n        showHisUSD: true,\r\n        showHisHH: false,\r\n\r\n        blObj: getData,\r\n        textWalletHtml: '<span class=\"mr-1 color-blue uppercase green\">USDT</span> <span>Wallet</span>',\r\n        textAccLive: 'Tài khoản Thực',\r\n        amountAcc: 0,\r\n        amountAccLive: 0,\r\n        typeChange: false, // false: Wall to Live, true: Live to Wallet\r\n        enterAmount: '',\r\n        popupTransferActive: false,\r\n        currentxUSDT: 1,\r\n        currentxHH: 1,\r\n        currentxWGD: 1,\r\n        email: '',\r\n        password: '',\r\n        error: null,\r\n        addSidebarNapTien: false,\r\n        addSidebarRutTien: false,\r\n        balanceUser: 0,\r\n\r\n        balanceUSDT: 0,\r\n        balanceETH: 0,\r\n        balanceBTC: 0,\r\n        balancePaypal: 0,\r\n        \r\n        isLoading: false,\r\n        dataHisWallet: [],\r\n        totalRUSDT: 0,\r\n        dataHisWalletHoaHong: [],\r\n        totalRHH: 0,\r\n        dataHisWalletWGD: [],\r\n        totalRWGD: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    //   giaTriUocTinh(){\r\n    //       return this.formatPrice(getSetSys.quotePriceUSDT + getSetSys.quotePriceETH + getSetSys.quotePriceBTC + getSetSys.quotePricePAYPAL, 2)\r\n    //   },\r\n        balanceForUser(){\r\n            return getData.balance;\r\n        }\r\n  },\r\n  methods: {\r\n\r\n    popupBill(tr){\r\n\r\n        this.popupBillActive = true;\r\n\r\n        this.timeShow = this.formatDateWallet(tr.created_at);\r\n\r\n        if(getData.displayName.toUpperCase() == tr.from_u.toUpperCase()){\r\n            this.valueShow = tr.type_key == 'rt' || tr.type_key == 'ct' || tr.type_key == 'ctsa' || tr.type_key == 'nn' || tr.type_key == 'mv' ? '-$'+ this.formatPrice(tr.amount, 2) : '+$' + this.formatPrice(tr.amount, 2);\r\n        }else if(getData.displayName.toUpperCase() == tr.to_u.toUpperCase()){\r\n            this.valueShow = '+$'+this.formatPrice(tr.amount, 2);\r\n        }\r\n\r\n        switch(tr.type_key){\r\n            case 'rt':\r\n                this.typeShow = 'Rút tiền';\r\n                break;\r\n            case 'nt':\r\n                this.typeShow = 'Nạp tiền' + tr.paypal_order_id ? 'Paypal' : '';\r\n                break;\r\n            case 'nn':\r\n                this.typeShow = 'Nạp nhanh';\r\n                break;\r\n            case 'mv':\r\n                this.typeShow = 'Mua VIP';\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if(tr.type_key == 'ct' || tr.type_key == 'ctsa' || tr.type_key == 'ctas'){\r\n            this.typeShow = 'Chuyển tiền';\r\n        }\r\n\r\n        this.descriptShow = tr.type_key == 'ctsa' || tr.type_key == 'ctas' ? '' : tr.from_u + ': ';\r\n        this.descriptShow = this.descriptShow + tr.type;\r\n        this.noteShow = tr.note ? tr.note : '-';\r\n        if(tr.status == 1){\r\n            this.statusShow = 'Hoàn tất';\r\n        }else if(tr.status == 0){\r\n            this.statusShow = 'Đợi';\r\n        }else if(tr.status == 0){\r\n            this.statusShow = 'Hủy';\r\n        }\r\n        \r\n   \r\n    \r\n    },\r\n\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    showPopNapRutTien(){\r\n        this.popupActiveNRTien = true\r\n    },\r\n\r\n    // viewNapTien(){ \r\n    //   this.toggleDataSidebarNapTien(true)\r\n    // },\r\n\r\n    // viewRutTien(){ \r\n    //   this.toggleDataSidebarRutTien(true)\r\n    // },\r\n\r\n    toggleDataSidebarNapTien(val=false) {\r\n      this.addSidebarNapTien = val\r\n    },\r\n\r\n    toggleDataSidebarRutTien(val=false) {\r\n      this.addSidebarRutTien = val\r\n    },\r\n\r\n    changeTransMoney(){\r\n        \r\n        \r\n        if(this.typeChange){\r\n            // Live to Wallet  \r\n            this.typeChange = false\r\n\r\n            let b = this.textWalletHtml\r\n            let a = this.textAccLive\r\n            let d = getData.balance\r\n            let c = getData.blLive\r\n\r\n            this.textAccLive = b\r\n            this.textWalletHtml = a\r\n            this.amountAcc = d\r\n            this.amountAccLive = c\r\n\r\n        }else{ \r\n            // Live to Wallet\r\n            this.typeChange = true\r\n\r\n            let a = this.textWalletHtml\r\n            let b = this.textAccLive\r\n            let c = getData.balance\r\n            let d = getData.blLive\r\n\r\n\r\n            this.textAccLive = a\r\n            this.textWalletHtml = b\r\n            this.amountAcc = d\r\n            this.amountAccLive = c\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n    clickReloadMoneyDemo(){\r\n        AuthenticationService.reloadMoneyDemo()\r\n          .then((res) => {\r\n              if(res.data.success){\r\n                  this.blObj.blDemo = 1000\r\n\r\n                  return this.$vs.notify({\r\n                      text: 'Tài khoản Demo đã nạp.',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check',\r\n                      color: 'success',\r\n                      position:'top-right',\r\n                  });\r\n              }\r\n          })\r\n    },\r\n\r\n    enterAllMoney(){\r\n        if(this.typeChange){\r\n            // nếu true thì live to wallet\r\n\r\n            this.enterAmount = getData.blLive\r\n\r\n        }else{\r\n            // wallet to live\r\n\r\n            this.enterAmount = getData.balance\r\n\r\n        }\r\n    },\r\n\r\n\r\n    clickTransMoney(){\r\n        let amount = this.enterAmount.toString()\r\n        amount = this.replaceAll(amount, ',', '')\r\n        amount = this.replaceAll(amount.toString(), '-', '')\r\n        \r\n        if(!this.isNumber(amount) || amount <= 0){\r\n            return this.$vs.notify({\r\n                text:'Giá trị không hợp lệ',\r\n                color:'danger',\r\n                position:'top-right',\r\n                iconPack: 'feather',\r\n                icon:'icon-x-circle'})\r\n        }\r\n\r\n\r\n        if(this.typeChange){\r\n            // nếu true thì live to wallet\r\n\r\n             // gửi tiền từ live tới tài khoản chính\r\n            let obj = {\r\n                email: getData.email,\r\n                m: amount\r\n            }\r\n\r\n            AuthenticationService.sendMoneyLiveToUsdt(obj)\r\n            .then((res) => {\r\n                if(res.data.success){\r\n                    \r\n                    getData.blLive -= amount\r\n                    getData.balance += amount\r\n\r\n                    this.amountAcc = getData.blLive\r\n                    this.amountAccLive = getData.balance\r\n\r\n                     // reload lại lịch sử\r\n                    this.getListHisTradeWGD()\r\n\r\n                    return this.$vs.notify({\r\n                        text:'Chuyển tiền thành công',\r\n                        color:'success',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'\r\n                        })\r\n                }else{\r\n                     return this.$vs.notify({\r\n                        text:'Số dư của bạn không đủ',\r\n                        color:'danger',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-x-circle'\r\n                    })\r\n                }\r\n            })\r\n\r\n        }else{\r\n            // wallet to live\r\n\r\n            // gửi tiền từ tài khoản chính tới live\r\n            let obj = {\r\n                email: getData.email,\r\n                m: amount\r\n            }\r\n\r\n            AuthenticationService.sendMoneyUsdtToLive(obj)\r\n            .then((res) => {\r\n                if(res.data.success){\r\n\r\n                    getData.blLive += amount\r\n                    getData.balance -= amount\r\n\r\n                    this.amountAcc = getData.balance\r\n                    this.amountAccLive = getData.blLive\r\n\r\n                    // reload lại lịch sử\r\n                    this.getListHisTradeWGD()\r\n\r\n                    return this.$vs.notify({\r\n                        text:'Chuyển tiền thành công',\r\n                        color:'success',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'\r\n                        })\r\n                }else{\r\n                     return this.$vs.notify({\r\n                        text:'Số dư của bạn không đủ',\r\n                        color:'danger',\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-x-circle'\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    getListHisTrade(){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWallet()\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWallet = res.data.data\r\n                let c = (res.data.count / 10).toString()\r\n                //this.totalRUSDT = Number(c.split(\".\")[0])\r\n                this.totalRUSDT = Math.ceil(c);\r\n            }\r\n        })\r\n    },\r\n\r\n    clickPageUSDT(page){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWalletNumber(page)\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWallet = res.data.data\r\n            }\r\n        })\r\n    },\r\n\r\n    getListHisTradeHH(){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWalletHH()\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWalletHoaHong = res.data.data\r\n                let c = (res.data.count / 10).toString()\r\n                //this.totalRHH = Number(c.split(\".\")[0])\r\n                this.totalRHH = Math.ceil(c);\r\n            }\r\n        })\r\n    },\r\n\r\n    clickPageHH(page){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWalletHHNumber(page)\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWalletHoaHong = res.data.data\r\n            }\r\n        })\r\n    },\r\n\r\n    getListHisTradeWGD(){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWalletWGD()\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWalletWGD = res.data.data\r\n                let c = (res.data.count / 10).toString()\r\n                this.totalRWGD = Number(c.split(\".\")[0])\r\n            }\r\n        })\r\n    },\r\n\r\n    clickPageWGD(page){\r\n        this.isLoading = true\r\n        AuthenticationService.getListHisTradeWalletWGDNumber(page)\r\n        .then((res) => {\r\n            if(res.data.success){\r\n                this.isLoading = false\r\n                this.dataHisWalletWGD = res.data.data\r\n            }\r\n        })\r\n    },\r\n\r\n    replaceAll(str, find, replace) {\r\n        return Number(str.replace(new RegExp(find, 'g'), replace));\r\n    },\r\n\r\n    isNumber(value){\r\n        return typeof value === 'number' && isFinite(value);\r\n    },\r\n\r\n    formatDateWallet(value){\r\n      if (value) {\r\n          return moment(String(value)).format('MM/DD/YYYY HH:mm:ss')\r\n      }\r\n    },\r\n\r\n\r\n    getBalanceWallet(){\r\n        AuthenticationService.getBalanceWallet()\r\n        .then((res) => {\r\n            let d = res.data\r\n            if(d.success == 3 || d.success == 4){\r\n                localStorage.removeItem('token')\r\n                this.$router.push('/login').catch(() => {})\r\n                return\r\n            }\r\n            if(d.success){\r\n                let mU = d.data.usdt\r\n                let mE = d.data.eth\r\n                let mB = d.data.btc\r\n                let mP = d.data.paypal\r\n               \r\n                this.balanceUSDT = mU;\r\n                this.balanceETH = mE;\r\n                this.balanceBTC = mB;\r\n                this.balancePaypal = mP;\r\n\r\n                // mặc định hiển thị tiền đầu vào\r\n                this.getAmount = this.balancePaypal\r\n            }\r\n        })\r\n    },\r\n\r\n    getSysWallet(){\r\n        \r\n        AuthenticationService.getSetupWallet()\r\n        .then((res) => {\r\n            let g = res.data.data\r\n            getSetSys.quotePriceUSDT = this.replaceAll(this.formatPrice(g.qUSDT, 2), ',', '')// giá sấp sĩ USD\r\n            getSetSys.quotePriceETH = this.replaceAll(this.formatPrice(g.qETH, 4), ',', '') // giá sấp sĩ USD\r\n            getSetSys.quotePriceBTC = this.replaceAll(this.formatPrice(g.qBTC, 6), ',', '') // giá sấp sĩ USD\r\n            getSetSys.quotePricePAYPAL = this.replaceAll(this.formatPrice(g.qPaypal, 2), ',', '') //  giá sấp sĩ USD\r\n            \r\n            getSetSys.typeCurrUseSys = g.tCUseSys // đồng tiền tệ sử dụng trong hệ thống\r\n\r\n            getSetSys.minDepositBTC = g.mDBTC // nạp tiền tối thiểu\r\n            getSetSys.minDepositETH = g.mDETH // nạp tiền tối thiểu\r\n            getSetSys.minDepositUSDT = g.mDUSDT // nạp tiền tối thiểu\r\n            getSetSys.minDepositPaypal = g.mDPaypal // nạp tiền tối thiểu\r\n\r\n            getSetSys.minWithdrawalBTC = g.mWBTC // rút tiền tối thiểu\r\n            getSetSys.minWithdrawalETH = g.mWETH // rút tiền tối thiểu\r\n            getSetSys.minWithdrawalUSDT = g.mWUSDT // rút tiền tối thiểu\r\n            getSetSys.minWithdrawalPaypal = g.mWPaypal // rút tiền tối thiểu\r\n\r\n            getSetSys.isActiveWalletPaypal = g.iAWPaypal // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\r\n            getSetSys.isActiveWalletETH = g.iAWETH // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\r\n            getSetSys.isActiveWalletUSDT = g.iAWUSDT // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\r\n            getSetSys.isActiveWalletBTC = g.iAWBTC // Bật / tắt đồng COIN sử dụng nạp và gửi tiền trong hệ thống\r\n\r\n            getSetSys.feeRutPaypalNoiBo = g.fDPaypalNB\r\n            getSetSys.feeRutPaypalAcc = g.fDPaypalAcc\r\n            getSetSys.feeRutBTCNoiBo = g.fDBTCNB\r\n            getSetSys.feeRutBTCAcc = g.fDBTCAcc\r\n            getSetSys.feeRutETHNoiBo = g.fDETHNB\r\n            getSetSys.feeRutETHERC20 = g.fDETHERC20\r\n            getSetSys.feeRutUSDTNoiBo = g.fDUSDTNB\r\n            getSetSys.feeRutUSDTBEP20 = g.fDUSDTBEP20\r\n            getSetSys.feeRutUSDTERC20 = g.fDUSDTERC20\r\n\r\n        })\r\n    },\r\n\r\n\r\n    sendMessage(message) {\r\n        this.connectionNAP.send(JSON.stringify(message));\r\n    },\r\n\r\n    getInfoUser(){\r\n        this.sendMessage({type: 'accountDetail', data: {email: getData.email}});\r\n    },\r\n    onWindowLoad(){\r\n        this.getInfoUser();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getSysWallet();\r\n\r\n    this.getListHisTrade();\r\n    setTimeout(() => {\r\n        this.getListHisTrade();\r\n    }, 1000);\r\n    this.getListHisTradeWGD();\r\n    this.getBalanceWallet();\r\n  },\r\n\r\n\r\n  created() {\r\n      this.amountAcc = getData.balance;\r\n      this.amountAccLive = getData.blLive;\r\n\r\n      if(!connectionNAP){\r\n            connectionNAP = true;\r\n            this.connectionNAP = new WebSocket(SETTINGS.BASE_URL_SOCKET_NAP);\r\n\r\n            this.connectionNAP.onopen = function() {\r\n                //console.log(\"Successfully connected to the echo websocket server...\")\r\n                this.onWindowLoad();\r\n            }.bind(this);\r\n         \r\n            this.connectionNAP.onmessage = function(event) {\r\n                let data = JSON.parse(event.data);\r\n\r\n                if(data.type === 'mess'){\r\n                    let dl = data.data;\r\n                    \r\n                    this.amountAcc += dl.usd*1;\r\n                    getData.balance += dl.usd*1;\r\n                    this.balanceUSDT += dl.usd*1;\r\n               \r\n                    return this.$vs.notify({\r\n                        text: dl.mess,\r\n                        color: dl.style,\r\n                        position:'top-right',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-x-circle'});\r\n                }\r\n            }.bind(this);\r\n      }\r\n      \r\n\r\n\r\n  },\r\n}\r\n",null]}