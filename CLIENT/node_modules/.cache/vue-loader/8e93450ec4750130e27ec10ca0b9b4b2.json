{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/components/navbar/components/NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/components/navbar/components/NotificationDropDown.vue","mtime":1571653082000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  components: {\n    VuePerfectScrollbar\n  },\n  data() {\n    return {\n      unreadNotifications: [\n          {\n            index    : 0,\n            title    : 'New Message',\n            msg      : 'Are your going to meet me tonight?',\n            icon     : 'MessageSquareIcon',\n            time     : this.randomDate({sec: 10}),\n            category : 'primary'\n          },\n          { index    : 1,\n            title    : 'New Order Recieved',\n            msg      : 'You got new order of goods.',\n            icon     : 'PackageIcon',\n            time     : this.randomDate({sec: 40}),\n            category : 'success'\n          },\n          { index    : 2,\n            title    : 'Server Limit Reached!',\n            msg      : 'Server have 99% CPU usage.',\n            icon     : 'AlertOctagonIcon',\n            time     : this.randomDate({min: 1}),\n            category : 'danger'\n          },\n          { index    : 3,\n            title    : 'New Mail From Peter',\n            msg      : 'Cake sesame snaps cupcake',\n            icon     : 'MailIcon',\n            time     : this.randomDate({min: 6}),\n            category : 'primary'\n          },\n          { index    : 4,\n            title    : 'Bruce\\'s Party',\n            msg      : 'Chocolate cake oat cake tiramisu',\n            icon     : 'CalendarIcon',\n            time     : this.randomDate({hr: 2}),\n            category : 'warning'\n          },\n      ],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: .60,\n      },\n    }\n  },\n  methods: {\n    elapsedTime(startTime) {\n      let x        = new Date(startTime)\n      let now      = new Date()\n      var timeDiff = now - x\n      timeDiff    /= 1000\n\n      var seconds = Math.round(timeDiff)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      var minutes = Math.round(timeDiff % 60)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      var hours   = Math.round(timeDiff % 24)\n      timeDiff    = Math.floor(timeDiff / 24)\n\n      var days    = Math.round(timeDiff % 365)\n      timeDiff    = Math.floor(timeDiff / 365)\n\n      var years   = timeDiff\n\n      if (years > 0) {\n        return years + (years > 1 ? ' Years ' : ' Year ') + 'ago'\n      } else if (days > 0) {\n        return days + (days > 1 ? ' Days ' : ' Day ') + 'ago'\n      } else if (hours > 0) {\n        return hours + (hours > 1 ? ' Hrs ' : ' Hour ') + 'ago'\n      } else if (minutes > 0) {\n        return minutes + (minutes > 1 ? ' Mins ' : ' Min ') + 'ago'\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\n      }\n\n      return 'Just Now'\n    },\n    // Method for creating dummy notification time\n    randomDate({ hr, min, sec }) {\n      let date = new Date()\n\n      if (hr) date.setHours(date.getHours() - hr)\n      if (min) date.setMinutes(date.getMinutes() - min)\n      if (sec) date.setSeconds(date.getSeconds() - sec)\n\n      return date\n    }\n  }\n}\n\n",null]}