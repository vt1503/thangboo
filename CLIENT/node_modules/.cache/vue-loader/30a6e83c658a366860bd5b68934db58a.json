{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/layouts/tool/EditKetQua.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/layouts/tool/EditKetQua.vue","mtime":1649894014944},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport SETTINGS from '../../../settings.json'\r\n\r\nexport default {\r\n  components: {\r\n  },\r\n  data() {\r\n    return {\r\n      AMOUNTBECAU_MIN: -30,\r\n      AMOUNTBECAU_MAX: 400,\r\n      PriceBOT: 0,\r\n      checkOnOffBOT: true,\r\n      checkOnOffAnGian: false,  \r\n      checkOnOffBOTGoTien: false,\r\n      radioBC: '',\r\n      productsFake: [ \r\n          // {e: 'admin@gmail.com', uid: 'DS9OR0KGJS', sv: 'BTC/USDT', bet: 'buy', amount: '10' } \r\n        ],\r\n      itemsPerPage: 10,\r\n      isMounted: false,\r\n\r\n      countDown: 0,\r\n      typeOder: 'Mở',\r\n\r\n      price_buy: 0,\r\n      price_sell: 0,\r\n      price_buy_mkt: 0,\r\n      price_sell_mkt: 0,\r\n      price_total_mkt: 0,\r\n      price_total: 0,\r\n\r\n      price_play_buy: 0,\r\n      price_play_sell: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    currentPage() {\r\n      if(this.isMounted) {\r\n        return this.$refs.table.currentx\r\n      }\r\n      return 0\r\n    },\r\n    products() {\r\n      return this.productsFake\r\n    },\r\n    queriedItems() {\r\n      return this.$refs.table ? this.$refs.table.queriedResults.length : this.productsFake.length\r\n    }\r\n  },\r\n  watch:{\r\n  \r\n  },\r\n  methods: {\r\n\r\n    sbAmountBeCauMin(){\r\n      this.sendMessage({type: 'editGL', data: {type: 'WRITE_AMOUNT_NEGA_AMOUNT_BREAK_BRIDGE', AMOUNT: this.AMOUNTBECAU_MIN}});\r\n      return this.$vs.notify({\r\n                text:'Đã thay đổi thành '+this.AMOUNTBECAU_MIN,\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n    },\r\n\r\n\r\n    sbAmountBeCauMax(){\r\n      this.sendMessage({type: 'editGL', data: {type: 'WRITE_AMOUNT_MAX_BREAK_BRIDGE', AMOUNT: this.AMOUNTBECAU_MAX}});\r\n      return this.$vs.notify({\r\n                text:'Đã thay đổi thành '+this.AMOUNTBECAU_MAX,\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n    },\r\n\r\n    changeBOTOnOff(){   \r\n\r\n        this.sendMessage({type: 'editGL', data: {type: 'BOT'}})\r\n\r\n        if(this.checkOnOffBOT){\r\n\r\n            return this.$vs.notify({\r\n                text:'BOT đã được TẮT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }else{\r\n            \r\n            return this.$vs.notify({\r\n                text:'BOT đã được BẬT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }\r\n        \r\n    },\r\n\r\n    changeBetOnOff(){\r\n        this.radioBC = 'off'\r\n        \r\n        this.checkOnOffBOTGoTien = false;\r\n\r\n        if(this.checkOnOffAnGian){\r\n   \r\n            this.sendMessage({type: 'editGL', data: {type: 'BTC_OFF'}})\r\n\r\n            return this.$vs.notify({\r\n                text:'Đã thay đổi thành TẮT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }else{\r\n            this.sendMessage({type: 'editGL', data: {type: 'BTC_LESS'}})\r\n\r\n            return this.$vs.notify({\r\n                text:'Đã thay đổi thành BẬT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }\r\n        \r\n    },\r\n\r\n    reloadAmTien(){\r\n      this.sendMessage({type: 'editGL', data: {type: 'GO_TIEN_OFF'}})\r\n    },\r\n\r\n    changeMode(val){\r\n      this.checkOnOffAnGian = false  \r\n\r\n      if(val == 'buy'){\r\n        this.sendMessage({type: 'editGL', data: {type: 'BTC_BUY'}})\r\n        val = 'MUA'\r\n      } \r\n      if(val == 'sell'){\r\n        this.sendMessage({type: 'editGL', data: {type: 'BTC_SELL'}})\r\n        val = 'BÁN'\r\n      } \r\n      if(val == 'off'){\r\n        this.sendMessage({type: 'editGL', data: {type: 'BTC_OFF'}})\r\n        val = 'TẮT' \r\n      }  \r\n\r\n  \r\n      return this.$vs.notify({\r\n            text:'Đã thay đổi thành '+val,\r\n            color:'success',\r\n            position:'top-center',\r\n            iconPack: 'feather',\r\n            icon:'icon-message-square'});\r\n    },\r\n\r\n    formatPrice(value, minimum) {\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            //style: 'currency',\r\n            //currency: '',\r\n            minimumFractionDigits: minimum\r\n        });\r\n        return formatter.format(value);\r\n    },\r\n\r\n    // getAmountDecimal(type, money){\r\n    //   let cur = '$'\r\n    //   let coin = type.toUpperCase()\r\n    //   if(coin == 'BTC') return cur+money.toFixed(6)\r\n    //   if(coin == 'ETH') return cur+money.toFixed(4)\r\n    //   return cur+money.toFixed(2)\r\n    // },\r\n\r\n    toggleDataSidebar(val=false) {\r\n      this.addNewDataSidebar = val\r\n    },\r\n\r\n\r\n    sendMessage(message) {\r\n      this.connection.send(JSON.stringify(message));\r\n    },\r\n\r\n    changeRadioGetSV(dl){\r\n      this.radioBC = ''\r\n\r\n      if(dl.BTC.BUY) {\r\n          this.radioBC = 'buy'\r\n      }else if(dl.BTC.SELL) {\r\n          this.radioBC = 'sell'\r\n      }else if(!dl.BTC.BUY && !dl.BTC.SELL){\r\n          this.radioBC = 'off'\r\n      }\r\n\r\n      if(dl.LESS_WIN){\r\n          this.checkOnOffAnGian = true\r\n      }else{\r\n          this.checkOnOffAnGian = false\r\n      }\r\n\r\n      if(dl.PRICE_FUND_ON_OFF){\r\n          this.checkOnOffBOTGoTien = true\r\n      }else{\r\n          this.checkOnOffBOTGoTien = false\r\n      }\r\n\r\n      if(dl.BOT){\r\n          this.checkOnOffBOT = true\r\n      }else{\r\n          this.checkOnOffBOT = false\r\n      }\r\n  \r\n      \r\n    },\r\n\r\n    \r\n\r\n    changeBOTGoTienOnOff(){\r\n\r\n        \r\n        this.checkOnOffAnGian = false;\r\n        this.radioBC = 'off'\r\n\r\n        this.sendMessage({type: 'editGL', data: {type: 'BOT_GO_TIEN'}})\r\n\r\n        if(this.checkOnOffBOTGoTien){\r\n \r\n            return this.$vs.notify({\r\n                text:'BOT gỡ tiền đã được TẮT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }else{\r\n            \r\n            return this.$vs.notify({\r\n                text:'BOT gỡ tiền đã được BẬT',\r\n                color:'success',\r\n                position:'top-center',\r\n                iconPack: 'feather',\r\n                icon:'icon-message-square'});\r\n        }\r\n\r\n    },\r\n\r\n    sendInfoAdmin(){\r\n      this.sendMessage({type: 'accountDetail', data: {uid: 'ADMIN_BO', email: 'ad999999@gmail.com'}});\r\n    }\r\n\r\n  },\r\n  created() {\r\n    // if(!moduleDataList.isRegistered) {\r\n    //   this.$store.registerModule('dataList', moduleDataList)\r\n    //   moduleDataList.isRegistered = true\r\n    // }\r\n\r\n    //this.$store.registerModule('dataList', this.productsFake);\r\n    \r\n    //this.$store.dispatch(\"dataList/fetchDataListItems\")\r\n    //console.log(this.productsFake);\r\n    //console.log(this.$store.state.dataList);\r\n    var _this = this\r\n    this.connection = new WebSocket(SETTINGS.BASE_URL_SOCKET)\r\n\r\n    this.connection.onopen = function() {\r\n        _this.sendInfoAdmin();\r\n        console.log(\"Successfully connected to the echo websocket server...\")\r\n    }\r\n\r\n\r\n    this.connection.onmessage = function(event) {\r\n\r\n        let data = JSON.parse(event.data)\r\n        let dl = data.data\r\n\r\n        if(data.type === 'allData'){\r\n            _this.countDown = dl.candleClose\r\n            _this.typeOder = dl.type == 'order' ? 'Mở' : 'Đóng';\r\n\r\n            // reset lại số tiền = 0 khi thời gian = 0;\r\n            if(dl.candleClose == 0){\r\n              _this.price_buy = 0;\r\n              _this.price_sell = 0;\r\n              \r\n            }\r\n        }\r\n\r\n        if(data.type === 'getTruck'){\r\n          _this.changeRadioGetSV(dl);\r\n          _this.AMOUNTBECAU_MIN = data.min_am_go;\r\n          _this.AMOUNTBECAU_MAX = data.max_amount_be;\r\n\r\n        }\r\n\r\n        if(data.type === 'truck'){\r\n          _this.productsFake = dl;\r\n          _this.price_buy = _this.formatPrice(data.price_buy, 2);\r\n          _this.price_sell = _this.formatPrice(data.price_sell, 2);\r\n          _this.price_buy_mkt = _this.formatPrice(data.mktBUY, 2);\r\n          _this.price_sell_mkt = _this.formatPrice(data.mktSELL, 2);\r\n          _this.price_total_mkt = _this.formatPrice(data.mktBUY + data.mktSELL, 2);\r\n          \r\n          let tt = ( data.price_buy + data.price_sell ) - (data.mktBUY + data.mktSELL);\r\n\r\n\r\n          _this.price_play_buy = _this.formatPrice(data.price_buy - data.mktBUY, 2);\r\n          _this.price_play_sell = _this.formatPrice(data.price_sell - data.mktSELL, 2);\r\n          _this.price_total = _this.formatPrice(tt, 2);\r\n         \r\n        }\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.isMounted = true;\r\n  }\r\n}\r\n",null]}