{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/DataViewSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/ui-elements/data-list/DataViewSidebar.vue","mtime":1571822968000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: () => {},\n    }\n  },\n  watch: {\n    isSidebarActive(val) {\n      if(!val) return\n      if(Object.entries(this.data).length === 0) {\n        this.initValues()\n        this.$validator.reset()\n      }else {\n        let { category, id, img, name, order_status, price } = JSON.parse(JSON.stringify(this.data))\n        this.dataId = id\n        this.dataCategory = category\n        this.dataImg = img\n        this.dataName = name\n        this.dataOrder_status = order_status\n        this.dataPrice = price\n        this.initValues()\n      }\n      // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n    }\n  },\n  data() {\n    return {\n\n      dataId: null,\n      dataName: \"\",\n      dataCategory: null,\n      dataImg: null,\n      dataOrder_status: \"pending\",\n      dataPrice: 0,\n\n      category_choices: [\n        {text:'Audio',value:'audio'},\n        {text:'Computers',value:'computers'},\n        {text:'Fitness',value:'fitness'},\n        {text:'Appliance',value:'appliance'}\n      ],\n\n      order_status_choices: [\n        {text:'Pending',value:'pending'},\n        {text:'Canceled',value:'canceled'},\n        {text:'Delivered',value:'delivered'},\n        {text:'On Hold',value:'on_hold'}\n      ],\n      settings: { // perfectscrollbar settings\n          maxScrollbarLength: 60,\n          wheelSpeed: .60,\n      },\n    }\n  },\n  computed: {\n    isSidebarActiveLocal: {\n      get() {\n        return this.isSidebarActive\n      },\n      set(val) {\n        if(!val) {\n          this.$emit('closeSidebar')\n          // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    },\n    isFormValid() {\n      return !this.errors.any() && this.dataName && this.dataCategory && (this.dataPrice > 0)\n    }\n  },\n  methods: {\n    initValues() {\n      if(this.data.id) return\n        this.dataId = null\n        this.dataName = \"\"\n        this.dataCategory = null\n        this.dataOrder_status = \"pending\"\n        this.dataPrice = 0\n        this.dataImg = null\n    },\n    submitData() {\n      this.$validator.validateAll().then(result => {\n          if (result) {\n            const obj = {\n              id: this.dataId,\n              name: this.dataName,\n              img: this.dataImg,\n              category: this.dataCategory,\n              order_status: this.dataOrder_status,\n              price: this.dataPrice\n            }\n\n            if(this.dataId !== null && this.dataId >= 0) {\n              this.$store.dispatch(\"dataList/updateItem\", obj).catch(err => { console.error(err) })\n            }else{\n              delete obj.id\n              obj.popularity = 0\n              this.$store.dispatch(\"dataList/addItem\", obj).catch(err => { console.error(err) })\n            }\n\n            this.$emit('closeSidebar')\n            this.initValues()\n          }\n      })\n    },\n    updateCurrImg(input) {\n      if (input.target.files && input.target.files[0]) {\n        var reader = new FileReader()\n        reader.onload = e => {\n          this.dataImg = e.target.result\n        }\n        reader.readAsDataURL(input.target.files[0])\n      }\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n  }\n}\n",null]}