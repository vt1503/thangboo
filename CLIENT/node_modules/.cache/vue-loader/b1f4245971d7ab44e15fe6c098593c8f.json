{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/components/vuesax/loading/LoadingContained.vue?vue&type=template&id=13a4cfac&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/components/vuesax/loading/LoadingContained.vue","mtime":1572081598000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\t<vx-card title=\"Contained\" code-toggler>\n\n\t\t<p>To add a loading within a container, call the <code>$vs.loading()</code> global function passing the <code>container</code> and the <code>scale</code> parameters. When you want to remove it we have <code>$vs.loading.close()</code>, passing the same <code>container</code> parameter</p>\n\n\t\t<vs-alert icon=\"new_releases\" active=\"true\" class=\"mt-5\">\n\t\t\t<p>For the examples, the request or the delay is simulated with <code>setTimeout</code></p>\n\t\t</vs-alert>\n\n\t\t<div class=\"demo-alignment mt-3\">\n\n\t\t\t<vs-button ref=\"loadableButton\" id=\"button-with-loading\" class=\"vs-con-loading__container\" @click=\"openLoadingContained\" type=\"relief\">\n\t\t\t\tButton with Loading\n\t\t\t</vs-button>\n\t\t\t<vs-button @click=\"openLoadingInDiv\" type=\"relief\">Div with Loading</vs-button>\n\n\t\t\t<div class=\"contained-example-container\">\n\t\t\t\t<div id=\"div-with-loading\" class=\"vs-con-loading__container\">Load Me!</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vs-button ref=&quot;loadableButton&quot; id=&quot;button-with-loading&quot; class=&quot;vs-con-loading__container&quot; @click=&quot;openLoadingContained&quot; type=&quot;relief&quot;&gt;\n    Button with Loading\n  &lt;/vs-button&gt;\n  &lt;vs-button @click=&quot;openLoadingInDiv&quot; type=&quot;relief&quot;&gt;Div with Loading&lt;/vs-button&gt;\n\n  &lt;div class=&quot;contained-example-container&quot;&gt;\n    &lt;div id=&quot;div-with-loading&quot; class=&quot;vs-con-loading__container&quot;&gt;Load Me!&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data(){\n    return {\n      backgroundLoading:'primary',\n      colorLoading:'#fff',\n    }\n  },\n  methods:{\n    openLoadingContained(){\n      this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: &quot;#button-with-loading&quot;,\n        scale: 0.45\n      })\n      setTimeout( ()=&gt; {\n        this.$vs.loading.close(&quot;#button-with-loading &gt; .con-vs-loading&quot;)\n      }, 3000);\n    },\n    openLoadingInDiv(){\n      this.$vs.loading({\n        container: '#div-with-loading',\n        scale: 0.6\n      })\n      setTimeout( ()=&gt; {\n        this.$vs.loading.close('#div-with-loading &gt; .con-vs-loading')\n      }, 3000);\n    },\n  }\n}\n&lt;/script&gt;\n\t\t</template>\n\n\t</vx-card>\n",null]}