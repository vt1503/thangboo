{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/TradeMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/TradeMain.vue","mtime":1649935975377},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BackToTop           from 'vue-backtotop'\r\nimport themeConfig         from '@/../themeConfigClient.js'\r\nimport HNavMenu            from \"@/pages/trade/navbar/components/HorizontalNavMenu.vue\"\r\nimport navMenuItems        from \"@/pages/trade/navbar/navMenuItems.js\"\r\nimport TheNavbarHorizontal from '@/pages/trade/navbar/BarHorizontal.vue'\r\nimport TheNavbarVertical   from '@/pages/trade/navbar/BarVertical.vue'\r\nimport VNavMenu            from '@/pages/trade/navbar/components/VerticalNavMenu.vue'\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport getData from '@/pages/trade/navbar/components/data.json'\r\n\r\n//import LogRegForGet  from '@/pages/user/LogRegForGet.vue'\r\n\r\n//import TheCustomizer       from \"@/layouts/components/customizer/TheCustomizer.vue\"\r\n// import TheFooter           from '@/layouts/components/TheFooter.vue'\r\n\r\nconst VxTour = () => import('@/components/VxTour.vue')\r\n\r\nexport default {\r\n    components: { \r\n      //LogRegForGet,\r\n      BackToTop,\r\n      //TheFooter,\r\n      HNavMenu,\r\n      VNavMenu,\r\n      //TheCustomizer,\r\n      TheNavbarHorizontal,\r\n      TheNavbarVertical,\r\n      VxTour\r\n    },\r\n    data() {\r\n        return {\r\n            iSLogin: false,\r\n            navMenuItems      : navMenuItems,\r\n            dynamicWatchers   : {},\r\n            isNavbarDark      : false,\r\n            disableCustomizer : themeConfig.disableCustomizer,\r\n            disableThemeTour  : themeConfig.disableThemeTour,\r\n            hideScrollToTop   : themeConfig.hideScrollToTop,\r\n            navbarColor       : themeConfig.navbarColor || '#fff',\r\n            navbarType        : themeConfig.navbarType  || 'floating',\r\n            footerType        : themeConfig.footerType  || 'static',\r\n            routerTransition  : themeConfig.routerTransition || 'none',\r\n            steps: [\r\n            {\r\n              target  : '#btnVNavMenuMinToggler',\r\n              content : 'Thu gọn.'\r\n            },\r\n            // {\r\n            //   target  : '.vx-navbar__starred-pages',\r\n            //   content : 'Tạo dấu trang của riêng bạn. Bạn cũng có thể sắp xếp lại chúng bằng cách kéo và thả.'\r\n            // },\r\n            // {\r\n            //   target  : '.i18n-locale',\r\n            //   content : 'Bạn có thể thay đổi ngôn ngữ từ đây.'\r\n            // },\r\n            // {\r\n            //   target  : '.navbar-fuzzy-search',\r\n            //   content : 'Thử tìm kiếm để truy cập các trang trong nháy mắt.'\r\n            // },\r\n            // {\r\n            //   target  : '.customizer-btn',\r\n            //   content : 'Tùy chỉnh mẫu dựa trên sở thích của bạn',\r\n            //   params  : {\r\n            //     placement: 'left'\r\n            //   }\r\n            // },\r\n            // {\r\n            //   target  : '.vs-button.buy-now',\r\n            //   content : 'Chúng tôi còn rất nhiều sản phẩm khác ^.^!',\r\n            //   params  : {\r\n            //     placement: 'top'\r\n            //   }\r\n            // },\r\n          ],\r\n        }\r\n    },\r\n    watch: {\r\n    \"$route\"() {\r\n      this.routeTitle = this.$route.meta.pageTitle\r\n      let token = localStorage.hasOwnProperty('tokenUser');\r\n      if(token){\r\n\r\n        this.iSLogin = true;\r\n        AuthenticationService.getInfoUser()\r\n        .then((res) => {\r\n            if(res.data.success == 1){\r\n  \r\n                let dt = res.data.data\r\n\r\n                getData.uid= dt.id\r\n                getData.email= dt.email\r\n                getData.profile_image= dt.profile_image\r\n                getData.displayName= dt.nick_name\r\n                getData.uidLive= dt.order[1].u_id\r\n                getData.uidDemo= dt.order[0].u_id\r\n                getData.am_usdt= dt.b\r\n                getData.vip= dt.vip\r\n                getData.vip_lv= dt.level_vip\r\n                getData.pen_commiss= dt.pending_commission\r\n                getData.ref= dt.ref\r\n                getData.upid= dt.upid\r\n                getData.c2fa= dt.fa2\r\n                getData.id_front= dt.id_front\r\n                getData.id_back= dt.id_back,\r\n                getData.first_name= dt.first_name\r\n                getData.last_name= dt.last_name\r\n                getData.verify= dt.verify\r\n                getData.num_secu= dt.num_secury\r\n                getData.country= dt.c\r\n                getData.so_cmnd= dt.so_cmnd\r\n                \r\n                \r\n        \r\n                getData.blLive = dt.order[1].balance\r\n                getData.blDemo = dt.order[0].balance\r\n                getData.balance = dt.balance\r\n\r\n                localStorage.setItem('INFO', JSON.stringify(dt))\r\n                //localStorage.removeItem('isLog')\r\n\r\n            }else if(res.data.success == 4){\r\n                localStorage.removeItem('INFO')\r\n                localStorage.removeItem('tokenUser')\r\n                window.location.href = window.location.origin + '/login'\r\n                //let checkLog = localStorage.getItem('isLog')\r\n                //localStorage.setItem('isLog', true);\r\n                //if(!checkLog){\r\n                //    localStorage.setItem('isLog', true)\r\n                    //window.location.href = window.location.origin + '/login'\r\n                //}\r\n                \r\n            }\r\n        })\r\n      }else{\r\n        this.iSLogin = false\r\n      }\r\n\r\n    },\r\n    isThemeDark(val) {\r\n      const color = this.navbarColor == \"#fff\" && val ? \"#02142b\" : \"#fff\"\r\n      this.updateNavbarColor(color)\r\n    },\r\n    \"$store.state.mainLayoutType\"(val) {\r\n      this.setNavMenuVisibility(val)\r\n      this.disableThemeTour = true\r\n    }\r\n  },\r\n    computed: {\r\n      bodyOverlay() { return this.$store.state.bodyOverlay },\r\n      contentAreaClass() {\r\n        if(this.mainLayoutType === \"vertical\") {\r\n          if      (this.verticalNavMenuWidth == \"default\") return \"content-area-reduced\"\r\n          else if (this.verticalNavMenuWidth == \"reduced\") return \"content-area-lg\"\r\n          else return \"content-area-full\"\r\n        }\r\n        // else if(this.mainLayoutType === \"boxed\") return \"content-area-reduced\"\r\n        else return \"content-area-full\"\r\n      },\r\n      footerClasses() {\r\n        return {\r\n          'footer-hidden': this.footerType == 'hidden',\r\n          'footer-sticky': this.footerType == 'sticky',\r\n          'footer-static': this.footerType == 'static',\r\n        }\r\n      },\r\n      isThemeDark()     { return this.$store.state.theme == 'dark' },\r\n      layoutTypeClass() { return `main-${this.mainLayoutType}` },\r\n      mainLayoutType()  { return this.$store.state.mainLayoutType  },\r\n      navbarClasses()   {\r\n        return {\r\n          'navbar-hidden'   : this.navbarType == 'hidden',\r\n          'navbar-sticky'   : this.navbarType == 'sticky',\r\n          'navbar-static'   : this.navbarType == 'static',\r\n          'navbar-floating' : this.navbarType == 'floating',\r\n        }\r\n      },\r\n      isAppPage() {\r\n        return this.$route.meta.no_scroll || false\r\n      },\r\n      verticalNavMenuWidth() { return this.$store.state.verticalNavMenuWidth },\r\n      windowWidth(){ \r\n          return this.$store.state.windowWidth \r\n        },\r\n    },\r\n    methods: {\r\n      changeRouteTitle(title) {\r\n        this.routeTitle = title\r\n      },\r\n      updateNavbar(val) {\r\n        if (val == \"static\") this.updateNavbarColor(this.isThemeDark ? \"#02142b\" : \"#fff\")\r\n        this.navbarType = val\r\n      },\r\n      updateNavbarColor(val) {\r\n        this.navbarColor = val\r\n        if (val == \"#fff\") this.isNavbarDark = false\r\n        else this.isNavbarDark = true\r\n      },\r\n      updateFooter(val) {\r\n        this.footerType = val\r\n      },\r\n      setNavMenuVisibility(layoutType) {\r\n        if((layoutType === 'horizontal' && this.windowWidth >= 1200) || (layoutType === \"vertical\" && this.windowWidth < 1200)) {\r\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n          this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\r\n        }\r\n        else {\r\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\r\n        }\r\n      },\r\n      updateRouterTransition(val) {\r\n        this.routerTransition = val\r\n      },\r\n      toggleHideScrollToTop(val) {\r\n        this.hideScrollToTop = val\r\n      },\r\n      khoiTaoPrintUser(){\r\n        let gData = JSON.parse(localStorage.getItem('INFO'))\r\n        if(gData){\r\n          getData.uid= gData.id,\r\n          getData.email= gData.email,\r\n          getData.profile_image= gData.profile_image,\r\n          getData.displayName= gData.nick_name,\r\n          getData.uidLive= gData.order[1].u_id,\r\n          getData.uidDemo= gData.order[0].u_id,\r\n          getData.vip= gData.vip,\r\n          getData.vip_lv= gData.level_vip,\r\n          getData.pen_commiss= gData.pending_commission,\r\n          getData.ref= gData.ref,\r\n          getData.c2fa= gData.fa2,\r\n          getData.id_front= gData.id_front,\r\n          getData.id_back= gData.id_back,\r\n          getData.first_name= gData.first_name,\r\n          getData.last_name= gData.last_name,\r\n          getData.verify= gData.verify,\r\n          getData.num_secu= gData.num_secury,\r\n          getData.country= gData.c,\r\n          getData.blLive = gData.order[1].balance\r\n          getData.blDemo = gData.order[0].balance\r\n          getData.balance = gData.balance,\r\n          getData.mkt = gData.mkt\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      \r\n      let token = localStorage.hasOwnProperty('tokenUser')\r\n      if(token){\r\n        this.iSLogin = true\r\n      }\r\n\r\n      this.khoiTaoPrintUser();\r\n      \r\n\r\n      const color = this.navbarColor == \"#fff\" && this.isThemeDark ? \"#02142b\" : this.navbarColor\r\n      this.updateNavbarColor(color)\r\n      this.setNavMenuVisibility(this.$store.state.mainLayoutType)\r\n      // Dynamic Watchers for tour\r\n      // Reason: Once tour is disabled it is not required to enable it.\r\n      // So, watcher is required for just disabling it.\r\n      this.dynamicWatchers.windowWidth = this.$watch(\"$store.state.windowWidth\", (val) => {\r\n        if(val < 1200) {\r\n          this.disableThemeTour = true\r\n          this.dynamicWatchers.windowWidth()\r\n        }\r\n      })\r\n\r\n      this.dynamicWatchers.verticalNavMenuWidth = this.$watch(\"$store.state.verticalNavMenuWidth\", () => {\r\n        this.disableThemeTour = true\r\n        this.dynamicWatchers.verticalNavMenuWidth()\r\n      })\r\n\r\n      this.dynamicWatchers.rtl = this.$watch(\"$vs.rtl\", () => {\r\n        this.disableThemeTour = true\r\n        this.dynamicWatchers.rtl()\r\n      })\r\n    },\r\n    beforeDestroy() {\r\n      Object.keys(this.dynamicWatchers).map(i => {\r\n        this.dynamicWatchers[i]()\r\n        delete this.dynamicWatchers[i]\r\n      })\r\n    }\r\n}\r\n",null]}