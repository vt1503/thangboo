{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/apps/eCommerce/ECommerceShop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/apps/eCommerce/ECommerceShop.vue","mtime":1573301422000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  AisClearRefinements,\n  AisConfigure,\n  AisHierarchicalMenu,\n  AisHits,\n  AisInstantSearch,\n  AisNumericMenu,\n  AisPagination,\n  AisRangeInput,\n  AisRatingMenu,\n  AisRefinementList,\n  AisSearchBox,\n  AisSortBy,\n  AisStats\n} from 'vue-instantsearch'\nimport algoliasearch from 'algoliasearch/lite'\n\nexport default {\n  components: {\n    ItemGridView: () => import(\"./components/ItemGridView.vue\"),\n    ItemListView: () => import(\"./components/ItemListView.vue\"),\n    AisClearRefinements,\n    AisConfigure,\n    AisHierarchicalMenu,\n    AisHits,\n    AisInstantSearch,\n    AisNumericMenu,\n    AisPagination,\n    AisRangeInput,\n    AisRatingMenu,\n    AisRefinementList,\n    AisSearchBox,\n    AisSortBy,\n    AisStats\n  },\n  data() {\n    return {\n      searchClient: algoliasearch(\n        'latency',\n        '6be0576ff61c053d5f9a3225e2a90f76'\n      ),\n      // Filter Sidebar\n      isFilterSidebarActive: true,\n      clickNotClose: true,\n      currentItemView: 'item-grid-view',\n      numericItems: [\n        { label: 'All' },\n        { label: '<= $10', end: 10 },\n        { label: '$10 - $100', start: 10, end: 100 },\n        { label: '$100 - $500', start: 100, end: 500 },\n        { label: '>= $500', start: 500 },\n      ],\n      algoliaCategories: [\n        'hierarchicalCategories.lvl0',\n        'hierarchicalCategories.lvl1',\n        'hierarchicalCategories.lvl2',\n        'hierarchicalCategories.lvl3',\n      ]\n    }\n  },\n  computed: {\n    toValue() {\n      return (value, range) => [\n        value.min !== null ? value.min : range.min,\n        value.max !== null ? value.max : range.max,\n      ]\n    },\n\n    // GRID VIEW\n    isInCart() {\n      return (itemId) => this.$store.getters['eCommerce/isInCart'](itemId)\n    },\n    isInWishList() {\n      return (itemId) => this.$store.getters['eCommerce/isInWishList'](itemId)\n    },\n    windowWidth() { return this.$store.state.windowWidth }\n  },\n  watch: {\n    windowWidth() {\n      this.setSidebarWidth()\n    }\n  },\n  methods: {\n    setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isFilterSidebarActive = this.clickNotClose = false\n      } else {\n        this.isFilterSidebarActive = this.clickNotClose = true\n      }\n    },\n\n    // GRID VIEW - ACTIONS\n    toggleFilterSidebar() {\n      if (this.clickNotClose) return\n      this.isFilterSidebarActive = !this.isFilterSidebarActive\n    },\n    toggleItemInWishList(item) {\n      this.$store.dispatch('eCommerce/toggleItemInWishList', item)\n    },\n    additemInCart(item) {\n      this.$store.dispatch('eCommerce/additemInCart', item)\n    },\n    cartButtonClicked(item) {\n      this.isInCart(item.objectID) ? this.$router.push('/apps/eCommerce/checkout').catch(() => {}) : this.additemInCart(item)\n    }\n  },\n  created() {\n    this.setSidebarWidth()\n  }\n}\n\n",null]}