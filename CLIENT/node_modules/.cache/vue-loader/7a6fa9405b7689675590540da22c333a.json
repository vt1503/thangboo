{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/HorizontalNavMenuHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/trade/navbar/components/HorizontalNavMenuHeader.vue","mtime":1649894645181},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport HNavMenuGroup from \"./HorizontalNavMenuGroup.vue\"\r\nimport HNavMenuItem from \"./HorizontalNavMenuItem.vue\"\r\n\r\nexport default {\r\n  props: {\r\n    header: {\r\n      type: Object,\r\n      requried: true\r\n    },\r\n    openOnHover: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  components: {\r\n    HNavMenuGroup,\r\n    HNavMenuItem\r\n  },\r\n  data() {\r\n    return {\r\n      showChildren: false,\r\n      isHovered: false,\r\n      dropRight: false,\r\n    }\r\n  },\r\n  computed: {\r\n    isHeaderActive() {\r\n      const path        = this.$route.fullPath\r\n      let active        = false\r\n      const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\r\n\r\n      this.header.items.forEach((item) => {\r\n\r\n        // If item is group\r\n        if (item.submenu) {\r\n          if(this.checkGrpChildrenActive(item)) { active = true }\r\n        } else if (item.url) {\r\n          if (path == item.url || routeParent == item.slug) { active = true }\r\n        }\r\n      })\r\n\r\n      return active\r\n    }\r\n  },\r\n  watch: {\r\n    showChildren() {\r\n      this.$nextTick(() => {\r\n        if(this.showChildren) {\r\n          let dd = this.$refs.headerDropdown\r\n          if(dd.getBoundingClientRect().left + dd.offsetWidth - (window.innerWidth - 16) >= 0) {\r\n            this.dropRight = true\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    checkGrpChildrenActive(group) {\r\n\r\n      const path        = this.$route.fullPath\r\n      let active        = false\r\n      const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\r\n\r\n      if (group.submenu) {\r\n        group.submenu.forEach((item) => {\r\n          if ((path == item.url || routeParent == item.slug) && item.slug) { active = true }\r\n          else if (item.submenu) { this.checkGrpChildrenActive(item) ? active = true : null }\r\n        })\r\n      }\r\n\r\n      return active\r\n    },\r\n    hovered(val=true) {\r\n      this.isHovered = val\r\n      if(this.openOnHover) {\r\n        val ? this.showChildren = true : this.showChildren = false\r\n      }\r\n    },\r\n  }\r\n}\r\n",null]}