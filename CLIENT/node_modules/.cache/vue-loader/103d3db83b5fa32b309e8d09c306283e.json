{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/views/components/vuesax/dialogs/DialogsPrompt.vue?vue&type=template&id=466d9826&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/views/components/vuesax/dialogs/DialogsPrompt.vue","mtime":1572586030000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\t<vx-card title=\"Prompt\" code-toggler>\n\n\t\t<p>To add a dialog of type prompt we have a global function a completely independent component <code>vs-prompt</code>. This allows more flexibility with the input and ability to add any type of input and components</p>\n\n\t\t<div class=\"my-3\">\n\t\t\t<span>The properties of the component are equivalent to those of the global function only with the vs before each property something like</span>\n\t\t\t<vx-list :list='[\"function: color\", \"component = vsColor\"]'></vx-list>\n\t\t</div>\n\n\t\t<div class=\"demo-alignment\">\n\t\t\t<vs-button @click=\"activePrompt = true\" color=\"primary\" type=\"border\">Run prompt</vs-button>\n\t\t\t<vs-button @click=\"activePrompt2 = true\" color=\"primary\" type=\"border\">Run prompt inputs</vs-button>\n\t\t\t<div class=\"op-block\">Security Code: {{ val == null ? 'null' : val }}</div>\n\t\t\t<div class=\"op-block\">\n\t\t\t\tName: {{valMultipe.value1}} |\n\t\t\t\tLast Name: {{valMultipe.value2}}\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<vs-prompt\n\t\t\t@cancel=\"val=''\"\n\t\t\t@accept=\"acceptAlert\"\n\t\t\t@close=\"close\"\n\t\t\t:active.sync=\"activePrompt\">\n\t\t\t<div class=\"con-exemple-prompt\">\n\t\t\t\t<span>Enter the security code</span>\n\t\t\t<vs-input placeholder=\"Code\" vs-placeholder=\"Code\" v-model=\"val\" class=\"mt-3 w-full\" />\n\t\t\t</div>\n\t\t</vs-prompt>\n\n\t\t<vs-prompt\n\t\t\t@cancel=\"clearValMultiple\"\n\t\t\t@accept=\"acceptAlert\"\n\t\t\t@close=\"close\"\n\t\t\t:is-valid=\"validName\"\n\t\t\t:active.sync=\"activePrompt2\">\n\t\t\t<div class=\"con-exemple-prompt\">\n\t\t\t\tEnter your first and last name to <b>continue</b>.\n\t\t\t<vs-input placeholder=\"Name\" v-model=\"valMultipe.value1\" class=\"mt-4 mb-2 w-full\" />\n\t\t\t<vs-input placeholder=\"Last Name\" v-model=\"valMultipe.value2\" class=\"w-full\" />\n\n\t\t\t<vs-alert :active=\"!validName\" color=\"danger\" vs-icon=\"new_releases\" class=\"mt-4\" >\n\t\t\t\tFields can not be empty please enter the data\n\t\t\t</vs-alert>\n\t\t\t</div>\n\t\t</vs-prompt>\n\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;div class=&quot;demo-alignment&quot;&gt;\n      &lt;vs-button @click=&quot;activePrompt = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;activePrompt2 = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt inputs&lt;/vs-button&gt;\n      &lt;div class=&quot;op-block&quot;&gt;Security Code: {{ \"\\{\\{ val == null ? 'null' : val \\}\\}\" }} &lt;/div&gt;\n      &lt;div class=&quot;op-block&quot;&gt;\n        Name: {{ \"\\{\\{ valMultipe.value1 \\}\\}\" }} | Last Name: {{ \"\\{\\{ valMultipe.value2 \\}\\}\" }}\n      &lt;/div&gt;\n\n    &lt;/div&gt;\n\n    &lt;vs-prompt\n      @cancel=&quot;val=''&quot;\n      @accept=&quot;acceptAlert&quot;\n      @close=&quot;close&quot;\n      :active.sync=&quot;activePrompt&quot;&gt;\n      &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n        &lt;span&gt;Enter the security code&lt;/span&gt;\n      &lt;vs-input placeholder=&quot;Code&quot; vs-placeholder=&quot;Code&quot; v-model=&quot;val&quot; class=&quot;mt-3 w-full&quot; /&gt;\n      &lt;/div&gt;\n    &lt;/vs-prompt&gt;\n\n    &lt;vs-prompt\n      @cancel=&quot;clearValMultiple&quot;\n      @accept=&quot;acceptAlert&quot;\n      @close=&quot;close&quot;\n      :is-valid=&quot;validName&quot;\n      :active.sync=&quot;activePrompt2&quot;&gt;\n      &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n        Enter your first and last name to &lt;b&gt;continue&lt;/b&gt;.\n      &lt;vs-input placeholder=&quot;Name&quot; v-model=&quot;valMultipe.value1&quot; class=&quot;mt-4 mb-2 w-full&quot; /&gt;\n      &lt;vs-input placeholder=&quot;Last Name&quot; v-model=&quot;valMultipe.value2&quot; class=&quot;w-full&quot; /&gt;\n\n      &lt;vs-alert :vs-active=&quot;!validName&quot; color=&quot;danger&quot; vs-icon=&quot;new_releases&quot; &gt;\n        Fields can not be empty please enter the data\n      &lt;/vs-alert&gt;\n      &lt;/div&gt;\n    &lt;/vs-prompt&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data(){\n    return {\n      activePrompt:false,\n      activePrompt2:false,\n      val:'',\n      valMultipe:{\n        value1:'',\n        value2:''\n      },\n    }\n  },\n  computed:{\n    validName(){\n      return (this.valMultipe.value1.length &gt; 0 &amp;&amp; this.valMultipe.value2.length &gt; 0)\n    }\n  },\n  methods:{\n    acceptAlert(){\n      this.$vs.notify({\n        color:'success',\n        title:'Accept Selected',\n        text:'Lorem ipsum dolor sit amet, consectetur'\n      })\n    },\n    close(){\n      this.$vs.notify({\n        color:'danger',\n        title:'Closed',\n        text:'You close a dialog!'\n      })\n    },\n    clearValMultiple() {\n      this.valMultipe.value1 = &quot;&quot;;\n      this.valMultipe.value2 = &quot;&quot;;\n    }\n  }\n}\n&lt;/script&gt;\n\t\t</template>\n\n\t</vx-card>\n",null]}