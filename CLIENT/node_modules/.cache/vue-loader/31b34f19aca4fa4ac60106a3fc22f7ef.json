{"remainingRequest":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tule/Code/winbo.trade/src/pages/user/LogRegForGet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tule/Code/winbo.trade/src/pages/user/LogRegForGet.vue","mtime":1650023660028},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tule/Code/winbo.trade/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tule/Code/winbo.trade/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport AuthenticationService from '@/services/AuthenticationService'\r\nimport getData from '@/pages/trade/navbar/components/data.json'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n        activeSlide: false,\r\n        ssDownSend: '30s',\r\n        disSendMail: false,\r\n        isSubmitReg: false,\r\n        isG2FA: 0,\r\n        hideTbResend: true,\r\n        hideTbForgot: true,\r\n        ldFrom: false,\r\n        activeL1: true,\r\n        activeL2: false,\r\n        activeE1: true,\r\n        activeE2: false,\r\n        activeRs1: true,\r\n        activeRs2: false,\r\n        activeRss1: true,\r\n        activeRss2: false,\r\n        activeLogin:false,\r\n        activeRegister:false,\r\n        activeResendVerifyEmail: false,\r\n        activeFogotPass: false,\r\n        activeResetPass: false,\r\n        passTypeReg: 'password',\r\n        passTypeLog: 'password',\r\n        passTypeReset: 'password',\r\n        passTypeReReset: 'password',\r\n        emailResend: '',\r\n        emailForgot: '',\r\n        emailReg: '',\r\n        emailReset: '',\r\n        email: '',\r\n        password: '',\r\n        passwordReg: '',\r\n        passwordReset: '',\r\n        passwordReReset: '',\r\n        codeReset: '',\r\n        codeRef: '',\r\n        nickName: '',\r\n        error: null,\r\n        domain: '',\r\n        msgEmReg: '',\r\n        msgPassReg: '',\r\n        msgNickName: '',\r\n        msgEmailForgot: '',\r\n        msgEmailResend: '',\r\n        msgEmReset: '',\r\n        msgPassReset: '',\r\n        msgPassReReset: '',\r\n        msgCoSeReset: '',\r\n\r\n        saveToken: '',\r\n        G2FACodeEnter: '',\r\n        colorLoading: '#fff'\r\n    }\r\n  },\r\n  computed:{\r\n      disabledLogin() {\r\n          if(this.email !== '' && this.checkReg(this.email) && this.password !== ''){\r\n              return true\r\n          }\r\n      },\r\n\r\n      countPassReg(){\r\n          return this.passwordReg.length\r\n      },\r\n\r\n      countNickNameReg(){\r\n          return this.nickName.length\r\n      },\r\n      \r\n      countPassReset(){\r\n          return this.passwordReset.length\r\n      },\r\n      countPassReReset(){\r\n          return this.passwordReReset.length\r\n      }\r\n      \r\n  },\r\n  watch: {\r\n    \"$route\"() {\r\n        let path = this.$router.currentRoute.path\r\n        this.activeSlide = false\r\n        // console.log(path)\r\n        if(path == '/login'){\r\n            this.activeLogin = true\r\n            this.activeRegister = false\r\n            this.activeFogotPass = false\r\n            this.activeResendVerifyEmail = false\r\n            this.slepShowSlide()\r\n        }\r\n\r\n        if(path == '/register'){\r\n            this.activeRegister = true\r\n            this.activeLogin = false\r\n            this.activeFogotPass = false\r\n            this.activeResendVerifyEmail = false\r\n            this.slepShowSlide()\r\n        }\r\n\r\n        if(path == '/forgot-password'){\r\n            this.activeFogotPass = true\r\n            this.activeLogin = false\r\n            this.activeRegister = false\r\n            this.activeResendVerifyEmail = false\r\n            this.slepShowSlide()\r\n        }\r\n\r\n        if(path == '/register-resend-verify-email'){\r\n            this.activeResendVerifyEmail = true\r\n            this.activeLogin = false\r\n            this.activeRegister = false\r\n            this.activeFogotPass = false\r\n            this.slepShowSlide()\r\n        }\r\n        \r\n    }\r\n  },\r\n  methods: {\r\n    replaceAll(str, find, replace) {\r\n        return str.replace(new RegExp(find, 'g'), replace);\r\n    },\r\n\r\n    openSite(){\r\n        let e = this.replaceAll(this.emailReg, '@', 'ACONG');\r\n        let a = this.replaceAll(e, /\\./g, 'DOT');\r\n        window.open('https://t.me/ares_idefibo_bot?start=BOREG_'+a);\r\n    },\r\n\r\n    slepShowSlide(){\r\n        setTimeout(() => {\r\n            this.activeSlide = true\r\n        }, 100)\r\n    },\r\n    \r\n    countDownResendMail(){\r\n        \r\n        this.$vs.loading({\r\n            //background: this.backgroundLoading,\r\n            color: this.colorLoading,\r\n            container: \"#button-with-loading\",\r\n            scale: 0.45\r\n        })\r\n        let giay = 30\r\n        let countD = setInterval(() => {\r\n            this.ssDownSend = giay + 's'\r\n            this.disSendMail = true\r\n            if(giay == 0){\r\n                this.disSendMail = false\r\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n                this.ssDownSend = 'Yêu cầu một email mới'\r\n                clearInterval(countD)\r\n            }\r\n            giay--\r\n        }, 1000)\r\n    },\r\n\r\n    reSendMail(){\r\n        this.emailResend = this.emailReg\r\n        this.submitFormResendActive()\r\n        this.countDownResendMail()\r\n    },\r\n\r\n    checkReg(vl){\r\n        let reg = /\\S+@\\S+\\.\\S+/\r\n        return reg.test(vl)\r\n    },  \r\n    showPassLogin(){\r\n        this.passTypeLog = this.passTypeLog === 'password' ? 'text' : 'password'\r\n    },  \r\n    \r\n    showPassReg(){\r\n        this.passTypeReg = this.passTypeReg === 'password' ? 'text' : 'password'\r\n    },\r\n\r\n    showPassReset(){\r\n        this.passTypeReset = this.passTypeReset === 'password' ? 'text' : 'password'\r\n    },\r\n\r\n    showPassReReset(){\r\n        this.passTypeReReset = this.passTypeReReset === 'password' ? 'text' : 'password'\r\n    },\r\n\r\n    submitFormResetPass(){\r\n        let isActive = true\r\n        \r\n        if(this.emailReset === '' || !this.checkReg(this.emailReset) ){\r\n            this.msgEmReset = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.'\r\n            return;\r\n        }else{\r\n            isActive = true\r\n            this.msgEmReset = ''\r\n        }\r\n\r\n        if(this.passwordReset.length < 6 || this.passwordReset.length > 20){\r\n            this.msgPassReset = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.'\r\n            return;\r\n        }else{\r\n            isActive = true\r\n            this.msgPassReset = ''\r\n        }\r\n\r\n        if(this.passwordReReset.length < 6 || this.passwordReReset.length > 20){\r\n            this.msgPassReReset = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.'\r\n            return;\r\n        }else{\r\n            isActive = true\r\n            this.msgPassReReset = ''\r\n        }\r\n\r\n        if(this.passwordReset != this.passwordReReset){\r\n            this.msgPassReReset = 'Mật khẩu của bạn không trùng khớp.'\r\n            return;\r\n            \r\n        }else{\r\n            isActive = true\r\n            this.msgPassReReset = ''\r\n        }\r\n     \r\n\r\n        // if(this.codeReset == ''){\r\n        //     this.msgCoSeReset = 'Mã bảo vệ không được rỗng.'\r\n        //     isActive = false\r\n        // }else{\r\n        //     isActive = true\r\n        //     this.msgCoSeReset = ''\r\n        // }\r\n\r\n        if(isActive){\r\n            this.ldFrom = true\r\n\r\n            let obj = {\r\n                email: this.emailReset,\r\n                password: this.passwordReset,\r\n                //code_secure: this.codeReset\r\n            }\r\n\r\n            AuthenticationService.changePassword(obj)\r\n            .then((res) => {\r\n                if(res.data.success == 1){\r\n\r\n                    this.$vs.notify({\r\n                        text: 'Mật khẩu đã được đổi thành công.',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        color: 'success'\r\n                    });\r\n                    window.location.href = window.location.origin + '/login'\r\n                }else if(res.data.success == 2){\r\n                    this.$vs.notify({\r\n                        text: 'Mã 2FA không đúng',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    submitFormReg() {\r\n\r\n     \r\n      if(this.emailReg === '' || !this.checkReg(this.emailReg)){\r\n          this.msgEmReg = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.'\r\n          return; \r\n      }else{\r\n          this.msgEmReg = ''\r\n      }\r\n\r\n      if(this.passwordReg === '' || this.passwordReg.length < 6 || this.passwordReg.length > 20){\r\n          this.msgPassReg = 'Mật khẩu của bạn ít nhất phải 6 đến 20 ký tự.'\r\n          return;\r\n      }else{\r\n          this.msgPassReg = ''\r\n      }\r\n\r\n      const regex = /^[a-zA-Z0-9-_]+$/;\r\n\r\n      if(this.nickName === '' ||  this.nickName.length < 6 || this.nickName.length > 20 || !regex.test(this.nickName)){\r\n          this.msgNickName = 'Biệt danh phải từ 6 đến 20 ký tự, bắt đầu bằng chữ và không chứa ký tự đặc biệt.'\r\n         return;\r\n      }else{\r\n          this.msgNickName = ''\r\n      }\r\n\r\n      let isActive = true;\r\n\r\n      if(isActive){\r\n          this.ldFrom = true\r\n\r\n          let obj = {\r\n              email: this.emailReg,\r\n              password: this.passwordReg,\r\n              nick_name: this.nickName,\r\n              upline_id: this.codeRef\r\n          }\r\n\r\n          //\r\n\r\n          AuthenticationService.registerUser(obj)\r\n          .then((res) => {\r\n              this.ldFrom = false\r\n              if(res.data.success == 1){\r\n                this.isSubmitReg = true  \r\n                setTimeout(() => {\r\n                    this.countDownResendMail();\r\n                }, 500);\r\n                \r\n                this.$vs.notify({\r\n                    title: 'Đăng ký thành công',\r\n                    text: 'Chúng tôi đã gửi 1 một liên kết kích hoạt đến tài khoản của bạn.',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check',\r\n                    color: 'success'\r\n                });\r\n              }else if(res.data.success == 2){\r\n                this.$vs.notify({\r\n                    text: 'Email này đã tồn tại',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'warning'\r\n                });\r\n              }else if(res.data.success == 3){\r\n                this.$vs.notify({\r\n                    text: 'Biệt danh này đã tồn tại',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'warning'\r\n                });\r\n              }\r\n\r\n          })\r\n      }\r\n\r\n       \r\n      \r\n    },\r\n\r\n\r\n    submitFormForgot(){\r\n        let isActive = true\r\n\r\n        if(this.emailForgot === '' || !this.checkReg(this.emailForgot) ){\r\n            this.msgEmailForgot = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.'\r\n            isActive = false\r\n        }else{\r\n            isActive = true\r\n            this.msgEmailForgot = ''\r\n        }\r\n\r\n        if(isActive){\r\n            this.ldFrom = true\r\n\r\n            let obj = {\r\n                email: this.emailForgot\r\n            }\r\n            \r\n            AuthenticationService.forgotPassUser(obj)\r\n            .then((res) => {\r\n                this.ldFrom = false\r\n                if(res.data.success){\r\n                    this.hideTbForgot = false\r\n                }\r\n            })\r\n        }\r\n        \r\n    },\r\n\r\n\r\n    submitFormResendActive(){\r\n        let isActive = true\r\n\r\n        if(this.emailResend === '' || !this.checkReg(this.emailResend) ){\r\n            this.msgEmailResend = 'Địa chỉ email không hợp lệ. Vui lòng thử lại.'\r\n            isActive = false\r\n        }else{\r\n            this.msgEmailResend = ''\r\n            isActive = true\r\n        }\r\n\r\n        if(isActive){\r\n            this.ldFrom = true\r\n\r\n            let obj = {\r\n                email: this.emailResend\r\n            }\r\n            AuthenticationService.resendConfirUser(obj)\r\n            .then((res) => {\r\n                this.ldFrom = false\r\n                if(res.data.success){\r\n                    this.hideTbResend = false\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    getInfoLogin(){\r\n        AuthenticationService.getInfoUser()\r\n        .then((res) => {\r\n\r\n            if(res.data.success == 1){\r\n  \r\n                let dt = res.data.data\r\n\r\n                getData.uid= dt.id\r\n                getData.email= dt.email\r\n                getData.profile_image= dt.profile_image\r\n                getData.displayName= dt.nick_name\r\n                getData.uidLive= dt.order[1].u_id\r\n                getData.uidDemo= (dt.order[0] || {}).u_id || 0;\r\n                getData.am_usdt= dt.b\r\n                getData.vip= dt.vip\r\n                getData.vip_lv= dt.level_vip\r\n                getData.pen_commiss= dt.pending_commission\r\n                getData.ref= dt.ref\r\n                getData.upid= dt.upid\r\n                getData.c2fa= dt.fa2\r\n                getData.id_front= dt.id_front\r\n                getData.id_back= dt.id_back,\r\n                getData.first_name= dt.first_name\r\n                getData.last_name= dt.last_name\r\n                getData.verify= dt.verify\r\n                getData.num_secu= dt.num_secury\r\n                getData.country= dt.c\r\n                getData.so_cmnd= dt.so_cmnd\r\n                \r\n                \r\n        \r\n                getData.blLive = dt.order[1].balance\r\n                getData.blDemo = (dt.order[0] || {}).balance || 0;\r\n                getData.balance = dt.balance\r\n\r\n                localStorage.setItem('INFO', JSON.stringify(dt))\r\n                //localStorage.removeItem('isLog')\r\n\r\n                this.$router.push('/trading').catch(() => {})\r\n            }\r\n        })\r\n    },\r\n\r\n    loginForm () {\r\n        \r\n        this.ldFrom = true\r\n        AuthenticationService.loginUser({\r\n          email: this.email,\r\n          password: this.password\r\n        })\r\n        .then((res) => {\r\n            this.ldFrom = false;\r\n            let g = res.data;\r\n            if(g.success == 1){\r\n                // this.$vs.notify({\r\n                //     text: 'Đăng nhập thành công.',\r\n                //     iconPack: 'feather',\r\n                //     icon: 'icon-check',\r\n                //     color: 'success'\r\n                // });\r\n\r\n                // let gData = d.data;\r\n                \r\n                // getData.uid= gData.id,\r\n                // getData.email= gData.email,\r\n                // getData.profile_image= gData.profile_image,\r\n                // getData.displayName= gData.nick_name,\r\n                // getData.uidLive= gData.order[1].u_id,\r\n                // getData.uidDemo= gData.order[0].u_id,\r\n                // getData.vip= gData.vip,\r\n                // getData.vip_lv= gData.level_vip,\r\n                // getData.pen_commiss= gData.pending_commission,\r\n                // getData.ref= gData.ref,\r\n                // getData.c2fa= gData.fa2,\r\n                // getData.id_front= gData.id_front,\r\n                // getData.id_back= gData.id_back,\r\n                // getData.first_name= gData.first_name,\r\n                // getData.last_name= gData.last_name,\r\n                // getData.verify= gData.verify,\r\n                // getData.num_secu= gData.num_secury,\r\n                // getData.country= gData.c,\r\n                // getData.blLive = gData.order[1].balance\r\n                // getData.blDemo = gData.order[0].balance\r\n                // getData.balance = gData.balance,\r\n                // getData.mkt = gData.mkt\r\n\r\n                if(g.g_2fa){\r\n                    this.isG2FA = g.g_2fa\r\n                    this.saveToken = g.token\r\n                    return\r\n                }\r\n                localStorage.setItem('tokenUser', g.token);\r\n  \r\n\r\n                this.activeLogin = false;\r\n\r\n                this.getInfoLogin();\r\n                \r\n                //this.$router.push('/user/affiliate/general').catch(() => {})\r\n                //window.location.href = window.location.origin + '/user/affiliate/general';\r\n                \r\n            }else if(res.data.success == 0){\r\n                this.$vs.notify({\r\n                    text: 'Email hoặc mật khẩu không đúng. Vui lòng nhập lại',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            }else if(res.data.success == 3){\r\n                this.$vs.notify({\r\n                    text: 'Tài khoản chưa được kích hoạt!',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            }\r\n            \r\n        })\r\n        \r\n    },\r\n\r\n    loginFormAuthG2FA(){\r\n        let obj = {\r\n            code: this.G2FACodeEnter,\r\n            token: this.saveToken\r\n        }\r\n        AuthenticationService.loginGG2FA(obj)\r\n        .then((res) => {\r\n            if(res.data.success == 1){\r\n\r\n                localStorage.setItem('tokenUser', this.saveToken);\r\n                \r\n                this.activeLogin = false\r\n\r\n                this.getInfoLogin();\r\n                //this.$router.push('/trading').catch(() => {})\r\n                //this.$router.push('/user/affiliate/general').catch(() => {})\r\n                //window.location.href = window.location.origin + '/user/affiliate/general';\r\n\r\n            }else if(res.data.success == 6){\r\n                return this.$vs.notify({\r\n                    text: 'Mã đăng nhập không hợp lệ hoặc đã hết hạn.',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check',\r\n                    color: 'warning'\r\n                });\r\n            }\r\n        })\r\n\r\n        \r\n    },\r\n\r\n    redirectHome(){\r\n        this.activeSlide = false\r\n        this.$router.push('/')\r\n    }\r\n  },\r\n  created() {\r\n\r\n    let path = this.$router.currentRoute.path\r\n\r\n    \r\n    if(path == '/login'){\r\n        this.activeLogin = true\r\n        this.slepShowSlide()\r\n        \r\n        let at = this.$route.query.a\r\n\r\n        if(at != undefined){\r\n            let obj = {\r\n                token: at\r\n            }\r\n            AuthenticationService.getTokenActive(obj)\r\n            .then((res) => {\r\n                if(res.data.success){\r\n                    this.$vs.notify({\r\n                        text: 'Tài khoản của bạn đã được kích hoạt.',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        color: 'success'\r\n                    });\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n    if(path == '/register'){\r\n        this.activeRegister = true\r\n        this.slepShowSlide()\r\n        let gr = this.$route.query.r\r\n        if(gr != undefined){\r\n            this.codeRef = gr\r\n        }\r\n    }\r\n\r\n    if(path == '/reset-password'){\r\n        this.activeResetPass = true\r\n        this.slepShowSlide()\r\n        let gr = this.$route.query.e\r\n        if(gr != undefined){\r\n            this.emailReset = gr\r\n        }\r\n    }\r\n  },\r\n}\r\n",null]}